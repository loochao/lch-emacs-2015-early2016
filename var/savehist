;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(coding-system-history compile-history org-read-date-history evil-ex-history shell-command-history woman-topic-history dired-shell-command-history dired-regexp-history w3m-input-url-history regexp-history locate-history-list viper-ex-history ssh-history query-replace-history face-name-history buffer-name-history minibuffer-history input-method-history file-name-history gud-gdb-history extended-command-history ido-buffer-history ido-file-history))
(setq coding-system-history '("gbk"))
(setq org-read-date-history '("+2    "))
(setq dired-shell-command-history '("chmod 755" "y" "dos2unix "))
(setq dired-regexp-history '(".*" ".*copy" ".*copy.*" "zip" "*" "*.*" "el" "uvz"))
(setq w3m-input-url-history '("https://github.com/syl20bnr/spacemacs/blob/master/doc/DOCUMENTATION.org" "http://cn.nytimes.com/culture/20130625/c25five/" "http://www.urbandictionary.com/random.php" "http://www.amazon.com/Vivitek-3D-Ready-Projector-Certified-Refurbished/dp/B014X7N7SW/ref=sr_1_cc_4?s=aps&ie=UTF8&qid=1449688554&sr=1-4-catcorr&keywords=pocket+projector+720p" "http://dict.cn/search/?q=sensible" "http://dict.cn/search/?q=consecutive" "http://dict.cn/search/?q=bootstrap" "http://dict.cn/weep" "http://juhai.dict.cn/weep" "http://dict.cn/search/?q=weep" "http://dict.cn/search/?q=bride" "http://dict.cn/search/?q=mascot" "http://www.princeton.edu/~chaol" "http://dict.cn/search/?q=waffle" "http://bbs.hupu.com" "http://dict.cn/search/?q=swoop" "about://cookie" "http://dict.cn/search/?q=%D4%DE%B8%E8" "http://dict.cn/search/?q=coward" "http://dict.cn/search/?q=%D7%B0%B1%C6" "http://dict.cn/search/?q=%D3%EF%BE%B3" "http://dict.cn/search/?q=conspicuously" "http://dict.cn/search/?q=hallmark" "http://dict.cn/search/?q=proximate" "http://dict.cn/search/?q=ribbon" "http://dict.cn/search/?q=surge" "http://dict.cn/jury" "http://dict.cn/search/?q=breach" "http://dict.cn/search/?q=Instigated" "http://www.urbandictionary.com/define.php?term=Instigated" "http://dict.cn/search/?q=rigged" "http://www.urbandictionary.com/define.php?term=bootstrapping" "http://dict.cn/search/?q=jury-rigged" "http://dict.cn/search/?q=improvised" "http://www.youtube.com/?tab=w1" "http://www.google.com/search?btnI=I%27m+Feeling+Lucky&ie=UTF-8&oe=UTF-8&q=www.google.com" "http://www.princeton.edu/~chaol/Sports.html" "http://www.princeton.edu/~chaol/#sec-1" "http://www.princeton.edu/~chaol/#sec-1-4" "http://docs.vagrantup.com/v2/getting-started/index.html" "http://docs.vagrantup.com/v2/why-vagrant" "http://del.icio.us/loochao?url=http://www.google.com/search%3F%26ie%3DUTF-8%26oe%3DUTF-8%26q%3Dtest&title=test%20-%20Google%20Search" "http://www.google.com/search?&ie=UTF-8&oe=UTF-8&q=test" "http://del.icio.us/hober?url=&title=" "http://dict.cn/search/?q=dispensable" "http://dict.cn/search/?q=raster" "http://www.google.com/search?btnI=I%27m+Feeling+Lucky&ie=UTF-8&oe=UTF-8&q=www.delicious.com" "http://www.youtube.com" "http://www.google.com/search?btnI=I%27m+Feeling+Lucky&ie=UTF-8&oe=UTF-8&q=www.youtube.com" "http://dict.cn/intercalation" "http://dict.cn/search/?q=intercalation" "http://store.apple.com/us/product/MD098" "http://www.techrepublic.com/blog/apple-in-the-enterprise/how-to-mirror-the-ipads-display-on-large-monitors" "http://dict.cn/search/?q=comma" "http://dict.cn/search/?q=ostonishment" "http://dict.cn/search/?q=invoke" "http://sinfung.net/songs/songsword/003.htm" "http://dict.cn/search/?q=fuck" "http://bbs.tianya.cn/post-no05-272790-1.shtml" "http://bbs.tianya.cn/list-no05-1.shtml" "file://localhost/Volumes/DATA/Dropbox/Org/public_html/iPrv.html" "http://orgmode.org" "file://localhost/Volumes/DATA/Dropbox/Org/public_html/Music.html" "http://article.gmane.org/gmane.emacs.orgmode/65574" "http://orgmode.org/worg/exporters/ox-overview.html" "http://orgmode.org/worg/org-8.0.html" "http://dict.cn/dunkerque" "http://dict.cn/speculation" "http://dict.cn/sedulously" "http://dict.cn/prayer" "http://dict.cn/profound" "http://dict.cn/vain" "http://dict.cn/futile" "http://dict.cn/forces" "http://dict.cn/dismissed" "http://dict.cn/troops" "http://dict.cn/retreat" "http://dict.cn/amphibious" "http://dict.cn/contemplation" "http://dict.cn/abstruse" "http://www.urbandictionary.com/define.php?term=vain" "http://www.urbandictionary.com/define.php?term=prayer" "http://dict.cn/search/?q=abstruse" "http://dict.cn/search/?q=contemplation" "http://dict.cn/search/?q=profound" "http://dict.cn/search/?q=dismissed" "http://www.urbandictionary.com/define.php?term=speculations" "http://dict.cn/search/?q=speculations" "http://dict.cn/search/?q=sedulously" "http://dict.cn/search/?q=futile" "http://dict.cn/search/?q=vain" "http://dict.cn/search/?q=prayer" "http://dict.cn/search/?q=retreat" "http://dict.cn/search/?q=amphibious" "http://dict.cn/search/?q=troops" "http://dict.cn/search/?q=forces" "http://dict.cn/search/?q=dunkerque" "http://www.gnu.org/software/emms/manual/Streaming-Audio.html" "http://dict.cn/search/?q=dictator" "http://dict.cn/search/?q=limbs" "http://dict.cn/search/?q=torso" "http://dict.cn/locomotion" "http://juhai.dict.cn/locomotion" "http://dict.cn/search/?q=locomotion" "http://dict.cn/search/?q=%D6%A7%B3%D6" "http://dict.cn/search/?q=expletives" "http://dict.cn/search/?q=vigorous" "http://dict.cn/search/?q=championship" "http://dict.cn/search/?q=barely" "http://orgmode.org/worg/org-contrib/babel" "http://orgmode.org/worg/org-contrib/babel/intro.html" "http://dict.cn/search/?q=test" "http://dict.cn/search/?q=generosity" "http://www.google.com/search?btnI=I%27m+Feeling+Lucky&ie=UTF-8&oe=UTF-8&q=www.baidu.com" "http://dict.cn/test" "http://dict.cn/next" "https://www.mytestcom.net/app/myTestcom.cfm" "http://www.google.com/url?q=http://www.test.com/&sa=U&ei=GHm1Ucj6IPTI4APfq4HADw&ved=0CBgQFjAA&usg=AFQjCNHubtgeEmNVWa2OixWYNgt-fXHFQg" "http://www.google.com/search?ie=ISO-8859-1&hl=en&source=hp&q=test&btnG=Google+Search&gbv=1" "http://introcs.cs.princeton.edu/java/12types" "http://introcs.cs.princeton.edu/java/home" "http://introcs.cs.princeton.edu/java" "http://introcs.cs.princeton.edu/java/12types/RandomInt.java.html" "http://introcs.cs.princeton.edu/java/11hello" "http://www.emacswiki.org/emacs/CategoryMouse" "http://introcs.cs.princeton.edu/java/11hello/Hi.java.html" "http://introcs.cs.princeton.edu/java/11hello/UseArgument.java.html" "http://www.google.com/search?btnI=I%27m+Feeling+Lucky&ie=UTF-8&oe=UTF-8&q=emacs+wiki" "http://www.google.com/search?btnI=I%27m+Feeling+Lucky&ie=UTF-8&oe=UTF-8&q=www.xvideos.com" "http://www.baidu.com/s?wd=fuck&ie=utf-8&nojs=1&bqid=9d7d00f80760a5be" "http://www.baidu.com/s?wd=fuck&rsv_bp=0&ch=&tn=baidu&bar=&rsv_spt=3&ie=utf-8" "http://dict.cn/search/?q=interactive" "http://www.google.com/search?&ie=UTF-8&oe=UTF-8&q=marti%20craig%20" "http://www.google.com/mobile/gmail" "http://www.google.com" "http://www.google.com/search?btnI=I%27m+Feeling+Lucky&ie=UTF-8&oe=UTF-8&q=google" "http://www.google.com/url?q=http://www.emacswiki.org/emacs/EmacsNiftyTricks&sa=U&ei=KKGwUeDQF_Oz4AO2woCgBQ&ved=0CB0QjBAwAQ&usg=AFQjCNFsr4VzEZH55Hwic9qdCh82kvYHqA" "http://www.google.com/search?&ie=UTF-8&oe=UTF-8&q=emacs%20wiki" "http://www.google.com/search?btnI=I%27m+Feeling+Lucky&ie=UTF-8&oe=UTF-8&q=m.google.com/mail" "http://dict.cn/search/?q=nerds" "http://dict.cn/esteem" "http://dict.cn/search/?q=esteem%D7%F0%BE%B4" "http://dict.cn/search/?q=hallow" "http://dict.cn/Search" "http://dict.cn/search/?q=%C4%FA%D2%AA%B2%E9%D5%D2%B5%C4%CA%C7%B2%BB%CA%C7%A3%BA" "http://dict.cn/search/?q=%BB%F9%B1%BE%CA%CD%D2%E5" "http://dict.cn/search/?q=%C4%B3%D2%BB" "http://dict.cn/search/?q=an" "http://dict.cn/search/?q=Search" "http://dict.cn/search/?q=malevolence" "http://dict.cn/search/?q=whatsoever" "http://dict.cn/search/?q=rites" "http://dict.cn/search/?q=smacked" "http://dict.cn/search/?q=expenditure" "http://dict.cn/search/?q=insanity" "http://tkf.github.io/2013/06/04/Emacs-is-dead.html" "http://dict.cn/search/?q=revenue" "http://dict.cn/search/?q=toad" "http://dict.cn/search/?q=require" "http://www.google.com/search?btnI=I%27m+Feeling+Lucky&ie=UTF-8&oe=UTF-8&q=www.tsinghua.edu.cn" "http://dict.cn/search/?q=baldheaded" "http://dict.cn/search/?q=agitation" "http://dict.cn/search/?q=render" "http://dict.cn/search/?q=inhabitants" "http://dict.cn/search/?q=terrestrial" "http://dict.cn/search/?q=distinctive" "http://dict.cn/search/?q=streak" "http://dict.cn/search/?q=tannin" "http://dict.cn/search/?q=clamorous" "http://dict.cn/search/?q=whisk" "http://dict.cn/search/?q=yeast" "http://dict.cn/search/?q=respiratory" "http://dict.cn/search/?q=aromatic" "http://dict.cn/search/?q=leeks" "http://dict.cn/search/?q=pertaining" "http://dict.cn/search/?q=alliaceous" "http://dict.cn/search/?q=fermented" "http://dict.cn/search/?q=relish" "http://dict.cn/search/?q=condiment" "http://dict.cn/search/?q=savoury" "http://www.google.com/search?&ie=UTF-8&oe=UTF-8&q=%3F%3F%3F%3F%3F%3F%3F" "https://duckduckgo.com/?q=!ducky+lyrics007.com+" "https://duckduckgo.com/?q=!ducky+lyrics007.com+A_Polite_Decline" "https://duckduckgo.com/?q=!ducky+lyrics007.com+The_Time_Of_Our_Lives" "https://duckduckgo.com/?q=!ducky+lyrics007.com+Leaving" "https://duckduckgo.com/?q=!ducky+lyrics007.com+Le_Papillon" "https://duckduckgo.com/?q=!ducky+lyrics007.com+Bitter" "http://dict.cn/search/?q=realgar" "http://dict.cn/search/?q=disgust" "http://dict.cn/odium" "http://dict.cn/search/?q=odium%D4%F7%B6%F1" "http://dict.cn/search/?q=gall" "http://dict.cn/search/?q=bruised" "http://dict.cn/search/?q=capaciousness" "http://dict.cn/search/?q=engulf" "http://dict.cn/search/?q=swallow" "http://dict.cn/spite" "http://dict.cn/search/?q=satiated" "http://dict.cn/search/?q=retaliation" "http://dict.cn/search/?q=vengeance" "http://dict.cn/search/?q=swift" "http://dict.cn/search/?q=fraudulent" "http://dict.cn/search/?q=deceit" "http://dict.cn/search/?q=influence" "http://dict.cn/search/?q=prod" "http://dict.cn/search/?q=slinking" "http://dict.cn/search/?q=prey" "http://dict.cn/search/?q=cougar" "http://www.emacswiki.com" "http://www.emacswiki.org/emacs/EmacsAsDesktopBackground" "http://www.emacswiki.org/emacs/EmacsNiftyTricks" "http://dict.cn/search/?q=procrastination" "http://freecode.com/projects/emacs-tiny-tools" "http://www.emacswiki.org/emacs/TinyTools" "http://www.emacswiki.org/emacs/MidnightMode" "http://www.nongnu.org/emacs-tiny-tools/keybindings" "https://github.com/jaalto/project--emacs-tiny-tools" "http://dict.cn/search/?q=monolithic" "http://dict.cn/search/?q=thesaurus" "http://www.google.com/url?q=http://www.emacswiki.org/emacs/EmacsNiftyTricks&sa=U&ei=waipUa-HHLKw4APa8oDAAw&ved=0CB0QjBAwAQ&usg=AFQjCNHeGkefT16F_Gbl25zfKpizdcKBJA" "http://www.google.com/search?&ie=UTF-8&oe=UTF-8&q=emacswiki" "http://www.google.com/search?ie=ISO-8859-1&hl=en&source=hp&q=search&btnG=Google+Search&gbv=1" "http://www.google.com/search?ie=ISO-8859-1&hl=en&source=hp&q=&btnG=Google+Search&gbv=1" "http://wiki.python.org/moin/SimplePrograms" "http://www.baidu.com" "http://en.wikipedia.org/wiki/Main_Page" "http://en.wikipedia.org/wiki" "http://www.google.com/search?ie=ISO-8859-1&hl=en&source=hp&q=fuck&btnI=I%27m+Feeling+Lucky&gbv=1" "http://dict.cn/interactive" "http://dict.cn/prevent" "http://dict.cn/search/?q=prevent" "http://dict.cn/remnant" "http://dict.cn/search/?q=ad-activate" "http://dict.cn/search/?q=remnant" "http://del.icio.us/loochao?url=&title=" "http://dict.cn/prodigious" "http://dict.cn/forbidding" "http://dict.cn/momentous" "http://dict.cn/prophetic" "http://dict.cn/ominous" "http://dict.cn/boastful" "http://dict.cn/hectic" "http://dict.cn/words" "http://dict.cn/vanity" "http://dict.cn/portentous" "http://dict.cn/summon" "http://dict.cn/puffed" "http://dict.cn/pontifical" "http://dict.cn/grandiloquent" "http://dict.cn/deeds" "http://dict.cn/sinister" "http://dict.cn/gobbledygook" "http://dict.cn/glut" "http://dict.cn/swindler" "http://dict.cn/streaked" "http://dict.cn/overblown" "http://dict.cn/sweat" "http://dict.cn/Intrigued" "http://dict.cn/fateful" "http://dict.cn/inauspicious" "http://dict.cn/minatory" "http://dict.cn/search/?q=swindler" "http://dict.cn/charms" "http://dict.cn/charm%20against%20evils" "http://dict.cn/search/?q=streaked" "http://dict.cn/search/?q=sweat" "http://dict.cn/search/?q=charms" "http://dict.cn/search/?q=glut" "http://dict.cn/search/?q=gobbledygook" "http://dict.cn/search/?q=pontifical" "http://dict.cn/search/?q=reams" "http://dict.cn/search/?q=words" "http://dict.cn/search/?q=deeds" "http://dict.cn/search/?q=summon" "http://dict.cn/search/?q=vouch" "http://dict.cn/search/?q=hooey" "http://dict.cn/search/?q=pompous" "http://dict.cn/search/?q=oratory" "http://dict.cn/search/?q=overblown" "http://dict.cn/search/?q=boastful" "http://dict.cn/search/?q=grandiloquent" "http://dict.cn/search/?q=vanity" "http://dict.cn/search/?q=puffed" "http://dict.cn/search/?q=hectic" "http://dict.cn/search/?q=prophetic" "http://dict.cn/search/?q=ominous" "http://dict.cn/search/?q=momentous" "http://dict.cn/search/?q=prodigious" "http://dict.cn/gloomy" "http://dict.cn/glooms" "http://dict.cn/ill-omened" "http://dict.cn/search/?q=sinister" "http://www.emacswiki.org/emacs/emacs-w3m" "http://www.emacswiki.org/emacs" "http://www.emacswiki.org/emacs/WThreeMHintsAndTips" "http://www.google.com/reader/m/view" "http://www.xvideos.com" "http://dict.cn/search/?q=Intrigued" "http://www.google.com/cse?cx=004774160799092323420:6-ff2s0o6yi&q=w3m" "http://dict.cn/fuck" "http://dict.cn/hump" "about://bookmark" "http://dict.cn/search/?q=minimalistic" "http://dict.cn/search/?q=warrior" "http://www.urbandictionary.com/define.php?term=test" "http://www.urbandictionary.com/define.php?term=fuck" "http://bamanzi-misc.googlecode.com/svn-history/r203/trunk/_emacs.d/lisp/cowsay-fortune.el" "http://www.emacswiki.org" "http://www-cdf.fnal.gov/~sthrlnd/emacs_help.html" "http://www.google.com/search?btnI=I%27m+Feeling+Lucky&q=test" "http://www.google.com/search?&ie=UTF-8&oe=UTF-8&q=%2Bintitle:%28%22index%20of%22%7C%22last%20modified%22%7C%22parent%20of%22%29%20-inurl:htm%20-inurl:html%20-inurl:php%20-inurl:asp%20sers.pdf" "http://www.google.com/cse?cx=004774160799092323420:6-ff2s0o6yi&q=%22SiteMap%22" "http://www.emacswiki.org/emacs/Suggestions" "http://www.google.com/search?ie=ISO-8859-1&hl=en&source=hp&q=kaka&btnI=I%27m+Feeling+Lucky&gbv=1" "http://www.google.com/search?ie=ISO-8859-1&hl=en&source=hp&q=kaka&btnG=Google+Search&gbv=1" "http://www.google.com/url?q=http://www.speedtest.net/&sa=U&ei=IfOLUe2ZLbSs4AOnioG4Cw&ved=0CCEQFjAB&usg=AFQjCNHIpL0igJLpWzY6Cc7NW-vNCV9VMw" "http://www.urbandictionary.com/define.php?term=manifest" "http://api.t.sina.com.cn/oauth/authorize?oauth_token=3156f8999f41dade551bb66cdace4fae" "http://pastebin.com/KKQCbAja" "http://orgmode.org/worg/dev" "http://orgmode.org/worg/dev/org-build-system.html" "http://orgmode.org/worg/dev/org-build-system.html#sec-4" "http://www.iciba.com/?s=%E7%8E%B0%E5%9C%A8" "http://traeki.freeshell.org/files/viper-sample" "http://www.emacswiki.org/emacs/AnythingScreenshotNarrowingCandidates" "http://www.emacswiki.org/emacs/AnythingScreenshotAllCandidates" "http://www.emacswiki.org/emacs/Anything"))
(setq regexp-history '("NUGET_BIN_PATH" "core-load-path" "load-path" "spacemacs" "wrap" "message" "persistent" "default-pop-shell" "last" "exec-last" "smart-beginning" "emacs-persistent-scratch" "scratch-persistent" "persistent" "lch-win32-p" "lch-mac-p" "dos" "open" "external" "highlight" "alternat" "microstate" "corelv" "banner" "core-lv" "micro-state" "revert" "alnernate-buffer" "alternate-buffer" "apple" "core-load-path" "Normal-Tangential" "which-key" "gnus" "fullscreen" "elpa" "stokes" "naiver"))
(setq viper-ex-history '("w"))
(setq ssh-history '("chaol@nobel.princeton.edu" "nobel.princeton.edu"))
(setq query-replace-history '("." "_" "" "HD." " " "—" " | Coursera" "PharmaSeq" "Pharmaseq" "windows" "w32" ".3" ".15" ".5" "!" "/" "//" "///" "right" "left" "Walls" "BoundaryCondition 1" "Manifold" "Simulation12" "05" "15" "" "" "lch" "lcmacs" "lch-" "spacemacs" "core" "conf" "," "http://www.chlorispianostudio.com" "http://www.emilylaupianostudio.com" "

" "
+" "
" "+" "有没有一句话让你流泪 - 新浪微博-随时随地分享身边的新鲜事儿 - Firefox" "微博搜索 - 新浪微博-随时随地分享身边的新鲜事儿 - Firefox
" "^ *" "^[ 	]" "^[ \\t]+" "^\\w*" ".*www.txtbbs.com.*$" "http://www.txtbbs.com" "-" "=" "p" "<f2>" "o" "<f1>" "outline-minor-mode-map"))
(setq face-name-history '("default"))
(setq buffer-name-history '("dotEmacs" "*Shell Command Output*" "*shell*" ".emacs.d" "A_北大数学物理方法_吴崇试(V)" "LooChao/Dropbox" "CNU" "算法基础" "DATA" "_spacemacs_bak5" "_spacemacs" "lch-spacemacs.el" "*MATLAB*" "pstat.m" "*scratch*" "*ruby*" "Pharmaseq" "Pharmaseq-Software.org" "pcov.m" "pcover.m" "Pharmaseq.org" "Apps.sln" "C" "Vagrantfile" "UserAdminView.clj" "abstract.tex" "*Ido Completions*" "test.c" "Dropbox" "Manifold06" "PharmaSeq_Manifold_Solidworks" "PharmaSeqCommon" "PORTS" "USLife.org" ".emacs.dz" "init.el" "spacemacs-private" "spacemacs/init.el" "Personal" "Manifold.STEP" "Simulation12/case.sif" "Simulation11" "Simulation11/case.sif" "Manifold.geo" "Simulation12.geo" "Manifold10.geo" "core-dotspacemacs.el" "core-spacemacs-buffer.el" "core-spacemacs.el" "core-auto-completion.el" "core-release-management.el" "Simulation10" "Manifold9.geo" "Sorter.base.for.Simulation5.geo" "core" "Simulation8/Manifold.sif" "Manifold8.geo" "Simulation8" "Manifold8" "mesh.nodes" "Manifold8.msh" "shell/packages.el" "Simulation7_SquareInlet_Gmsh" "Simulation7_SquareInlet_testing/Manifold.sif" "Manifold.sif" "lch-home-buffer.el" "spacemacs-base/funcs.el" "rc" "lch-util.el" "lch-core.el" "lch-network.el" "lch-binding.el" "Simulation6_gmsh/Manifold.sif" "Simulation6/Manifold.sif" "/" "lch-pgm.el" "*terminal<1>*" "lch-evil.el" "lch-env.el" "lch-startup-buffer.el" "core-funcs.el" "core-toggle.el" "snippets/README.md" ".gitignore" "core-load-paths.el" "spacemacs-base/keybindings.el" "config.el" "lch-init.el" "lch-dired.el" "org" "*Moccur*" "chinese/README.org" "Downloads/ycmd" "global_conf.py" "ycmd/README.md" "ycmd/README.org" "vagrant" "vagrant/README.org" "evernote/README.org" "README.md" "color-theme-loochao.el" "lch-gnus.el" "_spacemacs_bak" "case.sif" "case_example.sif" "linearelasticity.xml" "keybindings.el" "Simulation3_gmsh" "Elmer.org" "ELMERSOLVER_STARTINFO" "2_fluid_sloshing.sif" "Simulation4" "*evil-registers*" "Zhihu.org" "Python.org" "*IPython*" "Code.org" "lch-ui.el" "INSTALL" "Tube.sif" "Pearl.org" "dired+.el" "Downloads" "Miscellaneous.org" "lch-org.el" "test2/mesh.boundary" "test2" "flow_res_slip.sif" "sif/case.sif" "TEST.PASSED" "hole" "test2/Makefile" "build2/lch-elmer-mac-build.sh" "FlowResNoslip/Makefile" "etc" "*ansi-term*" "_bashrc" "lch-elmer-mac-build.sh" "build2" "build/Makefile" "tests" "ExtrusionStructured2D" "extrude.sif" "fem" "www.tsinghuaveterans.com/index.html" "contact.html" "www.chlorislipianostudio.com" "www.tsinghuaveterans.com" "index.html" "path_find" "Chloris-Web.org" "THUVeteran" "Chloris" "bootstrap.min.js" "slides.tex" "Thesis" "tov-defense-2012-slides-src" "新出简帛的学术探索.李锐.北京师范大学出版社.20.pdf" "Chloris_Web.org" "www.emilylaupianostudio.com" "*w3m*<4>" "evil" "lisp" "15GT-Hotel.org" "*Messages*" " *Minibuf-1*" "lch-aquamacs.el" "*Messages*" "*Backtrace*" "lch-aquamacs.el" "*ssh-nobel.princeton.edu*" "*Completions*" "*ssh-nobel.princeton.edu*" "*w3m*<2>" "loochao-cheat-sheet.tex" "lch-cheat-sheet.tex" "*Backtrace*" "lch-elisp.el" "*Compile-Log*" "Temporary" "emacs-init.el:LooChao" " *Minibuf-1*" "emacs-init.el" "*grep*" "lch-coding.el" "lch-aquamacs.el"))
(setq minibuffer-history '("master" "magit-log" "system-name" "root-path" "lch-emacs-in-dropbox-p" "print-buffer" "text-mode" "xml-mode" "NUGET_BIN_PATH " "lisp-mode" "c-mode" "ns-print-buffer" "org-mode" "fill-region" "c++-mode" "print-region" "server-start" "emms-next" "core-load-path " "package-initialize" "!" "load-path " "lch-google-2-org-sync" "spacemacs/toggle-fullscreen" "spacemacs/view-org-file" "revert-buffer-with-coding-system" "spacemacs " "wrap " "message " "persistent " "dired-details-hide" "recover-this-file" "default-pop-shell " "evil-ex" "evil-switch-to-windows-last-buffer" "ace-jump-mode" "lch-open-ppt-icon" "last " "exec-last " "w3m" "smart-beginning " "emacs-persistent-scratch " "scratch-persistent " "lch-win32-p " "lch-mac-p " "spacemacs/toggle-maximize-buffer" "bzg-big-fringe-mode" "dos " "spacemacs/count-words-analysis" "spacemacs/uniquify-lines" "lch-cleanup-buffer" "hidden-mode-line-mode" "open " "external " "highlight " "alternat " "spacemacs/alternate-buffer" "microstate " "corelv " "banner " "load-file" "org-eww" "package-install" "list-packages" "core-lv " "micro-state " "proced" "calc-dispatch" "save-interprogram-paste-before-kill" "delete-by-moving-to-trash" "longlines-show-hard-newlines" "revert " "spacemacs/echo" "recover-file" "show-all" "alnernate-buffer " "alternate-buffer " "assoc" "apple " "browse-url" "/bin/bash" "ansi-term" "org-display-inline-images" "helm-mark-ring" "ascii-off" "ascii-on" "hexview-mode" "fci-mode" "eval-region" "linum-mode" "universal-argument" "emacs-lisp-mode" "Normal-Tangential " "eval-buffer" "which-key-mode" "which-key " "ediff" "emacs-version" "evil-show-registers" "lch-clear-empty-lines" "gnus " "package-autoremove" "fullscreen " "diredp-hide/unhide-extension" "diredp-omit-marked" "dired-omit-mode" "https://avatars0.githubusercontent.com/u/2937359?v=3&s=96" "org-download-image" "org-download-yank" "elpa " "2.00BGZIkB01UUUO97c2fa4424evjDWB:688095" "weibo" "stokes " "naiver " "lch-indent-buffer" "org-version" "evil-version" "aquamacs-toggle-full-frame" "toggle-viper-mode" "ssh" "compile" "print" "phases" "Emacs Wiki" "test" "Google" "webju" "describe-tex" "lch-to" "emacs-doc-dir" "open" "open-for" "inhibit-eol-conversion" "lch-pu" "query" "revert-bu" "lisp" "outline-min" "byte" "bookma" "byte-re" "latex" "org-mod" "outline-minor-mode-prefix" "lat" "org-mo"))
(setq file-name-history '("/Volumes/LIBNS/LIBRARY/LIBRARY_A/Miscellaneous/Collection/CNU/A_清华数据结构_邓俊辉(V)/IN_THU_FOLD.txt" "/Volumes/LIBNS/LIBRARY/LIBRARY_A/Miscellaneous/Collection/CNU/" "/Users/LooChao/.wine/dosdevices/h:/Downloads/coursera-dl/算法基础/DEVONtech_storage" "/Volumes/share/" "/Volumes/DATA/Pharmaseq/Bio/" "/Volumes/DATA/Pharmaseq/" "~/Dropbox/.emacs.dz/_spacemacs" "/Users/LooChao/pslog.txt" "/Applications/Documents/Emacs/Spacemacs.app/Contents/PkgInfo" "/Users/LooChao/Dropbox/Code/test.c" "e:/VAR/URoot/Dropbox/.emacs.d/rc/lch-w32.el" "e:/VAR/URoot/Dropbox/.emacs.d/rc/lch-elisp.el" "~/Dropbox/.emacs.d/rc/" "e:/VAR/URoot/Dropbox/.emacs.d/rc/lch-win32.el" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation16_V" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation11" "/Users/LooChao/Dropbox/Pharmaseq/Sorter/Simulation/Simulation10/case_bak.sif" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation10" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation9/" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation9/Manifold9/.." "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation9" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation8/Manifold.sif_bak" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation8/Manifold8/../" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation8/Manifold8/.." "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation8/" "/Users/LooChao/Dropbox/Pharmaseq/Sorter/Simulation/Simulation8/Manifold8.geo_bak" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation8" "/Users/LooChao/Dropbox/.emacs.d/rc/lch-spacemacs.el" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation7_SquareInlet_Gmsh/Manifold7/../" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation7_SquareInlet_Gmsh/Manifold7/.." "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation7_SquareInlet_Gmsh/" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation7_SquareInlet_testing/" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation7_SquareInlet_testing" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation7_SquareInlet_Gmsh/Geometry/" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation7_SquareInlet_Gmsh/Geometry" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation8_SquareInlet_Gmsh/" "/Users/LooChao/Dropbox/.emacs.d/.gitignore" "~/Dropbox/.emacs.d/lib/banner" "/Users/LooChao/Dropbox/.emacs.d/rc/lch-gnus.el" "/Users/LooChao/.spacemacs" "/Users/LooChao/Dropbox/.emacs.dz/lch-dz-common.el" "/Users/LooChao/Dropbox/Pharmaseq/Sorter/Simulation/case_example.sif" "/Users/LooChao/Dropbox/Pharmaseq/Sorter/Simulation/Simulation4/case_v4_WorkedBetterCanFinish_NotCorrect.sif" "~/Dropbox/.emacs.dz/_spacemacs_bak" "~/Dropbox/.emacs.lib/site-lisp/" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation3_gmsh/." "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation3" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation5" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation4/case_v4.sif" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation4/" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation4/case_bak.sif" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation4/case.sif" "/Users/LooChao/Dropbox/Org/org/Elmer.org" "~/Dropbox/.emacs.lib/site-lisp/evil_bak" "~/Dropbox/.emacs.d/lisp/" "/Users/LooChao/Dropbox/Org/org/Hack.org" "/Users/LooChao/Dropbox/Org/org/Python.org" "/Volumes/DATA/Code/Elisp-Emacs/" "/Volumes/DATA/Code/TeX/" "/Volumes/DATA/Code/Code.org" "~/Dropbox/.emacs.lib/site-lisp/evil2" "~/Dropbox/.emacs.d/rc/dotEmacs" "~/Dropbox/Pharmaseq/Sorter/Simulation/test3_NSSolver/ToELMER/" "/Users/LooChao/Dropbox/Pharmaseq/Sorter/Elmer.org" "~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation3/" "~/Dropbox/Pharmaseq/Sorter/Simulation/test2/hole/.." "~/Dropbox/Pharmaseq/Sorter/Simulation/test2/hole" "~/Downloads/elmer/build2/" "/Users/LooChao/Downloads/elmer/lch-elmer-mac-build.sh" "~/Downloads/elmer/build2" "~/Dropbox/Pharmaseq/Sorter/Simulation/test2" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Personal/THUVeteran/www.tsinghuaveterans.com/index.html" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Personal/THUVeteran/materials/sites_v1/www.tsinghuaveterans.com/tv-games/aic-2010" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Personal/THUVeteran/materials/sites_v1/www.tsinghuaveterans.com/tv-photos/tv-2009" "/Volumes/DATA/Private/Chloris/Chloris_Web.org" "~/Dropbox/.emacs.lib/" "~/Dropbox/.emacs.d/var/emms/emms-history" "~/.breadcrumb" "/Volumes/DATA/Dropbox/.emacs.d/lisp/dired/dired+/dired+.el" "~/Dropbox/.emacs.d/var/emms/emms-history" "~/.breadcrumb" "/Volumes/DATA/Dropbox/Pharmaseq/Sorter/Data/Camera/151201_Testing_w.Chip_no.Control.Board_2/Chip1_small/resize.sh" "/Volumes/DATA/Dropbox/Pharmaseq/Sorter/Data/Camera/151201_Testing_w.Chip_no.Control.Board_2/Chip1_small" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Pharmaseq/Sorter/Data/Camera/151201_Testing_w.Chip_no.Control.Board_2/Video.Please.See.Volume.DATA" "/Volumes/DATA/Pharmaseq/Sorter_Video/.." "/Users/LooChao/Downloads/Chao_Trexquant/IND_R5.m" "/scpc:mscully@nobel.princeton.edu:/u/mscully/IND_R5.m" "/scpc:mscully@nobel.princeton.edu:/u/mscully/R5.m" "/scpc:mscully@nobel.princeton.edu:" "/scpc:root@10.0.0.18:" "/Volumes/DATA/Devon/Devonote.dtBase2/Files.noindex/txt/3/\221\271\372\221\304\234\364\256\361\313\202\360\264 \221\234\364\253\271\221\262\271\221\234\364\247\360\221\260\340\221\276\234\364\246\261\270\374\221\270\343\221\214\306\221\301\313.txt" "/Volumes/DATA/Applications/Library/DEVONthink Pro 2/Inbox.dtBase2/Files.noindex/txt/1/\221\311\317python\221\265\202\360\272\201\321\264\246\221\272\234\364\260\261\303\367\221\317\234\364\252\361\243\254\221\276\234\364\246\261\312\224\252\325\312\375\221\276\234\364\260\361\267\234\364\254\261\316\366\221\265\202\360\234\364\254\307\221\263\234\364\254\261\267\224\252\325\263\243\221\234\364\243\253\221\303\226\274\247\243.txt" "/Volumes/LIBNS/PORTS/BAIDU_SYNC/\221\206\344\221\325\373\221\300\355/kindle\221\312\225\375\304\342/Kindle\221\234\364\253\255\221\260\346\221\312\226\361\341\362\221\260\374\221\317 \324\330/Z_\221\234\364\245\265\221\303\367.txt" "~/Downloads/" "/Volumes/DATA/Applications/Library/DEVONthink Pro 2/Inbox.dtBase2/Files.noindex/txt/d/\221\312\300\221\275\347\221\311\234\364\247\321\325\226\312\234\364\243\302\360\264\346\221\324\234\364\256\361\274\224\252\325\322\235\366\206\356\254\221\265\356\221\302 \221\263\243\221\310\227\253\326\304\234\364\260\261\325\234\364\241\321\316\234\364\253\321\302  - Lonely Planet \221\265\202\360\273\234\364\255\321\264\360 - \221\234\364\254\312\221\272\365.txt" "/Volumes/DATA/Applications/Library/DEVONthink Pro 2/Inbox.dtBase2/Files.noindex/txt/c/\221\310\226\234\364\251\363\373\221\262\241\221\310\227\253\234\364\254\274\364\242\327\221\267\214\361\314\234\364\252\261\305\234\364\260\261\243\254\221\234\364\251\375\221\311\372\221\270\201\321\324\365\221\201\364\221\260 \277.txt" "/Volumes/DATA/Applications/Library/DEVONthink Pro 2/Inbox.dtBase2/Files.noindex/txt/a/\221\265\275\221\265\210\341\312\224\252\325\275\214\261\307\234\364\255\321\260\343\221\310\235\376\365\302\221\312\224\252\325\307\234\364\255\321\260\343\221\310\221\345\250 - \221\325\202\365\274\214\361\347\221\242\234\364\241\302\360\273\234\364\255\321\264\360 - \221\234\364\254\312\221\272\365.txt" "/Volumes/DATA/Devon/Devonote.dtBase2/Files.noindex/txt/a/\221\263\365\221\301\265\221\202\331\221\323\214\361\323\353\221\317\234\364\254\261\310\206\301\202\331\221\323\321.txt" "/Volumes/DATA/Devon/Devonote.dtBase2/Files.noindex/txt/6/mm\221\270\374\221\234\364\247\362\221\273\266\221\265\202\360\304\214\261\311\372.txt" "/Volumes/DATA/Devon/Devonote.dtBase2/Files.noindex/txt/6/\221\262\221\242\221\250\270\364\242\361\302\234\364\257\321\274\362\221\275\351--\221\234\364\251\373\221\270\366\221\234\364\246\310\221\315\371\221\322\354\221\312\300\221\275\226\313\367\202\360\264\363\221\303\305 ZZZ.txt" "/Volumes/DATA/Devon/Devonote.dtBase2/Files.noindex/txt/1/\221\312\375\221\234\364\251\247\221\234\364\247\365\221\277\206\301\263\234\364\245\214\374\364\243\253\221\302\333_\221\270\264\221\265\251\221\312\375\221\234\364\251\247\221\234\364\247\365\221\224\251\306\221\202\376\221\310\313.txt" "/Volumes/DATA/Devon/Devonote.dtBase2/Files.noindex/txt/3/\221\316\234\364\251\321\313\371\221\310\234\364\247\214\374\364\244\326\221\265\202\360\234\364\253\274\221\272\262 \221\304\227\253\271\234\364\244\322.txt" "/Volumes/DATA/Devon/Devonote.dtBase2/Files.noindex/txt/5/\221\270\370\221\304\224\252\234\364\253\314\311\221\234\364\247\362\221\273\266\221\312\375\221\234\364\251\247\221\272\234\364\246\261\262\273\221\234\364\247\362\221\273\266\221\312\375\221\234\364\251\247\221\265\202\360\310\227\253\326\303\307.txt" "/Volumes/DATA/Devon/Devonote.dtBase2/Files.noindex/txt/0/\221\307\360\221\263\227\253\271\234\364\246\311_\221\316\234\364\251\321\321\214\261\276\277\221\312\375\221\234\364\251\247\221\265\202\360\276\255\221\321\351.txt" "/Volumes/DATA/Devon/Devonote.dtBase2/Files.noindex/txt/f/\221\270\265\221\300\357\221\234\364\251\366\221\261\235\367\314\345\273\221\243\254\221\300\255\221\306\234\364\253\321\300\255\221\234\364\245\271\221\261\235\367\314\345\273\221\272\315Z\221\261\235\367\314\345\273\221\265\202\360\322\342\221\322\345 ZZZ.txt" "/Volumes/DATA/Devon/Devonote.dtBase2/Files.noindex/txt/6/\221\311\344\221\234\364\252\320\221\274\270\221\272\316_Kaka Abel\221\265\202\360\310\234\364\253\214\374\364\254\336.txt" "/Volumes/DATA/Devon/Devonote.dtBase2/Files.noindex/txt/c/\221\312\375\221\234\364\251\247\221\274\234\364\251\214\374\364\254\316\221\315\221\242\234\364\241\302\360\234\364\256\304\221\302\234\364\261\321\315\337.txt" "/Users/LooChao/Downloads/Options_Futures_and_Other_Derivatives-1.bibtex" "~/Downloads/trap_nation/" "/Volumes/DATA/Devon/Devonote.dtBase2/Files.noindex/txt/0/Taoci.txt" "/Volumes/DATA/Devon/Devonote.dtBase2/Files.noindex/txt/c/\221\234\364\242\307\221\315 \221\234\364\251\352\221\305\366J1.txt" "~/Downloads/coursera/" "/opt/local/var/macports/logs/_opt_local_var_macports_sources_rsync.macports.org_release_ports_devel_gettext/gettext/main.log" "~/Desktop/" "~/Dropbox/Code/ginkgo/orderBook/orderBook.cpp" "~/Dropbox/Code/ginkgo/ginkgoinput.cpp" "~/Dropbox/Code/ginkgo/orderBook/inputfile" "~/Dropbox/Code/ginkgo/orderBook" "/Users/LooChao/Dropbox/Code/ginkgo/Makefile" "/Users/LooChao/Dropbox/Code/ginkgo/orderBook.cpp" "~/Dropbox/Code/ginkgo" "/Users/LooChao/Downloads/Aiseesoft PDF Converter Ultimate 3.2.18.txt" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Temperary/Boom/Serial.txt" "/Users/LooChao/Dropbox/Code/lch-leetcode/lch_leet.org" "/Volumes/LIBNS/PORTS/BAIDU_SYNC/\221\260\256\221\277\264\221\266\271\221\234\364\243\253\221\234\364\253\376\221\264\362\221\260\374/list.sh" "/Volumes/LIBNS/PORTS/BAIDU_SYNC/list.sh" "/Volumes/DATA/Applications/Library/Netease_Music/" "~/Downloads/BT_Seeds/test" "/Users/LooChao/Downloads/list.py" "/Volumes/LIBNS/LIBRARY/list.py" "/Users/LooChao/Dropbox/.emacs.d/lisp/rtf-mode/rtf-mode.el" "~/Dropbox/.emacs.d/lisp/rtf-mode" "/Volumes/DATA/Devon/Devonote.dtBase2/Files.noindex/txt/8/Alien\221\302\227\253\326\276\265\221\234\364\247\365\221\301\214\261\260\262\221\234\364\255\260\221\234\364\245\265\221\303\367.txt" "/Users/LooChao/Downloads/The-Art-Of-Programming-by-July-master/ebook/zh/preface.md" "/Users/LooChao/Dropbox/Code/lch-leetcode/lch_leet_141.cpp" "/Volumes/DATA/Dropbox/_kbd.maestro.lib/screenshot-journal-master/README.md" "/Volumes/DATA/Dropbox/_kbd.maestro.lib/SetupWorkspaceMeyboardMaestro-master/README.md" "/Volumes/DATA/Dropbox/_kbd.maestro.lib/km-enable-disable-littlesnitch-master/README.md" "/Users/LooChao/Downloads/RL_soso.doc" "~/Dropbox/.emacs.d/lisp/openwith/" "~/Dropbox/.emacs.d/lisp/openwith" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Career/loochao_resume_2_for_job/loochao-resume.tex" "/Volumes/DATA/Applications/Library/iTunes/iTunes Media/Mobile Applications/Hareware/" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA1/LIBRARY_B1.dtBase2/Rebuild/DEVONtech_storage" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/.alfred/scratch.py" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/.alfred/README.mdown" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/.alfred/Devon/DEVONthink" "/Volumes/DATA/Dropbox/.alfred/Devon/DEVONthink Note/Note/README.mdown" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/.alfred/Workflows/README.md" "~/Downloads/Pathfinder" "/Users/LooChao/Library/Preferences/com.apple.recentitems.plist" "/Users/LooChao/Downloads/test.org" "~/Downloads/Music_TB/" "/ssh:org-protocol:/capture:/(\"l\" \"org-protocol\" entry (file \"~/Downloads/links.org\" \"Links\")      \"\\n* Link: %c\\n%U\\n%i\\n\" :immediate-finish)/https%3A%2F%2Fmail.google.com%2Fmail%2F%23inbox%2F14ebb47780be9c4f/%5BO%5D%20%22Capture%22-like%20browser%20plugin%3F%20-%20loochao.list%40gmail.com%20-%20Gmail/" "/ssh:org-protocol:/capture:/(\"l\" \"org-protocol\" entry (file \"~/Downloads/links.org\" \"Links\")      \"\\n* Link: %c\\n%U\\n%i\\n\" :immediate-finish)/https%3A%2F%2Fmail.google.com%2Fmail%2F%23inbox%2F14ebb47780be9c4f/%5BO%5D%20%22Capture%22-like%20browser%20plugin%3F%20-%20loochao.list%40gmail.com%20-%20Gmail/(%22l%22%20%22org-protocol%22%20entry%20(file%20%22~%2Forg%2Flinks.org%22%20%22Links%22)%0A%C2%A0%20%C2%A0%20%C2%A0%22%5Cn*%20Link%3A%20%25c%5Cn%25U%5Cn%25i%5Cn%22%20%3Aimmediate-finish)" "~/Dropbox/Code/LeetCode_Mia/" "~/Dropbox/Code/LeetCode_Mia/test" "/Users/LooChao/Dropbox/Code/LeetCode_Mia/Leet034.cpp" "~/Dropbox/Code/LeetCode_Mia_Print/" "~/Dropbox/Code/LeetCode_Mia_Print" "/Users/LooChao/Dropbox/Code/LeetCode_Mia/rename.sh" "/Users/LooChao/Dropbox/Code/LeetCode_Mia/rename.pl" "/Users/LooChao/Dropbox/Org/org/15GT-Hotel.org" "~/Dropbox/.emacs.d/bin/shell/" "~/Dropbox/.emacs.d/bin/shell" "~/Dropbox/.emacs.d/bin/" "~/Dropbox/.emacs.d/rc/lch-powerline-theme.el" "/scp:yueyu@yellow.dhcp.lbl.gov" "/scp:chaol@chili.princeton.edu:" "/scp:128.112.129.188:" "~/Dropbox/.emacs.lib/site-lisp/org_8.2.10" "/Users/LooChao/Dropbox/Org/org/Agenda/org-google.sh" "/usr/texbin/ical2org" "/tmp/org-google-sync.err" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Scan/150627" "/bin/bash" "~/Library/LaunchAgents/org-google-sync.plist" "~/Library/LaunchAgents/test.plist" "~/Library/LaunchAgents/orgcal.plist" "~/Library/LaunchAgents/orgle.plist" "~/Library/LaunchAgents/org-google.plist" "/Users/LooChao/Library/LaunchAgents/test.plist2" "/Users/LooChao/Library/LaunchAgents/test.plist" "~/Library/Application Support/Google/Chrome/Default/" "~/Library/Application Support/Google/Chrome/Default/Bookmarks_lch" "~/Library/Application Support/Google/Chrome" "/Volumes/DATA/Dropbox/.emacs.d/etc/_bashrc" "/Users/LooChao/.profile" "/Users/LooChao/Dropbox/Code/lch-cpp/code/fabnacci.cpp" "~/Dropbox/Code/lch-cpp/code" "~/Dropbox/Code/lch-cpp/data_structure" "/Users/LooChao/.rvm/scripts/rvm" "/Users/LooChao/.bashrc" "/Users/LooChao/.bash_profile" "~/.bash_profile" "/private/etc/hosts" "/Users/LooChao/.zshrc" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Ports/Library/Mac_Apps/paper3/passwd.txt" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Ports/Library/Mac_Apps/paper3/paswd.txt" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T4000_ALL/band_digram.py" "~/Downloads/orgSgoogle.sh" "/Users/LooChao/Downloads/ical2org.awk" "/Volumes/DATA/Dropbox/Research/Project/ChG_PhC/Simulation_Data/T4000_ALL/" "/Users/LooChao/Dropbox/.emacs.d/rc/lch-dired.el" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.d/projectile-bookmarks.eld" "~/Dropbox/Career/lch-cv-3/Modify_after_Jun" "~/Dropbox/Career/lch-cv-3" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.d/lisp/diff-hl-20150408.1926/diff-hl.el" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/.chao" "/Users/LooChao/Dropbox/Research/Project/Chemical/chemical.tex" "/Users/LooChao/Dropbox/Research/Project/Chemical/chemical_original.tex" "/Volumes/DATA/Research/Meep/T4000_ALL/band_digram.py" "/Volumes/DATA/Dropbox/.emacs.d/" "/Applications/Microsoft OneNote.app/Contents/Info.plist" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/.emacs.d/lisp/elfeed-20150427.727/elfeed.el" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.dz/oremacs/elpa/elfeed-20150427.727/elfeed.el" "~/Dropbox/.emacs.dz/" "~/Dropbox/.emacs.d/rc/lch-oremacs.el" "/Users/LooChao/.wine/dosdevices/z:/Volumes/LIBNS/LIBRARY/LIBRARY_A/Miscellaneous/Collection/PUC/Courses/MAE306_12-15F/2015/HW/HW9/hw9_solutions.tex" "/Users/LooChao/Dropbox/.emacs.dz/lch-spacemacs.el" "~/Dropbox/.emacs.dz/lch-live.el" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/.emacs.dz/spacemacs/spacemacs/extensions/solarized-theme/README.md" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.dz/spacemacs/init.el" "~/Dropbox/.emacs.dz/lch-spacemacs.el" "~/Dropbox/.emacs.ds/" "~/Dropbox/.emacs.ds" "~/Dropbox/.emacs.D" "~/Dropbox/Research/Thesis/ch-theory/overview.tex" "~/Dropbox/Research/Thesis/ch-theory/overview.te" "~/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T4000/r10/test" "~/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T4000/r14/n_ch24/data/*shell*" "~/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T4000/r14/n_ch24/data/test" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Applications/Library/Application" "/Volumes/DATA/Applications/Library/Application Supports/Firefox/Supports/Firefox/profiles.ini" "~/Dropbox/Code/lch-leetcode" "~/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T4000/r14/n_ch24/data/plot3.py" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T4000/r14/n_ch24/data/run3.py" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T4000/r14/n_ch24/plot_data2.m" "/Users/LooChao/Dropbox/.emacs.d/etc/_bashrc" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Research/Thesis/ch-theory/chapter-theory.tex" "/Users/LooChao/Downloads/download.txt" "~/Downloads/download.txt" "/Users/LooChao/Downloads/test.py" "~/Dropbox/Org/org/Pearl1.org" "/Users/LooChao/Dropbox/Research/Project/ChGPhC/Emitters-vs-r/plot_data2.m" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Research/Project/ChG_PhC/DATA/Photoluminescence/L1_532nm1per20x.txt" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Research/Project/ChG_PhC/As2S3_Absorption/L1_532nm1per20x.txt" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Research/Project/ChG_PhC/As2S3_Absorption/uv_as2s3.m" "~/.wine/dosdevices/z:/Users/LooChao/Dropbox/Research/Project/ChGPhC/Emitters-vs-r/plot_pl_bulk.m" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/Research/Project/ChGPhC/Emitters-vs-r/pl_abs_tingyi.m" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/Research/Project/ChGPhC/Emitters-vs-r/L1_532nm1per20x.txt" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Research/Project/ChG_PhC/As2S3_Absorption/pl_abs.m" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/Research/Project/ChGPhC/Emitters-vs-r/plot_data2.m" "/Users/LooChao/Dropbox/Research/Project/ChGPhC/Peak_plot/peak_plot.m" "~/Dropbox/Research/Project/ChGPhC/Peak_plot" "/Users/LooChao/Dropbox/Research/Thesis/ch-phc/chapter-phc-fdtd.tex" "/Volumes/DATA/Research/Meep/T3000/r14/n_ch24/" "/Volumes/DATA/Research/Meep/T3000/r13/n_ch24/" "/Volumes/DATA/Research/Meep/T3000/r12/n_ch24/" "/Volumes/DATA/Research/Meep/T3000/r11/n_ch24/" "/Volumes/DATA/Research/Meep/T3000/r14/" "/Volumes/DATA/Research/Meep/T3000/r13/" "/Volumes/DATA/Research/Meep/T3000/r12/" "/Volumes/DATA/Research/Meep/T3000/r11/" "/Volumes/DATA/Research/Meep/T3000/r10/n_ch24/" "/Volumes/DATA/Research/Meep/T3000/r10/" "/Volumes/DATA/Research/Meep/T4000/r14/n_ch24/figure/" "/Volumes/DATA/Research/Meep/T4000/r14/n_ch24/data" "/Volumes/DATA/Research/Meep/T4000/r13/n_ch24/data" "/Volumes/DATA/Research/Meep/T4000/r13/n_ch24/figure/" "/Volumes/DATA/Research/Meep/T4000/r10/n_ch24/data/" "/Volumes/DATA/Research/Meep/T4000/r11/n_ch24/data/" "/Volumes/DATA/Research/Meep/T4000/r11/n_ch24/figure/" "/Volumes/DATA/Research/Meep/T4000/r14/n_ch24/" "/Volumes/DATA/Research/Meep/T4000/r13/n_ch24/" "/Volumes/DATA/Research/Meep/T4000/r31/n_ch24/" "/Volumes/DATA/Research/Meep/T4000/r12/n_ch24/" "/Volumes/DATA/Research/Meep/T4000/r14/" "/Volumes/DATA/Research/Meep/T4000/r14" "/Volumes/DATA/Research/Meep/T4000/r13" "/Volumes/DATA/Research/Meep/T4000/r12/" "/Volumes/DATA/Research/Meep/T4000/r11/n_ch24/" "/Volumes/DATA/Research/Meep/T4000/r10/n_ch24/figure/" "/Volumes/DATA/Research/Meep/T4000/r11/" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T4000/r10/n_ch24/plot_data2.m" "/Volumes/DATA/Research/Meep/T4000/r10/n_ch24/figure" "/Volumes/DATA/Research/Meep/T4000/r10/n_ch24/" "/Volumes/DATA/Research/Meep/T4000/" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T4000/r10/plot_data.py" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T4000/r10/sort_data.py" "~/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T4000/r14" "~/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T4000/r13" "~/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T4000/r12" "~/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T4000/r11" "~/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T4000/r10" "~/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T3000/r14" "~/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T3000/r13" "~/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T3000/r12" "~/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T3000/r11" "~/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T3000/r10" "/Volumes/DATA/Research/Meep/" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/T3000/r14.kaka/plot_data.m" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Fcen_Harmive_With_Dispersion/data_T4000" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Fcen_Harmive_With_Dispersion/data_T3000/" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Fcen_Harmive_With_Dispersion/data_T2000" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Fcen_Harmive_With_Dispersion/data_T3000" "~/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/data/T2000/r10/n_ch24/figure/" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Research/Meep/data/T2000/r10/n_ch24/harminv-T2000-r01-fcen10-df1-n-ch24-kx00-ky00-d-si-true.png" "/Volumes/DATA/Research/Meep/data/T2000/r10/n_ch24/" "/Volumes/DATA/Research/Meep/data/T2000/r10/" "/Volumes/DATA/Research/Meep/data/T2000/r10/n_ch24" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Career/lch-email/lch-email-harvard-lieber.org" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Career/lch-email/lch-email.tex" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Career/lch-email" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Career/lch-cover-letter/figures/" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Career/lch-cv/backup" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/Career/lch-cv/Makefile" "/Users/LooChao/.wine/dosdevices/h:/Dropbox/Career_INBOX/loochao_cover_letter/loochao_cover_letter.tex" "~/.wine/dosdevices/z:/Users/LooChao/Dropbox/Career/lch-cover-letter/lch-cover-letter.tex" "~/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Career/lch-cover-letter/lch-cover-letter.tex" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/Career/lch-cover-letter/formal_letter_4.tex" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/Research/Project/ChGPhC/Resonance.png" "/Volumes/DATA/Music/POPCN/" "/Volumes/DATA/Research/Meep/data/kx-ky/df1/r12/n_ch24/process_dat.py" "/Volumes/DATA/Research/Meep/data/kx-ky/df1/backup/" "/Volumes/DATA/Research/Meep/data/kx-ky/df1/backup" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/data_si_disperse_nch24_T1000/r08/n_ch24/figure/" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/data/" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/data" "/Users/LooChao/Downloads/test.tex" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Career/lch-cover-letter/Makefile" "/Volumes/DATA/Research/Meep/data/kx-ky/df1/r09/n_ch24/figure/" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/Research/Thesis/Makefile" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/Research/Thesis/lch-pums-thesis.tex" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Fcen_Harmive_With_Dispersion/data" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Fcen_Harmive_With_Dispersion/run_bak.py" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Fcen_Harmive_With_Dispersion/" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Code/Elisp/skeeto_emacsd/Makefile" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Career/lch-cover-letter/cover_example.tex" "~/Dropbox/Career/lch-cover-letter" "~/Dropbox/Career/lch-cv" "~/Dropbox/Career" "/Volumes/DATA/Research/Meep/data/kx-ky/df1/r11/n_ch24/" "/Volumes/DATA/Research/Meep/data/kx-ky/df1/r10/n_ch24/" "/Volumes/DATA/Research/Meep/data/kx-ky/df1/r09/n_ch24/" "/Volumes/DATA/Research/Meep/data/kx-ky/df1/r08/n_ch24/" "/Volumes/DATA/Research/Meep/data/kx-ky/df1/r14/n_ch24/figure/" "/Volumes/DATA/Research/Meep/data/kx-ky/df1/r13/n_ch24/figure/" "/Volumes/DATA/Research/Meep/data/kx-ky/df1/r12/n_ch24/figure/" "/Applications/Documents/Emacs.app/Contents/Resources/lisp/dired-x.el.gz" "/Users/LooChao/Dropbox/.emacs.d/lisp/dired/dired+/dired+.el" "~/Dropbox/.emacs.d/lisp/dired/dired+/dired+.el" "/Users/LooChao/Dropbox/.emacs.d/lisp/dired/dired+-20150222.2027/dired+.el" "/Users/LooChao/Dropbox/.emacs.d/lisp/sunrise-commander/sunrise-commander.el" "~/Dropbox/.emacs.d/lisp/sunrise-commander" "/Volumes/DATA/Research/Meep/data/kx-ky/df1/r12/plot_data2.py" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Fcen_Harmive_With_Dispersion/data_dirs_r12/" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Fcen_Harmive_With_Dispersion/data_dirs_r12" "/Volumes/DATA/Research/Meep/data/kx-ky/df1/r012" "/Volumes/DATA/Research/Meep/data/kx-ky/df1/r12" "/Users/LooChao/Dropbox/.emacs.d/lisp/ace-window/ace-window.el" "~/Dropbox/.emacs.d/lisp/ace-window" "/Users/LooChao/Dropbox/.emacs.d/lisp/hydra/lv.el" "/Users/LooChao/Dropbox/.emacs.d/lisp/hydra/iv.el" "/Users/LooChao/Dropbox/.emacs.d/lisp/hydra/hydra.el" "~/Dropbox/.emacs.d/lisp/hydra" "~/Dropbox/.emacs.d/lisp/zop-to-char.el" "/Users/LooChao/.wine/dosdevices/h:/.zlogin" "/Users/LooChao/.wine/dosdevices/h:/.zsh_history" "/Users/LooChao/Downloads/install.sh" "/Users/LooChao/Dropbox/.emacs.d/etc/_osx.sh" "~/Dropbox/.emacs.d/etc/_macosx_setup.sh" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Code/Dotfile/dotfiles/osx/set-defaults.sh" "~/Dropbox/Programming_INBOX/Shell/" "~/Dropbox/Programming/lch-elisp/lch-hotdir.el" "~/Dropbox/Programming/lch-python/netease.py" "~/Dropbox/Programming/lch-closure" "~/Downloads/figure/" "~/Dropbox/.emacs.d/lisp/golden-ratio-20141208.844/golden-ratio.el" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Fcen_Harmive_With_Dispersion/figure" "~/Dropbox/Career/loochao_resume_2_for_job/" "~/Dropbox/Career/loochao_resume_academia" "~/Downloads/data/kx-ky/df1/r14/kx-ky/.." "~/Downloads/data/kx-ky/df1/r14/kx-ky/../backup/" "~/Downloads/data/kx-ky/df1/r14/backup/" "~/Downloads/data/kx-ky/df1/r14/backup" "~/Downloads/data/kx-ky/df1/r14/kx-ky/" "~/Downloads/data/kx-ky/df1/r14/kx-ky" "~/Downloads/data/kx-ky/df1/r14" "/Volumes/DATA/Research/" "~/Downloads/data/kx-ky/df1/r14/" "~/Downloads/data/kx-ky/df1/r13/" "~/Downloads/data/kx-ky/df1/r12/n_ch25/plot_data2.m" "~/Downloads/data/kx-ky/df1/r12" "~/Downloads/data/kx-ky/df1/r12/" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/Research/Data/Ellipsometry/140219/As2S3_Metal_n.m" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Fcen_Harmive_With_Dispersion/run.py" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Fcen_Harmive_With_Dispersion/test/" "~/Downloads/data/kx-ky/df2" "~/Downloads/data/kx-ky/df1/" "~/Downloads/data/kx-ky/df1" "~/Downloads/data/si-d-true/../kx-ky/" "~/Downloads/data/si-n35/" "~/Downloads/data/si-n35" "~/Downloads/data/kx-ky/../foo/" "~/Downloads/data/foo/" "~/Downloads/data/foo" "~/Downloads/data/kx-ky/../si-true/" "~/Downloads/data/kx-ky" "~/Downloads/data/si-true" "~/Downloads/data/kx-ky/" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/.emacs.d/elpa/powerline-evil-20140517.1/powerline-evil-themes.el" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/.emacs.d/lisp/powerline-20141125.726/powerline.el" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Downloads/spacemacs/elpa/powerline-20141125.726/powerline-themes.el" "/Users/LooChao/Dropbox/.emacs.d/archive/spacemacs-powerline.el" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.d/lisp/linum-relative-20140731.730/linum-relative.el" "/Users/LooChao/Dropbox/.emacs.d/rc/lch-helm.el" "~/Dropbox/.emacs.d/lisp/popwin/popwin.el" "/Users/LooChao/Downloads/diminish" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/.emacs.d/lisp/powerline-evil-20140517.1/powerline-evil.el" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/.emacs.d/elpa/powerline-evil-20140517.1/powerline-evil.el" "~/*scratch*" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.d/lisp/expand-region-20141223.1328/expand-region-core.el" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.d/lisp/golden-ratio-20141208.844/golden-ratio-pkg.el" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.d/lisp/golden-ratio-20141208.844/golden-ratio.el" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.d/lisp/multi-term-20141203.1658/multi-term.el" "/Users/LooChao/Downloads/Yinyuetai/baidu_weather.py" "~/Downloads/d_yinyuetai_MV.py" "~/Dropbox/.emacs.d/rc/../" "/Users/LooChao/.emacs" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Fcen_Harmive_With_Dispersion/df1" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Fcen_Harmive_With_Dispersion/df2" "/Users/LooChao/.rvm/rubies/default/bin/enclient.rb" "/Users/LooChao/.rvm/rubies/ruby-1.9.3-p551/bin/enclient.rb" "~/.rvm/rubies/default/bin/enclient.rb" "/Users/LooChao/Dropbox/.emacs.d/lisp/evernote-mode/ruby/setup.rb" "/Users/LooChao/Dropbox/.emacs.d/lisp/evernote-mode/evernote-mode.el" "/Users/LooChao/Downloads/spacemacs/travis//opt/local/var/macports/logs/_opt_local_var_macports_sources_rsync.macports.org_release_ports_graphics_poppler/poppler/" "/opt/local/var/macports/logs/_opt_local_var_macports_sources_rsync.macports.org_release_ports_math_gnuplot/gnuplot/main.log" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Downloads/Test.org" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Downloads/emacs-conf/profiles/home-linux.el" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Fcen_Harmive_With_Dispersion/110" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Fcen_Harmive_With_Dispersion/120/" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Fcen_Harmive_With_Dispersion/120" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Fcen_Harmive_With_Dispersion/140" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_fcen_Harmive_With_Dispersion" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_fcen133_Harmive_With_Dispersion/run_bak.sh" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_fcen133_Harmive_With_Dispersion/" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_fcen133_Harmive_With_Dispersion" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/Research/Project/ChGPhC/Data/Raman/140/phcp_140.m" "~/Dropbox/Research/Project/ChGPhC/Data/Raman/140" "~/Dropbox/Research/Project/ChGPhC/Data/Raman/140/" "/Users/LooChao/Dropbox/Research/Project/ChGPhC/Data/Raman/phcp2.m" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/Research/Project/Surface.Relief/Thesis/Archival_paper/Acknowledgement/acknowledgement.tex" "/Volumes/DATA/Dropbox/research/project/Surface.Relief/Thesis/Archival paper/Chapter1/paper/Chapter1/chapter1.tex" "/Volumes/DATA/Dropbox/research/project/Surface.Relief/Thesis/Archival paper/paper/thesis.tex" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Downloads/LorenzianMaterialFia_share.m" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Harmive_Var_n_Si_No_Dispersion/n40/Data/" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Harmive_Var_n_Si_No_Dispersion/n40" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Harmive_Var_n_Si_No_Dispersion/n36/Data/" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Harmive_Var_n_Si_No_Dispersion/n40/" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Harmive_Var_n_ChG_With_Dispersion/n18/Data/" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Harmive_Var_n_ChG_With_Dispersion/n18/Data" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Harmive_Var_n_ChG_With_Dispersion/n18" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Harmive_Var_n_ChG_With_Dispersion/n23/Data/" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Harmive_Var_n_ChG_With_Dispersion/n23" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Harmive_Var_n_Si_No_Dispersion/" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Harmive_Var_n_Si_No_Dispersion" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/.emacs.d/lisp/evernote-mode/evernote-mode.el" "~/Dropbox/.emacs.d/lisp/evernote-mode" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Harmive_No_Dispersion/find_max.pl" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Harmive_No_Dispersion/analysis.sh" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Harmive_No_Dispersion/sim-150122-07-18-harminv-no-dispersion-r140-T2000/../" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Harmive_With_Dispersion/" "/scpc:jaimevrl@ab-initio.mit.edu:/home/jaimevrl/chao/Unit_Cell_Harmive_With_Dispersion" "~/Dropbox/.emacs.d/" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Applications/Library/Dash/DocSets/Bash/Bash.docset/Contents/Info.plist" "/Users/LooChao/Downloads/Test.org" "/Users/LooChao/Downloads/Spanish.org" "/Users/LooChao/Dropbox/.emacs.d/lisp/popwin/popwin.el" "~/Dropbox/.emacs.d/lisp/popwin" "/Users/LooChao/Dropbox/.emacs.d/lisp/guide-key/guide-key.el" "~/Dropbox/.emacs.d/lisp/guide-key" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Downloads/foo.png" "/Users/LooChao/Dropbox/.emacs.d/rc/lch-custom.el" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.d/lisp/s/20140910.334" "/Users/LooChao/.wine/dosdevices/z:/Volumes/DATA/Dropbox/.emacs.d/lisp/evil-leader/elpa-version" "/Users/LooChao/Dropbox/.emacs.d/rc/lch-evil.el" "/Users/LooChao/Downloads/test/test.org" "~/Downloads/test" "~/Downloads/Test.org" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Downloads/emacs-conf/init.el" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/.emacs.d/elpa/goto-chg-20131228.1459/goto-chg.el" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/.emacs.d/lisp/goto-last-change/goto-last-change.el" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/.emacs.d/elpa/goto-chg-20131228.1459/goto-chg.el" "/Users/LooChao/.wine/dosdevices/z:/Users/LooChao/Dropbox/.emacs.d/lisp/evil-20150105.2348/evil-maps.el" "/Users/LooChao/Dropbox/.emacs.d/lisp/winner/winner.el" "~/Dropbox/.emacs.d/lisp/winner" "/Users/LooChao/Downloads/dotfiles/emacs.d/config/cofi-autoloads.el" "/Users/LooChao/Downloads/dotfiles/emacs.d/config/1print.el" "/Users/LooChao/Dropbox/.emacs.d/rc/lch-ibuffer.el" "~/Downloads/evil-theme.el" "/Users/LooChao/Downloads/evil.el" "~/Downloads/OP2" "~/Dropbox/Org/org/Ruby" "/Users/LooChao/Dropbox/Org/org/Ruby.org" "/Users/LooChao/Dropbox/Org/org/Shell/rvm_installer.sh"))
(setq extended-command-history '("lisp-mode" "customize-face" "el-get-update-all" "el-get-init" "el-get-update" "print-buffer" "pretty-control-l-mode" "find-dired" "eshell"))
(setq ido-buffer-history '("dotEmacs" "*Shell Command Output*" "*shell*" ".emacs.d" "A_北大数学物理方法_吴崇试(V)" "LooChao/Dropbox" "CNU" "算法基础" "DATA" "_spacemacs_bak5" "_spacemacs" "lch-spacemacs.el" "*MATLAB*" "pstat.m" "*scratch*" "*ruby*" "Pharmaseq" "Pharmaseq-Software.org" "pcov.m" nil "pcover.m" "Pharmaseq.org" "Apps.sln" "C" "Vagrantfile" "UserAdminView.clj" "abstract.tex" "*Ido Completions*" "test.c" "Dropbox" "Manifold06" "PharmaSeq_Manifold_Solidworks" "PharmaSeqCommon" "PORTS" "USLife.org" ".emacs.dz" "init.el" "spacemacs-private" "spacemacs/init.el" "Personal" "Manifold.STEP" "Simulation12/case.sif" "Simulation11" "Simulation11/case.sif" "Manifold.geo" "Simulation12.geo" "Manifold10.geo" "core-dotspacemacs.el" "core-spacemacs-buffer.el" "core-spacemacs.el" "core-auto-completion.el" "core-release-management.el" "Simulation10" "Manifold9.geo" "Sorter.base.for.Simulation5.geo" "core" "Simulation8/Manifold.sif" "Manifold8.geo" "Simulation8" "Manifold8" "mesh.nodes" "Manifold8.msh" "shell/packages.el" "Simulation7_SquareInlet_Gmsh" "Simulation7_SquareInlet_testing/Manifold.sif" "Manifold.sif" "lch-home-buffer.el" "spacemacs-base/funcs.el" "rc" "lch-util.el" "lch-core.el" "lch-network.el" "lch-binding.el" "Simulation6_gmsh/Manifold.sif" "Simulation6/Manifold.sif" "/" "lch-pgm.el" "*terminal<1>*" "lch-evil.el" "lch-env.el" "lch-startup-buffer.el" "core-funcs.el" "core-toggle.el" "snippets/README.md" ".gitignore" "core-load-paths.el" "spacemacs-base/keybindings.el" "config.el" "lch-init.el" "lch-dired.el" "org" "*Moccur*" "chinese/README.org" "Downloads/ycmd" "global_conf.py" "ycmd/README.md" "ycmd/README.org" "vagrant" "vagrant/README.org" "evernote/README.org" "README.md" "color-theme-loochao.el" "lch-gnus.el" "_spacemacs_bak" "case.sif" "case_example.sif" "linearelasticity.xml" "keybindings.el" "Simulation3_gmsh" "Elmer.org" "ELMERSOLVER_STARTINFO" "2_fluid_sloshing.sif" "Simulation4" "*evil-registers*" "Zhihu.org" "Python.org" "*IPython*" "Code.org" "lch-ui.el" "INSTALL" "Tube.sif" "Pearl.org" "dired+.el" "Downloads" "Miscellaneous.org" "lch-org.el" "test2/mesh.boundary" "test2" "flow_res_slip.sif" "sif/case.sif" "TEST.PASSED" "hole" "test2/Makefile" "build2/lch-elmer-mac-build.sh" "FlowResNoslip/Makefile" "etc" "*ansi-term*" "_bashrc" "lch-elmer-mac-build.sh" "build2" "build/Makefile" "tests" "ExtrusionStructured2D" "extrude.sif" "fem" "www.tsinghuaveterans.com/index.html" "contact.html" "www.chlorislipianostudio.com" #("index.html" 0 10 (face ido-virtual)) "www.tsinghuaveterans.com" "path_find" "Chloris-Web.org" "THUVeteran" "Chloris" "bootstrap.min.js" "slides.tex" "Thesis" "tov-defense-2012-slides-src" "新出简帛的学术探索.李锐.北京师范大学出版社.20.pdf" "Chloris_Web.org" "www.emilylaupianostudio.com" "*w3m*<4>" "evil" "lisp" "15GT-Hotel.org" " *Minibuf-1*" "lch-aquamacs.el" "*Messages*" "*Backtrace*" "lch-aquamacs.el" "*ssh-nobel.princeton.edu*" "*Completions*" "*ssh-nobel.princeton.edu*" "w3" "bi" "*m" "pp-" "*me" "i" "thro" "eli" "elis" "th" "the" "shee" "fc" "cheat" "sour" "che" "w3m" "bm" "elisp" "lch" "we"))
(setq ido-file-history '(".emacs.d/" nil "pslog.txt" ".spacemacs" "spacemacs/" "test.c" "Dropbox/" "Pharmaseq.org" "lch-music-sort.el" "THUVeteran.org" "case_bak.sif" "Manifold8.geo_bak" "lch-spacemacs.el" "Manifold.sif" "test5_SimpleChannel" "lch-startup-buffer.el" ".gitignore" "lch-gnus.el" "lch-dz-common.el" "case_example.sif" "case_v4_WorkedBetterCanFinish_NotCorrect.sif" "Elmer.org" "Hack.org" "Python.org" "Code.org" "libexec/" "lch-elmer-mac-build.sh" "Chloris-Web.org" "Chloris_Web.org" "test.html" "lib" "wu" "vo" "lch-eli" "elisp_bak.el" "eli" "pu" "org" "lch-outline.el" "l" "edu" "dro" "def" "harpoon.sty" "va" ".b" "v" "bm.el" "loochao-emacs-cheat-sheet.tex" ".em" "ma" "cho" "test.html" "iDD.org" "rc/" "_b" "do" "li" "~/"))
(setq kill-ring '(#("
" 0 1 (fontified t)) #("Chao-LUs-MacBook-Pro" 0 5 (face font-lock-string-face fontified t) 5 9 (fontified t face font-lock-string-face) 9 17 (face font-lock-string-face fontified t) 17 19 (face font-lock-string-face fontified t) 19 20 (face font-lock-string-face fontified t rear-nonsticky t)) #("
" 0 1 (fontified t)) #("(defvar lch-system-list ())
" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 23 (face font-lock-variable-name-face fontified t) 23 24 (fontified t) 24 25 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 25 26 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 26 27 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 27 28 (fontified t)) #("Chao-LUs-MacBook-Pro" 0 20 (fontified t)) #(";;-*- coding:utf-8; mode:emacs-lisp; -*-

;>========== DOTEMACS ==========<;

;;; LCH-EMACS
;;
;; 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015
;; Author: Chao LU <(concat \"Loochao\" at-symbol \"gmail.com\")>
;; Keywords: dotemacs, init, loochao, lch
;;
;; Inspired by spacemacs, deepin-emacs, and a lot of .emacs.d online.
;;
;; URL: <>
;;
;; This file is NOT part of GNU Emacs.
;;
;; $Revision:  $
;; $Date: 2010-07-08 15:13:00 +0200 (Thu, 08 Jul 2010) $
;;
;; This file is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation; either version 2, or (at your option)
;; any later version.
;;
;; This file is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with GNU Emacs; see the file COPYING.  If not, write to
;; the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
;; Boston, MA 02111-1307, USA.
;;
;;; Commentary:
;;
;;    ___ _ __ ___   __ _  ___ ___
;;   / _ \\ '_ ` _ \\ / _` |/ __/ __|
;;  |  __/ | | | | | (_| | (__\\__ \\
;; (_)___|_| |_| |_|\\__,_|\\___|___/
;;
;;
;; \"Show me your ~/.emacs and I will tell you who you are.\"
;;                                                    [Bogdan Maryniuk]
;;
;; \"Emacs is like a laser guided missile. It only has to be slightly
;;  mis-configured to ruin your whole day.\"
;;                                                       [Sean McGrath]
;;
;; \"While any text editor can save your files, only Emacs can save your
;; soul.\"
;;                                                     [Per Abrahamsen]
;; This is where everything starts. Do you remember this place?
;; It remembers you...
;;                                                         [Emacs Live]
;;                _.-^^---....,,--
;;            _--                  --_
;;           <          SONIC         >)
;;           |       BOOOOOOOOM!       |
;;            \\._                   _./
;;               ```--. . , ; .--'''
;;                     | |   |
;;                  .-=||  | |=-.
;;                  `-=#$%&%$#=-'
;;                     | ;  :|
;;            _____.,-#%&$@%#&#~,._____

;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(package-initialize)

(message \"* --[ Loading my Emacs init file ]--\")

;; uptimes
(setq emacs-load-start-time (current-time))

;;; GLOBAL-CONST
(defconst lch-win32-p (eq system-type 'windows-nt) \"Are we on Windows?\")
(defconst lch-linux-p (eq system-type 'gnu/linux) \"Are we on Linux?\")
(defconst lch-mac-p (eq system-type 'darwin) \"Are we on Mac\")

(defun lch-mac-p ()
  (string-equal system-type \"darwin\"))
(defun lch-linux-p ()
  (string-equal system-type \"gnu/linux\"))
(defun lch-windows-p ()
  (string-equal system-type \"windows-nt\"))

(defvar lch-emacs-in-dropbox-p t" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 41 (fontified t face font-lock-comment-face) 41 42 (fontified t) 42 43 (fontified t face font-lock-comment-delimiter-face) 43 77 (fontified t face font-lock-comment-face) 77 78 (fontified t) 78 82 (fontified t face font-lock-comment-delimiter-face) 82 92 (fontified t face font-lock-comment-face) 92 94 (fontified t face font-lock-comment-delimiter-face) 94 95 (fontified t face font-lock-comment-face) 95 98 (fontified t face font-lock-comment-delimiter-face) 98 153 (fontified t face font-lock-comment-face) 153 156 (fontified t face font-lock-comment-delimiter-face) 156 215 (fontified t face font-lock-comment-face) 215 218 (fontified t face font-lock-comment-delimiter-face) 218 257 (fontified t face font-lock-comment-face) 257 259 (fontified t face font-lock-comment-delimiter-face) 259 260 (fontified t face font-lock-comment-face) 260 263 (fontified t face font-lock-comment-delimiter-face) 263 330 (fontified t face font-lock-comment-face) 330 332 (fontified t face font-lock-comment-delimiter-face) 332 333 (fontified t face font-lock-comment-face) 333 336 (fontified t face font-lock-comment-delimiter-face) 336 344 (fontified t face font-lock-comment-face) 344 346 (fontified t face font-lock-comment-delimiter-face) 346 347 (fontified t face font-lock-comment-face) 347 350 (fontified t face font-lock-comment-delimiter-face) 350 386 (fontified t face font-lock-comment-face) 386 388 (fontified t face font-lock-comment-delimiter-face) 388 389 (fontified t face font-lock-comment-face) 389 392 (fontified t face font-lock-comment-delimiter-face) 392 406 (fontified t face font-lock-comment-face) 406 409 (fontified t face font-lock-comment-delimiter-face) 409 463 (fontified t face font-lock-comment-face) 463 465 (fontified t face font-lock-comment-delimiter-face) 465 466 (fontified t face font-lock-comment-face) 466 469 (fontified t face font-lock-comment-delimiter-face) 469 535 (fontified t face font-lock-comment-face) 535 538 (fontified t face font-lock-comment-delimiter-face) 538 607 (fontified t face font-lock-comment-face) 607 610 (fontified t face font-lock-comment-delimiter-face) 610 678 (fontified t face font-lock-comment-face) 678 681 (fontified t face font-lock-comment-delimiter-face) 681 700 (fontified t face font-lock-comment-face) 700 702 (fontified t face font-lock-comment-delimiter-face) 702 703 (fontified t face font-lock-comment-face) 703 706 (fontified t face font-lock-comment-delimiter-face) 706 767 (fontified t face font-lock-comment-face) 767 770 (fontified t face font-lock-comment-delimiter-face) 770 833 (fontified t face font-lock-comment-face) 833 836 (fontified t face font-lock-comment-delimiter-face) 836 898 (fontified t face font-lock-comment-face) 898 901 (fontified t face font-lock-comment-delimiter-face) 901 946 (fontified t face font-lock-comment-face) 946 948 (fontified t face font-lock-comment-delimiter-face) 948 949 (fontified t face font-lock-comment-face) 949 952 (fontified t face font-lock-comment-delimiter-face) 952 1018 (fontified t face font-lock-comment-face) 1018 1021 (fontified t face font-lock-comment-delimiter-face) 1021 1083 (fontified t face font-lock-comment-face) 1083 1086 (fontified t face font-lock-comment-delimiter-face) 1086 1151 (fontified t face font-lock-comment-face) 1151 1154 (fontified t face font-lock-comment-delimiter-face) 1154 1182 (fontified t face font-lock-comment-face) 1182 1184 (fontified t face font-lock-comment-delimiter-face) 1184 1185 (fontified t face font-lock-comment-face) 1185 1189 (fontified t face font-lock-comment-delimiter-face) 1189 1201 (fontified t face font-lock-comment-face) 1201 1203 (fontified t face font-lock-comment-delimiter-face) 1203 1204 (fontified t face font-lock-comment-face) 1204 1210 (fontified t face font-lock-comment-delimiter-face) 1210 1239 (fontified t face font-lock-comment-face) 1239 1244 (fontified t face font-lock-comment-delimiter-face) 1244 1275 (fontified t face font-lock-comment-face) 1275 1279 (fontified t face font-lock-comment-delimiter-face) 1279 1311 (fontified t face font-lock-comment-face) 1311 1314 (fontified t face font-lock-comment-delimiter-face) 1314 1347 (fontified t face font-lock-comment-face) 1347 1349 (fontified t face font-lock-comment-delimiter-face) 1349 1350 (fontified t face font-lock-comment-face) 1350 1352 (fontified t face font-lock-comment-delimiter-face) 1352 1353 (fontified t face font-lock-comment-face) 1353 1356 (fontified t face font-lock-comment-delimiter-face) 1356 1413 (fontified t face font-lock-comment-face) 1413 1467 (fontified t face font-lock-comment-delimiter-face) 1467 1485 (fontified t face font-lock-comment-face) 1485 1487 (fontified t face font-lock-comment-delimiter-face) 1487 1488 (fontified t face font-lock-comment-face) 1488 1491 (fontified t face font-lock-comment-delimiter-face) 1491 1557 (fontified t face font-lock-comment-face) 1557 1561 (fontified t face font-lock-comment-delimiter-face) 1561 1601 (fontified t face font-lock-comment-face) 1601 1658 (fontified t face font-lock-comment-delimiter-face) 1658 1673 (fontified t face font-lock-comment-face) 1673 1675 (fontified t face font-lock-comment-delimiter-face) 1675 1676 (fontified t face font-lock-comment-face) 1676 1679 (fontified t face font-lock-comment-delimiter-face) 1679 1748 (fontified t face font-lock-comment-face) 1748 2287 (fontified nil) 2287 2307 (fontified t face font-lock-comment-delimiter-face) 2307 2321 (fontified t face font-lock-comment-face) 2321 2344 (fontified t face font-lock-comment-delimiter-face) 2344 2352 (fontified t face font-lock-comment-face) 2352 2366 (fontified t face font-lock-comment-delimiter-face) 2366 2392 (fontified t face font-lock-comment-face) 2392 2393 (fontified t) 2393 2396 (fontified t face font-lock-comment-delimiter-face) 2396 2458 (fontified t face font-lock-comment-face) 2458 2461 (fontified t face font-lock-comment-delimiter-face) 2461 2529 (fontified t face font-lock-comment-face) 2529 2532 (fontified t face font-lock-comment-delimiter-face) 2532 2600 (fontified t face font-lock-comment-face) 2600 2603 (fontified t face font-lock-comment-delimiter-face) 2603 2646 (fontified t face font-lock-comment-face) 2646 2647 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 2647 2665 (fontified t) 2665 2666 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 2666 2668 (fontified t) 2668 2669 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 2669 2677 (fontified t) 2677 2715 (fontified t face font-lock-string-face) 2715 2716 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 2716 2718 (fontified t) 2718 2721 (fontified t face font-lock-comment-delimiter-face) 2721 2729 (fontified t face font-lock-comment-face) 2729 2730 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 2730 2757 (fontified t) 2757 2758 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 2758 2770 (fontified t) 2770 2771 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 2771 2772 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 2772 2774 (fontified t) 2774 2778 (fontified t face font-lock-comment-delimiter-face) 2778 2791 (fontified t face font-lock-comment-face) 2791 2792 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 2792 2800 (fontified t face font-lock-keyword-face) 2800 2801 (fontified t) 2801 2812 (fontified t face font-lock-variable-name-face) 2812 2813 (fontified t) 2813 2814 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 2814 2840 (fontified t) 2840 2841 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 2841 2842 (fontified t) 2842 2862 (fontified t face font-lock-doc-face) 2862 2863 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 2863 2864 (fontified t) 2864 2865 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 2865 2873 (fontified t face font-lock-keyword-face) 2873 2874 (fontified t) 2874 2885 (fontified t face font-lock-variable-name-face) 2885 2886 (fontified t) 2886 2887 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 2887 2912 (fontified t) 2912 2913 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 2913 2914 (fontified t) 2914 2932 (fontified t face font-lock-doc-face) 2932 2933 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 2933 2934 (fontified t) 2934 2935 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 2935 2943 (fontified t face font-lock-keyword-face) 2943 2944 (fontified t) 2944 2953 (fontified t face font-lock-variable-name-face) 2953 2954 (fontified t) 2954 2955 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 2955 2977 (fontified t) 2977 2978 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 2978 2979 (fontified t) 2979 2994 (fontified t face font-lock-doc-face) 2994 2995 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 2995 2997 (fontified t) 2997 2998 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 2998 3003 (fontified t face font-lock-keyword-face) 3003 3004 (fontified t) 3004 3013 (fontified t face font-lock-function-name-face) 3013 3014 (fontified t) 3014 3015 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 3015 3016 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 3016 3019 (fontified t) 3019 3020 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 3020 3045 (fontified t) 3045 3053 (fontified t face font-lock-string-face) 3053 3054 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 3054 3055 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 3055 3056 (fontified t) 3056 3057 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 3057 3062 (fontified t face font-lock-keyword-face) 3062 3063 (fontified t) 3063 3074 (fontified t face font-lock-function-name-face) 3074 3075 (fontified t) 3075 3076 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 3076 3077 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 3077 3080 (fontified t) 3080 3081 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 3081 3106 (fontified t) 3106 3117 (fontified t face font-lock-string-face) 3117 3118 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 3118 3119 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 3119 3120 (fontified t) 3120 3121 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 3121 3126 (fontified t face font-lock-keyword-face) 3126 3127 (fontified t) 3127 3140 (fontified t face font-lock-function-name-face) 3140 3141 (fontified t) 3141 3142 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 3142 3143 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 3143 3146 (fontified t) 3146 3147 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 3147 3172 (fontified t) 3172 3184 (fontified t face font-lock-string-face) 3184 3185 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 3185 3186 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 3186 3187 (fontified t) 3187 3188 (fontified t) 3188 3189 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 3189 3195 (fontified t face font-lock-keyword-face) 3195 3196 (fontified t) 3196 3218 (fontified t face font-lock-variable-name-face) 3218 3220 (fontified t)) #("emacs" 0 5 (fontified t face font-lock-variable-name-face)) #("emacs" 0 5 (fontified t face font-lock-variable-name-face)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("Dear all,

I'm writing to reminder that our next meeting is scheduled on 2:00 pm on
Thursday (01/27/2016).

Please dial (712) 432-1500 with access code of 641913 to join the phone
conference. And we look forward to talking with you shortly.

With best regards,

Chao" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 40 (fontified t) 40 41 (fontified t) 41 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 90 (fontified t) 90 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 94 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t) 94 95 (fontified t) 95 96 (fontified t) 96 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 101 (fontified t) 101 102 (fontified t) 102 103 (fontified t) 103 104 (fontified t) 104 105 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t) 105 106 (fontified t) 106 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t) 109 110 (fontified t) 110 111 (fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 116 (fontified t) 116 117 (fontified t) 117 118 (fontified t) 118 119 (fontified t) 119 120 (fontified t) 120 121 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t) 121 122 (fontified t) 122 123 (fontified t) 123 124 (fontified t) 124 125 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t) 125 126 (fontified t) 126 127 (fontified t) 127 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 133 (fontified t) 133 134 (fontified t) 134 135 (fontified t) 135 136 (fontified t) 136 137 (fontified t) 137 138 (fontified t) 138 139 (fontified t) 139 140 (fontified t) 140 141 (fontified t) 141 142 (fontified t) 142 143 (fontified t) 143 144 (fontified t) 144 145 (fontified t) 145 146 (fontified t) 146 147 (fontified t) 147 148 (fontified t) 148 149 (fontified t) 149 150 (fontified t) 150 151 (fontified t) 151 152 (fontified t) 152 153 (fontified t) 153 154 (fontified t) 154 155 (fontified t) 155 156 (fontified t) 156 157 (fontified t) 157 158 (fontified t) 158 159 (fontified t) 159 160 (fontified t) 160 161 (fontified t) 161 162 (fontified t) 162 163 (fontified t) 163 164 (fontified t) 164 165 (fontified t) 165 166 (fontified t) 166 167 (fontified t) 167 168 (fontified t) 168 169 (fontified t) 169 170 (fontified t) 170 171 (fontified t) 171 172 (fontified t) 172 173 (fontified t) 173 174 (fontified t) 174 175 (fontified t) 175 176 (fontified t) 176 177 (fontified t) 177 178 (fontified t) 178 179 (fontified t) 179 180 (fontified t) 180 181 (fontified t) 181 182 (fontified t) 182 183 (fontified t) 183 184 (fontified t) 184 185 (fontified t) 185 186 (fontified t) 186 187 (fontified t) 187 188 (fontified t) 188 189 (fontified t) 189 190 (fontified t) 190 191 (fontified t) 191 192 (fontified t) 192 193 (fontified t) 193 194 (fontified t) 194 195 (fontified t) 195 196 (fontified t) 196 197 (fontified t) 197 198 (fontified t) 198 203 (fontified t) 203 204 (fontified t) 204 205 (fontified t) 205 206 (fontified t) 206 207 (fontified t) 207 208 (fontified t) 208 209 (fontified t) 209 210 (fontified t) 210 211 (fontified t) 211 212 (fontified t) 212 213 (fontified t) 213 214 (fontified t) 214 215 (fontified t) 215 216 (fontified t) 216 217 (fontified t) 217 218 (fontified t) 218 219 (fontified t) 219 220 (fontified t) 220 221 (fontified t) 221 222 (fontified t) 222 223 (fontified t) 223 224 (fontified t) 224 225 (fontified t) 225 226 (fontified t) 226 227 (fontified t) 227 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 232 (fontified t) 232 233 (fontified t) 233 234 (fontified t) 234 235 (fontified t) 235 236 (fontified t) 236 237 (fontified t) 237 238 (fontified t) 238 239 (fontified t) 239 240 (fontified t) 240 241 (fontified t) 241 242 (fontified t) 242 243 (fontified t) 243 244 (fontified t) 244 245 (fontified t) 245 246 (fontified t) 246 247 (fontified t) 247 248 (fontified t) 248 249 (fontified t) 249 250 (fontified t) 250 251 (fontified t) 251 252 (fontified t) 252 253 (fontified t) 253 254 (fontified t) 254 255 (fontified t) 255 256 (fontified t) 256 257 (fontified t) 257 258 (fontified t) 258 259 (fontified t) 259 260 (fontified t) 260 261 (fontified t) 261 262 (fontified t) 262 263 (fontified t) 263 264 (fontified t) 264 265 (fontified t) 265 266 (fontified t)) #("John Sharpe <jsharpe@cytonome.com>; ChrisLofstrom <clofstrom@cytonome.com>;
Etienne Dano <edano@cytonome.com>; Tom, Coradetti <coradetti@pharmaseq.com>;
Wes Kopacka <kopacka@pharmaseq.com>; Wlodek Mandecki <mandecki@pharmaseq.com>
" 0 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 41 (fontified t) 41 42 (fontified t) 42 74 (fontified t) 74 76 (fontified t) 76 109 (fontified t) 109 150 (fontified t) 150 151 (rear-nonsticky t fontified t) 151 153 (fontified t) 153 166 (fontified t) 166 188 (fontified t) 188 189 (fontified t rear-nonsticky t) 189 190 (fontified t) 190 197 (fontified t) 197 198 (fontified t) 198 229 (fontified t) 229 230 (fontified t rear-nonsticky t) 230 231 (fontified t)) #("Wlodek
Mandecki <mandecki@pharmaseq.com>" 0 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 40 (fontified t)) #("Wes Kopacka <kopacka@pharmaseq.com>;" 0 13 (fontified t) 13 35 (fontified t) 35 36 (fontified t)) #("Wes Kopacka <kopacka@pharmaseq.com>; John Sharpe <jsharpe@cytonome.com>; Chris
Lofstrom <clofstrom@cytonome.com>; Etienne Dano <edano@cytonome.com>; Wlodek
Mandecki <mandecki@pharmaseq.com>; Tom, Coradetti <coradetti@pharmaseq.com>
" 0 13 (fontified t) 13 35 (fontified t) 35 37 (fontified t) 37 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 112 (fontified t) 112 114 (fontified t) 114 148 (fontified t) 148 149 (fontified t) 149 155 (fontified t) 155 156 (fontified t) 156 157 (fontified t) 157 230 (fontified t) 230 231 (rear-nonsticky t fontified t) 231 232 (fontified t)) #("I hope all is well.

" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t)) #("Dear all,

I hope all is well.

I'm writing to reminder that our next meeting is scheduled on 2:00 pm on
Thursday (01/27/2016).

Please dial (712) 432-1500 with access code of 641913 to join the phone
conference. And we look forward to talking with you shortly.

With best regards,

Chao
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 61 (fontified t) 61 62 (fontified t) 62 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 90 (fontified t) 90 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t) 96 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 101 (fontified t) 101 104 (fontified t) 104 105 (fontified t) 105 106 (fontified t) 106 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t) 109 110 (fontified t) 110 111 (fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t) 114 115 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t) 115 116 (fontified t) 116 117 (fontified t) 117 118 (fontified t) 118 119 (fontified t) 119 120 (fontified t) 120 121 (fontified t) 121 122 (fontified t) 122 123 (fontified t) 123 124 (fontified t) 124 125 (fontified t) 125 126 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t) 126 127 (fontified t) 127 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 133 (fontified t) 133 134 (fontified t) 134 135 (fontified t) 135 136 (fontified t) 136 137 (fontified t) 137 138 (fontified t) 138 139 (fontified t) 139 140 (fontified t) 140 141 (fontified t) 141 142 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t) 142 143 (fontified t) 143 144 (fontified t) 144 145 (fontified t) 145 146 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t) 146 147 (fontified t) 147 148 (fontified t) 148 149 (fontified t) 149 150 (fontified t) 150 151 (fontified t) 151 152 (fontified t) 152 153 (fontified t) 153 154 (fontified t) 154 155 (fontified t) 155 156 (fontified t) 156 157 (fontified t) 157 158 (fontified t) 158 159 (fontified t) 159 160 (fontified t) 160 161 (fontified t) 161 162 (fontified t) 162 163 (fontified t) 163 164 (fontified t) 164 165 (fontified t) 165 166 (fontified t) 166 167 (fontified t) 167 168 (fontified t) 168 169 (fontified t) 169 170 (fontified t) 170 171 (fontified t) 171 172 (fontified t) 172 173 (fontified t) 173 174 (fontified t) 174 175 (fontified t) 175 176 (fontified t) 176 177 (fontified t) 177 178 (fontified t) 178 179 (fontified t) 179 180 (fontified t) 180 181 (fontified t) 181 182 (fontified t) 182 183 (fontified t) 183 184 (fontified t) 184 185 (fontified t) 185 186 (fontified t) 186 187 (fontified t) 187 188 (fontified t) 188 189 (fontified t) 189 190 (fontified t) 190 191 (fontified t) 191 192 (fontified t) 192 193 (fontified t) 193 194 (fontified t) 194 195 (fontified t) 195 196 (fontified t) 196 197 (fontified t) 197 198 (fontified t) 198 199 (fontified t) 199 200 (fontified t) 200 201 (fontified t) 201 202 (fontified t) 202 203 (fontified t) 203 204 (fontified t) 204 205 (fontified t) 205 206 (fontified t) 206 207 (fontified t) 207 208 (fontified t) 208 209 (fontified t) 209 210 (fontified t) 210 211 (fontified t) 211 212 (fontified t) 212 213 (fontified t) 213 214 (fontified t) 214 215 (fontified t) 215 216 (fontified t) 216 217 (fontified t) 217 218 (fontified t) 218 219 (fontified t) 219 224 (fontified t) 224 225 (fontified t) 225 226 (fontified t) 226 227 (fontified t) 227 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 232 (fontified t) 232 233 (fontified t) 233 234 (fontified t) 234 235 (fontified t) 235 236 (fontified t) 236 237 (fontified t) 237 238 (fontified t) 238 239 (fontified t) 239 240 (fontified t) 240 241 (fontified t) 241 242 (fontified t) 242 243 (fontified t) 243 244 (fontified t) 244 245 (fontified t) 245 246 (fontified t) 246 247 (fontified t) 247 248 (fontified t) 248 249 (fontified t) 249 250 (fontified t) 250 251 (fontified t) 251 252 (fontified t) 252 253 (fontified t) 253 254 (fontified t) 254 255 (fontified t) 255 256 (fontified t) 256 257 (fontified t) 257 258 (fontified t) 258 259 (fontified t) 259 260 (fontified t) 260 261 (fontified t) 261 262 (fontified t) 262 263 (fontified t) 263 264 (fontified t) 264 265 (fontified t) 265 266 (fontified t) 266 267 (fontified t) 267 268 (fontified t) 268 269 (fontified t) 269 270 (fontified t) 270 271 (fontified t) 271 272 (fontified t) 272 273 (fontified t) 273 274 (fontified t) 274 275 (fontified t) 275 276 (fontified t) 276 277 (fontified t) 277 278 (fontified t) 278 279 (fontified t) 279 280 (fontified t) 280 281 (fontified t) 281 282 (fontified t) 282 283 (fontified t) 283 284 (fontified t) 284 285 (fontified t) 285 286 (fontified t) 286 287 (fontified t) 287 288 (fontified t)) #("I hope all is well.

I'm writing to reminder that our next meeting is scheduled on 2:00 pm on" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 50 (fontified t) 50 51 (fontified t) 51 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 90 (fontified t) 90 93 (fontified t)) #("And " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) #("I hope all is well.

" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t)) #("Ph" 0 1 (fontified t) 1 2 (fontified t)) #("; Chris
Lofstrom <clofstrom@cytonome.com>; Etienne Dano <edano@cytonome.com>; Wlodek
Mandecki <mandecki@pharmaseq.com>; Tom, Coradetti <coradetti@pharmaseq.com>

Dear all,

I hope all is well.

And I'm writing to reminder out next meeting is scheduled on 2:00 pm of this
Thursday (01/27/2016).

Please dial (712) 432-1500 with access code of 641913 to join the phone
conference. And we are looking forward to talking with you shortly.

With best regards,

Chao Lu, PhD
Scientist, PharmaSeq Inc." 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 41 (fontified t) 41 43 (fontified t) 43 77 (fontified t) 77 78 (fontified t) 78 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 159 (fontified t) 159 160 (fontified t rear-nonsticky t) 160 161 (fontified t) 161 162 (fontified t) 162 163 (fontified t) 163 164 (fontified t) 164 165 (fontified t) 165 166 (fontified t) 166 167 (fontified t) 167 168 (fontified t) 168 169 (fontified t) 169 170 (fontified t) 170 171 (fontified t) 171 172 (fontified t) 172 173 (fontified t) 173 174 (fontified t) 174 175 (fontified t) 175 176 (fontified t) 176 177 (fontified t) 177 178 (fontified t) 178 179 (fontified t) 179 180 (fontified t) 180 181 (fontified t) 181 182 (fontified t) 182 183 (fontified t) 183 184 (fontified t) 184 185 (fontified t) 185 186 (fontified t) 186 187 (fontified t) 187 188 (fontified t) 188 189 (fontified t) 189 190 (fontified t) 190 191 (fontified t) 191 192 (fontified t) 192 193 (fontified t) 193 194 (fontified t) 194 195 (fontified t) 195 196 (fontified t) 196 197 (fontified t) 197 198 (fontified t) 198 199 (fontified t) 199 200 (fontified t) 200 201 (fontified t) 201 202 (fontified t) 202 203 (fontified t) 203 204 (fontified t) 204 205 (fontified t) 205 206 (fontified t) 206 207 (fontified t) 207 208 (fontified t) 208 209 (fontified t) 209 210 (fontified t) 210 211 (fontified t) 211 212 (fontified t) 212 213 (fontified t) 213 214 (fontified t) 214 215 (fontified t) 215 216 (fontified t) 216 217 (fontified t) 217 218 (fontified t) 218 219 (fontified t) 219 220 (fontified t) 220 221 (fontified t) 221 222 (fontified t) 222 223 (fontified t) 223 224 (fontified t) 224 225 (fontified t) 225 226 (fontified t) 226 227 (fontified t) 227 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 232 (fontified t) 232 233 (fontified t) 233 234 (fontified t) 234 235 (fontified t) 235 236 (fontified t) 236 237 (fontified t) 237 238 (fontified t) 238 239 (fontified t) 239 240 (fontified t) 240 241 (fontified t) 241 242 (fontified t) 242 243 (fontified t) 243 244 (fontified t) 244 245 (fontified t) 245 246 (fontified t) 246 247 (fontified t) 247 248 (fontified t) 248 249 (fontified t) 249 250 (fontified t) 250 251 (fontified t) 251 252 (fontified t) 252 253 (fontified t) 253 254 (fontified t) 254 255 (fontified t) 255 256 (fontified t) 256 257 (fontified t) 257 258 (fontified t) 258 259 (fontified t) 259 260 (fontified t) 260 261 (fontified t) 261 262 (fontified t) 262 263 (fontified t) 263 264 (fontified t) 264 265 (fontified t) 265 266 (fontified t) 266 267 (fontified t) 267 268 (fontified t) 268 269 (fontified t) 269 270 (fontified t) 270 271 (fontified t) 271 272 (fontified t) 272 273 (fontified t) 273 274 (fontified t) 274 275 (fontified t) 275 276 (fontified t) 276 277 (fontified t) 277 278 (fontified t) 278 279 (fontified t) 279 280 (fontified t) 280 281 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 281 282 (fontified t) 282 283 (fontified t) 283 284 (fontified t) 284 285 (fontified t) 285 286 (fontified t) 286 287 (fontified t) 287 288 (fontified t) 288 289 (fontified t) 289 290 (fontified t) 290 291 (fontified t) 291 292 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 292 293 (fontified t) 293 294 (fontified t) 294 295 (fontified t) 295 296 (fontified t) 296 297 (fontified t) 297 298 (fontified t) 298 299 (fontified t) 299 300 (fontified t) 300 301 (fontified t) 301 302 (fontified t) 302 303 (fontified t) 303 304 (fontified t) 304 305 (fontified t) 305 306 (fontified t) 306 307 (fontified t) 307 308 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 308 309 (fontified t) 309 310 (fontified t) 310 311 (fontified t) 311 312 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 312 313 (fontified t) 313 314 (fontified t) 314 315 (fontified t) 315 316 (fontified t) 316 317 (fontified t) 317 318 (fontified t) 318 319 (fontified t) 319 320 (fontified t) 320 321 (fontified t) 321 322 (fontified t) 322 323 (fontified t) 323 324 (fontified t) 324 325 (fontified t) 325 326 (fontified t) 326 327 (fontified t) 327 328 (fontified t) 328 329 (fontified t) 329 330 (fontified t) 330 331 (fontified t) 331 332 (fontified t) 332 333 (fontified t) 333 334 (fontified t) 334 335 (fontified t) 335 336 (fontified t) 336 337 (fontified t) 337 338 (fontified t) 338 339 (fontified t) 339 340 (fontified t) 340 341 (fontified t) 341 342 (fontified t) 342 343 (fontified t) 343 344 (fontified t) 344 345 (fontified t) 345 346 (fontified t) 346 347 (fontified t) 347 348 (fontified t) 348 349 (fontified t) 349 350 (fontified t) 350 351 (fontified t) 351 352 (fontified t) 352 353 (fontified t) 353 354 (fontified t) 354 355 (fontified t) 355 356 (fontified t) 356 357 (fontified t) 357 358 (fontified t) 358 359 (fontified t) 359 360 (fontified t) 360 361 (fontified t) 361 362 (fontified t) 362 363 (fontified t) 363 364 (fontified t) 364 365 (fontified t) 365 366 (fontified t) 366 367 (fontified t) 367 368 (fontified t) 368 369 (fontified t) 369 370 (fontified t) 370 371 (fontified t) 371 372 (fontified t) 372 373 (fontified t) 373 374 (fontified t) 374 375 (fontified t) 375 376 (fontified t) 376 377 (fontified t) 377 378 (fontified t) 378 379 (fontified t) 379 380 (fontified t) 380 381 (fontified t) 381 382 (fontified t) 382 383 (fontified t) 383 384 (fontified t) 384 385 (fontified t) 385 386 (fontified t) 386 387 (fontified t) 387 388 (fontified t) 388 389 (fontified t) 389 390 (fontified t) 390 391 (fontified t) 391 392 (fontified t) 392 393 (fontified t) 393 394 (fontified t) 394 395 (fontified t) 395 396 (fontified t) 396 397 (fontified t) 397 398 (fontified t) 398 399 (fontified t) 399 400 (fontified t) 400 401 (fontified t) 401 402 (fontified t) 402 403 (fontified t) 403 404 (fontified t) 404 405 (fontified t) 405 406 (fontified t) 406 407 (fontified t) 407 408 (fontified t) 408 409 (fontified t) 409 410 (fontified t) 410 411 (fontified t) 411 412 (fontified t) 412 413 (fontified t) 413 414 (fontified t) 414 415 (fontified t) 415 416 (fontified t) 416 417 (fontified t) 417 418 (fontified t) 418 419 (fontified t) 419 420 (fontified t) 420 421 (fontified t) 421 422 (fontified t) 422 423 (fontified t) 423 424 (fontified t) 424 425 (fontified t) 425 426 (fontified t) 426 427 (fontified t) 427 428 (fontified t) 428 429 (fontified t) 429 430 (fontified t) 430 431 (fontified t) 431 432 (fontified t) 432 433 (fontified t) 433 434 (fontified t) 434 435 (fontified t) 435 436 (fontified t) 436 437 (fontified t) 437 438 (fontified t) 438 439 (fontified t) 439 440 (fontified t) 440 441 (fontified t) 441 442 (fontified t) 442 443 (fontified t) 443 444 (fontified t) 444 445 (fontified t) 445 446 (fontified t) 446 447 (fontified t) 447 448 (fontified t) 448 449 (fontified t) 449 450 (fontified t) 450 451 (fontified t) 451 452 (fontified t) 452 453 (fontified t) 453 454 (fontified t) 454 455 (fontified t) 455 456 (fontified t) 456 457 (fontified t) 457 458 (fontified t) 458 459 (fontified t) 459 460 (fontified t) 460 461 (fontified t) 461 462 (fontified t) 462 463 (fontified t) 463 464 (fontified t) 464 465 (fontified t) 465 466 (fontified t) 466 467 (fontified t) 467 468 (fontified t) 468 469 (fontified t) 469 470 (fontified t) 470 471 (fontified t) 471 472 (fontified t) 472 473 (fontified t) 473 474 (fontified t) 474 475 (fontified t) 475 476 (fontified t) 476 477 (fontified t) 477 478 (fontified t) 478 479 (fontified t) 479 480 (fontified t) 480 481 (fontified t) 481 482 (fontified t) 482 483 (fontified t) 483 484 (fontified t) 484 485 (fontified t) 485 486 (fontified t) 486 487 (fontified t) 487 488 (fontified t) 488 489 (fontified t) 489 490 (fontified t) 490 491 (fontified t) 491 492 (fontified t) 492 493 (fontified t) 493 494 (fontified t)) #("Sent: Thursday, January 21, 2016 6:54 AM
" 0 40 (fontified t) 40 41 (fontified t)) "Wes Kopacka [mailto:kopacka@pharmaseq.com] 
Sent: Thursday, January 21, 2016 6:54 AM
To: John Sharpe <jsharpe@cytonome.com>
Cc: Chris Lofstrom <clofstrom@cytonome.com>; Etienne Dano <edano@cytonome.com>; Chao, Lu <clu@pharmaseq.com>; Wlodek Mandecki <mandecki@pharmaseq.com>; Tom, Coradetti <coradetti@pharmaseq.com>" #("最爱的提啊啦" 0 6 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("足球秀_" 0 4 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("宜家地下车库" 0 6 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("!你绝对想不到的!_视频在线观看_sc_135898696334hd" 0 8 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 8 16 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 16 19 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 19 34 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) #("1989年春晚" 0 7 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("京剧<" 0 3 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("_small" 0 6 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("锁麟囊>选段_<春秋亭>表演:" 0 4 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 4 8 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 8 12 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 12 15 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) #("1984年春晚_" 0 8 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("红人]" 0 2 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 2 3 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t)) #("_MV_What_Are_You_Looking_For_Christine_视频在线观看_13412489454hd.flv" 0 59 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 59 63 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-suffix)) #("_2014_ft_Carlinhos_Brown_small.mp4" 0 30 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 30 34 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-suffix)) #("降噪不插电音乐会_small.mp4" 0 14 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 14 18 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-suffix)) #("Things_That_Never_Change_" 0 7 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 7 12 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 12 18 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 18 25 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) #("_Xie_TianXiao_降噪不插电音乐会_small" 0 4 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 4 13 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 13 22 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 22 28 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) #("Till_the_Darkness_Come_Again" 0 4 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 4 8 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 8 17 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 17 22 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 22 28 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) #("medium" 0 6 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("_small" 0 6 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("_small" 0 6 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("赵志刚_颜佳" 0 6 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("small" 0 5 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("胡錦芳 錢振榮 龔隱雷" 0 4 (face diredp-file-name fontified t dired-filename t) 4 8 (dired-filename t fontified t face diredp-file-name) 8 11 (dired-filename t fontified t face diredp-file-name)) #("石小梅 胡錦芳 錢振榮 龔隱雷.mp4" 0 15 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 15 19 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-suffix)) #("_视频交友_视频聊天_在线K歌_135857429652hd_clear.flv" 0 36 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 36 40 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-suffix)) #("我秀_秀场_" 0 3 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 3 6 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) #(">_Butterfly_Lovers_Violin_Concerto_by_Akiko_Suwanai_medium.mp4" 0 58 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 58 62 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-suffix)) #(">_Butterfly_Lovers_Violin_Concerto_by_Akiko_Suwanai_medium.mp4" 0 58 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 58 62 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-suffix)) #("_medium" 0 7 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("_综艺视频_在线观看_视频下载_网视频_sc_134639329115hd.flv" 0 37 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 37 41 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-suffix)) #("_small" 0 6 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("西湖山水还依旧" 0 7 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("Chinese_Opera_Yueju" 0 7 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 7 13 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 13 19 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) #("好声音第二季" 0 6 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("中国" 0 2 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("]笑傻了!太疼了!比<泰囧>还囧啊!!!所谓二逼青年欢乐多!没有最衰, 只有更衰!哈哈哈哈_[人人网_分享] (video mp4).mp4" 0 1 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t font-lock-face "rainbow-delimiters-unmatched-face" rear-nonsticky t) 1 46 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 46 47 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 47 53 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 53 54 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 54 55 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 55 56 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 56 65 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 65 66 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 66 70 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-suffix)) #("年全球_" 0 4 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("Faye_WONG" 0 5 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 5 9 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) #("_medium" 0 7 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("超正美国女生翻唱中文歌" 0 11 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("medium" 0 6 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("姐膜拜了_small" 0 5 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 5 10 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) #("_small" 0 6 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("HD.small" 0 3 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 3 8 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) #("-cxBFqPkoLt4" 0 12 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("-4aDEJNOkCyA" 0 12 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("~/Downloads/coursera-dl/" 0 24 (fontified t)) #("程序设计实践" 0 6 (dired-filename t fontified t face diredp-dir-priv)) #("A_PKU算法基础" 0 2 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv) 2 5 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv) 5 9 (face diredp-dir-priv fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) #("A_北大程序设计实践_郭炜(V_Coursera)" 0 13 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv) 13 14 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t face diredp-dir-priv) 14 24 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv) 24 25 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t face diredp-dir-priv)) #("—" 0 1 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #(" | Coursera" 0 11 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("suanfa-jichu" 0 12 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv)) #("Runfor12" 0 8 (fontified t)) "suanfa-jichu" "https://github.com/coursera-dl/coursera-dl.git" #("DATA/Pharmaseq/" 0 15 (fontified t)) #("Org/org/Pharmaseq/" 0 4 (fontified t) 4 8 (fontified t) 8 18 (fontified t)) ";; -*- mode: emacs-lisp -*-
;; This file is loaded by Spacemacs at startup.
;; It must be stored in your home directory.

(defun dotspacemacs/layers ()
  \"Configuration Layers declaration.
You should not put any user code in this function besides modifying the variable
values.\"
  (setq-default
   ;; Base distribution to use. This is a layer contained in the directory
   ;; `+distribution'. For now available distributions are `spacemacs-base'
   ;; or `spacemacs'. (default 'spacemacs)
   dotspacemacs-distribution 'spacemacs
   ;; List of additional paths where to look for configuration layers.
   ;; Paths must have a trailing slash (i.e. `~/.mycontribs/')
   dotspacemacs-configuration-layer-path '()
   ;; List of configuration layers to load. If it is the symbol `all' instead
   ;; of a list then all discovered layers will be installed.
   dotspacemacs-configuration-layers
   '(;; ----------------------------------------------------------------
     ;; Example of useful layers you may want to use right away.
     ;; Uncomment some layer names and press <SPC f e R> (Vim style) or
     ;; <M-m f e R> (Emacs style) to install them.
     ;; ----------------------------------------------------------------
     auto-completion
     better-defaults
     clojure
     colors
     elixir
     emacs-lisp
     git
     go
     haskell
     html
     ipython-notebook
     jabber
     javascript
     lua
     markdown
     (mu4e :variables
           mu4e-installation-path \"/usr/local/Cellar/mu/HEAD/share/emacs/site-lisp/mu/mu4e\")
     ocaml
     org
     osx
     python
     racket
     rcirc
     restclient
     rust
     (scala :variables
            scala-enable-eldoc-mode t
            scala-auto-insert-asterisk-in-comments t)
     (shell :variables
            shell-pop-window-size 40
            shell-default-position 'bottom)
     shell-scripts
     sml
     sql
     syntax-checking
     version-control)
   ;; List of additional packages that will be installed without being
   ;; wrapped in a layer. If you need some configuration for these
   ;; packages then consider to create a layer, you can also put the
   ;; configuration in `dotspacemacs/config'.
   dotspacemacs-additional-packages '(beacon
                                      deft
                                      emms
                                      emms-mode-line-cycle
                                      go-direx
                                      go-errcheck
                                      go-playground
                                      helm-emms
                                      helm-pt
                                      hl-todo
                                      howdoi
                                      jdee
                                      julia-mode
                                      julia-shell
                                      w3m
                                      yaml-mode)
   ;; A list of packages and/or extensions that will not be install and loaded.
   dotspacemacs-excluded-packages '()
   ;; If non-nil spacemacs will delete any orphan packages, i.e. packages that
   ;; are declared in a layer which is not a member of
   ;; the list `dotspacemacs-configuration-layers'. (default t)
   dotspacemacs-delete-orphan-packages t))

(defun dotspacemacs/init ()
  \"Initialization function.
This function is called at the very startup of Spacemacs initialization
before layers configuration.
You should not put any user code in there besides modifying the variable
values.\"
  ;; This setq-default sexp is an exhaustive list of all the supported
  ;; spacemacs settings.
  (setq-default
   ;; One of `vim', `emacs' or `hybrid'. Evil is always enabled but if the
   ;; variable is `emacs' then the `holy-mode' is enabled at startup. `hybrid'
   ;; uses emacs key bindings for vim's insert mode, but otherwise leaves evil
   ;; unchanged. (default 'vim)
   dotspacemacs-editing-style 'emacs
   ;; If non nil output loading progress in `*Messages*' buffer. (default nil)
   dotspacemacs-verbose-loading nil
   ;; Specify the startup banner. Default value is `official', it displays
   ;; the official spacemacs logo. An integer value is the index of text
   ;; banner, `random' chooses a random text banner in `core/banners'
   ;; directory. A string value must be a path to an image format supported
   ;; by your Emacs build.
   ;; If the value is nil then no banner is displayed. (default 'official)
   dotspacemacs-startup-banner 'official
   ;; List of items to show in the startup buffer. If nil it is disabled.
   ;; Possible values are: `recents' `bookmarks' `projects'.
   ;; (default '(recents projects))
   dotspacemacs-startup-lists '(recents projects)
   ;; List of themes, the first of the list is loaded when spacemacs starts.
   ;; Press <SPC> T n to cycle to the next theme in the list (works great
   ;; with 2 themes variants, one dark and one light)
   dotspacemacs-themes '(zenburn
                         darktooth
                         spacemacs-dark
                         spacemacs-light
                         solarized-light
                         solarized-dark
                         leuven
                         monokai)
   ;; If non nil the cursor color matches the state color.
   dotspacemacs-colorize-cursor-according-to-state t
   ;; Default font. `powerline-scale' allows to quickly tweak the mode-line
   ;; size to make separators look not too crappy.
   dotspacemacs-default-font '(\"Source Code Pro\"
                               :size 10
                               :weight normal
                               :width normal
                               :powerline-scale 1.1)
   ;; The leader key
   dotspacemacs-leader-key \"SPC\"
   ;; The leader key accessible in `emacs state' and `insert state'
   ;; (default \"M-m\")
   dotspacemacs-emacs-leader-key \"M-m\"
   ;; Major mode leader key is a shortcut key which is the equivalent of
   ;; pressing `<leader> m`. Set it to `nil` to disable it. (default \",\")
   dotspacemacs-major-mode-leader-key \",\"
   ;; Major mode leader key accessible in `emacs state' and `insert state'.
   ;; (default \"C-M-m)
   dotspacemacs-major-mode-emacs-leader-key \"C-M-m\"
   ;; The command key used for Evil commands (ex-commands) and
   ;; Emacs commands (M-x).
   ;; By default the command key is `:' so ex-commands are executed like in Vim
   ;; with `:' and Emacs commands are executed with `<leader> :'.
   dotspacemacs-command-key \":\"
   ;; If non nil `Y' is remapped to `y$'. (default t)
   dotspacemacs-remap-Y-to-y$ t
   ;; Location where to auto-save files. Possible values are `original' to
   ;; auto-save the file in-place, `cache' to auto-save the file to another
   ;; file stored in the cache directory and `nil' to disable auto-saving.
   ;; (default 'cache)
   dotspacemacs-auto-save-file-location 'cache
   ;; If non nil then `ido' replaces `helm' for some commands. For now only
   ;; `find-files' (SPC f f), `find-spacemacs-file' (SPC f e s), and
   ;; `find-contrib-file' (SPC f e c) are replaced. (default nil)
   dotspacemacs-use-ido nil
   ;; If non nil, `helm' will try to miminimize the space it uses. (default nil)
   dotspacemacs-helm-resize nil
   ;; if non nil, the helm header is hidden when there is only one source.
   ;; (default nil)
   dotspacemacs-helm-no-header nil
   ;; define the position to display `helm', options are `bottom', `top',
   ;; `left', or `right'. (default 'bottom)
   dotspacemacs-helm-position 'bottom
   ;; If non nil the paste micro-state is enabled. When enabled pressing `p`
   ;; several times cycle between the kill ring content. (default nil)
   dotspacemacs-enable-paste-micro-state nil
   ;; Which-key delay in seconds. The which-key buffer is the popup listing
   ;; the commands bound to the current keystroke sequence. (default 0.4)
   dotspacemacs-which-key-delay 0.4
   ;; Which-key frame position. Possible values are `right', `bottom' and
   ;; `right-then-bottom'. right-then-bottom tries to display the frame to the
   ;; right; if there is insufficient space it displays it at the bottom.
   ;; (default 'bottom)
   dotspacemacs-which-key-position 'bottom
   ;; If non nil a progress bar is displayed when spacemacs is loading. This
   ;; may increase the boot time on some systems and emacs builds, set it to
   ;; nil to boost the loading time. (default t)
   dotspacemacs-loading-progress-bar t
   ;; If non nil the frame is fullscreen when Emacs starts up. (default nil)
   ;; (Emacs 24.4+ only)
   dotspacemacs-fullscreen-at-startup nil
   ;; If non nil `spacemacs/toggle-fullscreen' will not use native fullscreen.
   ;; Use to disable fullscreen animations in OSX. (default nil)
   dotspacemacs-fullscreen-use-non-native nil
   ;; If non nil the frame is maximized when Emacs starts up.
   ;; Takes effect only if `dotspacemacs-fullscreen-at-startup' is nil.
   ;; (default nil) (Emacs 24.4+ only)
   dotspacemacs-maximized-at-startup nil
   ;; A value from the range (0..100), in increasing opacity, which describes
   ;; the transparency level of a frame when it's active or selected.
   ;; Transparency can be toggled through `toggle-transparency'. (default 90)
   dotspacemacs-active-transparency 90
   ;; A value from the range (0..100), in increasing opacity, which describes
   ;; the transparency level of a frame when it's inactive or deselected.
   ;; Transparency can be toggled through `toggle-transparency'. (default 90)
   dotspacemacs-inactive-transparency 90
   ;; If non nil unicode symbols are displayed in the mode line. (default t)
   dotspacemacs-mode-line-unicode-symbols t
   ;; If non nil smooth scrolling (native-scrolling) is enabled. Smooth
   ;; scrolling overrides the default behavior of Emacs which recenters the
   ;; point when it reaches the top or bottom of the screen. (default t)
   dotspacemacs-smooth-scrolling t
   ;; If non-nil smartparens-strict-mode will be enabled in programming modes.
   ;; (default nil)
   dotspacemacs-smartparens-strict-mode nil
   ;; Select a scope to highlight delimiters. Possible values are `any',
   ;; `current', `all' or `nil'. Default is `all' (highlight any scope and
   ;; emphasis the current one). (default 'all)
   dotspacemacs-highlight-delimiters 'all
   ;; If non nil advises quit functions to keep server open when quitting.
   ;; (default nil)
   dotspacemacs-persistent-server nil
   ;; List of search tool executable names. Spacemacs uses the first installed
   ;; tool of the list. Supported tools are `ag', `pt', `ack' and `grep'.
   ;; (default '(\"ag\" \"pt\" \"ack\" \"grep\"))
   dotspacemacs-search-tools '(\"ag\" \"pt\" \"ack\" \"grep\")
   ;; The default package repository used if no explicit repository has been
   ;; specified with an installed package.
   ;; Not used for now. (default nil)
   dotspacemacs-default-package-repository nil))

(defun define-keys (mode-map key-fn-pairs)
  (mapc (lambda (key-fn)
          (let ((key (kbd (car key-fn)))
                (function (car (cdr key-fn))))
            (define-key mode-map key function)))
        key-fn-pairs))

(defun apply-fn-to-modes (fn modes)
  (mapc (lambda (mode)
          (add-hook (intern (format \"%s-hook\" (symbol-name mode)))
                    fn))
        modes))

(defun add-hooks (mode-hook functions)
  (mapc (lambda (function)
          (add-hook mode-hook function))
        functions))

(defun remove-hooks (mode-hook functions)
  (mapc (lambda (function)
          (remove-hook mode-hook function))
        functions))

(defun vi-style-c-e (n)
  \"Emulate vi's CTRL-E (show one more line at bottom of window).\"
  (interactive \"p\")
  (scroll-up n))

(defun vi-style-c-y (n)
  \"Emulate vi's CTRL-Y (show one more line at top of window.)\"
  (interactive \"p\")
  (scroll-down n))

(defun go-get-project-root (go-path-src go-project-root)
  \"Return the name of the Go project. e.g. github.com/gorilla/context\"
  (if (string-prefix-p go-path-src go-project-root)
      (let* ((no-trailing-slash (s-chop-suffix \"/\" go-project-root))
             (go-project-root-short (s-chop-prefix go-path-src no-trailing-slash)))
        go-project-root-short)))

(defun go-set-oracle-scope ()
  \"Update Go Oracle scope if the current project is a Go project.\"
  (interactive)
  (let* ((go-path-src (concat (getenv \"GOPATH\") \"/src/\"))
         (go-project-root (go-get-project-root go-path-src (projectile-project-root))))
    (if go-project-root
        (progn
          (setq go-oracle-scope go-project-root)
          (message (concat \"Go Oracle scope set to \" go-project-root))))))

(defun go-errcheck-project ()
  \"Run errcheck recursively from the current project directory.\"
  (interactive)
  (let* ((go-path-src (concat (getenv \"GOPATH\") \"/src/\"))
         (go-project-root (go-get-project-root go-path-src (projectile-project-root))))
    (go-errcheck-pkg (concat go-project-root \"/...\") nil nil nil)))

(defun vc-annotate-current-buffer-head ()
  \"Run vc-annotate on the current buffer.\"
  (vc-annotate (buffer-file-name) \"HEAD\"))

(defun focus-then-maximise (buf-name)
  \"Focus the buffer specified then maximise.\"
  (interactive)
  (progn
    (switch-to-buffer buf-name)
    (delete-other-windows)))

(defun unbind-rebind-key (mode-map key new-func)
  \"Unbinding and rebind the key with the given function.\"
  (define-key mode-map key nil)
  (define-key mode-map key new-func))

(defun switch-to-previous-buffer ()
  \"Switch to the previous buffer.\"
  (interactive)
  (switch-to-buffer (other-buffer (current-buffer) 1)))

(defun dotspacemacs/user-init ()
  \"Initialization function for user code.
It is called immediately after `dotspacemacs/init'.  You are free to put any
user code.\"
  )

(defun dotspacemacs/user-config ()
  \"Configuration function for user code.
 This function is called at the very end of Spacemacs initialization after
layers configuration. You are free to put any user code.\"
  ;; On OS X, remap left Command to Meta
  (setq mac-option-modifier 'meta
        mac-command-modifier 'meta
        mac-right-command-modifier 'super
        mac-function-modifier 'hyper)
  ;; Fullscreen
  (set-frame-parameter nil 'fullscreen 'fullboth)
  ;; Overwrite highlighted
  (delete-selection-mode t)
  ;; Remove trailing whitespace on save
  (add-to-list 'write-file-functions 'delete-trailing-whitespace)
  ;; Web browser
  (setq browse-url-browser-function 'browse-url-generic
        engine/browser-function 'browse-url-generic
        browse-url-generic-program \"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome\")
  ;; Powerline: current time
  (setq display-time-string-forms
        '((substring year -4)
          \"-\"
          (format \"%02d\" (string-to-number month))
          \"-\"
          (format \"%02d\" (string-to-number day))
          \" \"
          24-hours
          \":\"
          minutes))
  (display-time-mode t)
  ;; Powerline: battery life
  (fancy-battery-mode t)
  ;; Powerline: separator style
  (setq powerline-default-separator 'arrow)

  ;; Package settings: anzu
  (use-package anzu
    :defer t
    :config
    (global-anzu-mode t))
  ;; Package settings: deft
  (use-package deft
    :defer t
    :init
    (setq deft-recursive t
          deft-use-filename-as-title t)
    :config
    (progn
      (unbind-rebind-key deft-mode-map (kbd \"f\") 'deft-filter-increment)
      (define-keys deft-mode-map
        '((\"C-g\" ibuffer-quit)
          (\"C-k\" deft-filter-clear)
          (\"M-q\" ibuffer-quit)))))
  (advice-add 'deft :after 'deft-filter-clear)
  (advice-add 'deft :after 'deft-refresh)
  ;; Package settings: emms
  (use-package emms
    :defer t
    :config
    (progn
      (require 'emms-setup)
      (require 'emms-mode-line-cycle)
      (require 'emms-mode-line-icon)
      (emms-all)
      (emms-default-players)
      (emms-mode-line-enable)
      (emms-playing-time-disable-display)
      (emms-mode-line-cycle 1)))
  ;; Package settings: eww
  (use-package eww
    :defer t
    :config
    (define-keys eww-mode-map
      '((\"M-n\" vi-style-c-e)
        (\"M-p\" vi-style-c-y))))
  ;; Package settings: go-mode
  (use-package go-mode
    :defer t
    :init
    (setq gofmt-command \"goimports\")
    :config
    (progn
      (require 'go-errcheck)
      (push '(\"^\\*go-direx:\"
              :regexp t
              :position right
              :width 0.5
              :dedicated t
              :stick t)
            popwin:special-display-config)
      (unbind-rebind-key go-mode-map (kbd \"C-c C-j\") 'go-direx-switch-to-buffer)
      (define-keys go-mode-map
        '((\"M-.\" godef-jump)
          (\"M-,\" pop-tag-mark)
          (\"C-c C-e\" go-errcheck-project)
          (\"C-c C-p\" go-playground)))
      (evil-leader/set-key-for-mode 'go-mode
        \"mjp\" 'go-direx-pop-to-buffer
        \"mjs\" 'go-direx-switch-to-buffer
        \"mE\" 'go-errcheck-project)))
  ;; Package settings: jdee
  (use-package jdee
    :defer t
    :init
    (setq jdee-server-dir \"~/src/jdee-server/target\")
    :load-path \"~/src/jdee-server/target\"
    :config
    (progn
      (define-keys jdee-mode-map
        '((\"M-.\" jdee-open-class-at-point)
          (\"M-,\" pop-tag-mark)))))
  ;; Package settings: js2-mode
  (use-package js2-mode
    :defer t
    :init
    (setq-default js2-basic-offset 2))
  ;; Package settings: julia-mode
  (use-package julia-mode
    :defer t
    :config
    (progn
      (require 'julia-shell)
      (define-keys julia-mode-map
        '((\"C-c C-z\" run-julia)
          (\"C-c C-c\" julia-shell-run-region-or-line)
          (\"C-c C-s\" julia-shell-save-and-go)))))
  ;; Package settings: mu4e
  (use-package mu4e
    :defer t
    :init
    (progn
      (setq
       ;; Path to Maildir directory
       mu4e-maildir \"~/Maildir\"

       mu4e-sent-folder   \"/[Gmail].Sent Mail\"
       mu4e-drafts-folder \"/[Gmail].Drafts\"
       mu4e-trash-folder \"/[Gmail].Trash\"

       ;; Maildirs you use frequently; access them with 'j' (jump)
       mu4e-maildir-shortcuts
       '((\"/[Gmail].All Mail\"  . ?i)
         (\"/[Gmail].Sent Mail\" . ?s)
         (\"/[Gmail].Drafts\"    . ?d)
         (\"/[Gmail].Trash\"     . ?t))

       ;; List of email addresses
       mu4e-user-mail-address-list '(\"microamplifier@gmail.com\")

       mu4e-headers-fields
       '((:date    . 25) ;; Alternatively, use :human-date
         (:flags   .  6)
         (:from    . 22)
         (:subject . nil))

       ;; Program to fetch mail (offlineimap)
       mu4e-get-mail-command \"offlineimap\"

       ;; Update every 5 minutes
       mu4e-update-interval (* 60 5)

       mu4e-reply-to-address \"microamplifier@gmail.com\"
       user-mail-address     \"microamplifier@gmail.com\"
       user-full-name        \"SH N\"

       ;; SMTP settings
       message-send-mail-function   'smtpmail-send-it
       smtpmail-default-smtp-server \"smtp.gmail.com\"
       smtpmail-smtp-server         \"smtp.gmail.com\"
       smtpmail-local-domain        \"gmail.com\"

       ;; Don't keep message buffers around
       message-kill-buffer-on-exit t

       ;; View content using w3m
       mu4e-html2text-command \"w3m -dump -T text/html\")))
  ;; Package settings: neotree
  (use-package neotree
    :defer t
    :init
    (setq neo-show-hidden-files nil
          neo-persist-show t)
    :config
    (progn
      (define-keys neotree-mode-map
        '((\"o\" neotree-enter)))
      (global-set-key [f8] 'neotree-find)))
  ;; Package settings: projectile
  (use-package projectile
    :defer t
    :init
    (setq projectile-switch-project-action 'magit-show-refs-head))
  ;; Package settings: python-mode
  (use-package python
    :defer t
    :init
    (setq fci-rule-column 99)
    :config
    (progn
      (evil-leader/set-key-for-mode 'python-mode
        \"mf\" 'py-yapf-buffer)
      (unbind-rebind-key python-mode-map (kbd \"C-c C-j\") 'helm-semantic-or-imenu)))
  ;; Package settings: smartparens
  (use-package smartparens
    :defer t
    :config
    (apply-fn-to-modes 'smartparens-strict-mode
                       sp--lisp-modes)
    (define-keys sp-keymap
      '((\"C-M-a\" sp-backward-down-sexp)
        (\"C-M-e\" sp-up-sexp)
        (\"C-M-n\" sp-next-sexp)
        (\"C-M-p\" sp-previous-sexp)
        (\"C-]\" sp-select-next-thing-exchange)
        (\"C-M-]\" sp-select-next-thing))))
  ;; Package settings: yaml-mode
  (use-package yaml-mode
    :defer t
    :config
    (add-to-list 'auto-mode-alist '(\"\\\\.yml$\" . yaml-mode)))

  ;; Hooks added: programming modes
  (add-hooks 'prog-mode-hook
             '(beacon-mode
               eldoc-mode
               hl-todo-mode
               linum-mode
               rainbow-delimiters-mode))
  ;; Hooks added: Python mode
  (add-hooks 'python-mode-hook
             '(fci-mode))
  ;; Hooks added: mu4e with gpg
  (add-hooks 'mu4e-compose-mode-hook
             '(epa-mail-mode))
  (add-hooks 'mu4e-view-mode-hook
             '(epa-mail-mode))
  ;; Hooks removed: Go mode
  (remove-hooks 'go-mode-hook
                '(flycheck-mode))
  ;; Hooks removed: Org mode
  (remove-hooks 'org-mode
                '(smartparens-mode))

  ;; Occupy entire frame
  (advice-add 'gh-md-render-buffer :after (apply-partially 'focus-then-maximise \"*gh-md*\"))
  (advice-add 'helm-projectile-switch-project :after 'go-set-oracle-scope)
  (advice-add 'magit-log-all :after 'delete-other-windows)
  (advice-add 'magit-log-head :after 'delete-other-windows)
  (advice-add 'magit-show-refs-head :after 'delete-other-windows)
  (advice-add 'magit-status :after 'delete-other-windows)
  (advice-add 'vc-annotate-current-buffer-head :after 'delete-other-windows)

  ;; Show under which function the point currently is
  (which-function-mode)

  ;; DocView for PDF files
  (add-to-list 'auto-mode-alist '(\"\\\\.pdf\\\\'\" . doc-view-mode))

  ;; Custom key bindings: global
  (define-keys global-map
    '((\"C-c C-j\" helm-semantic-or-imenu)
      (\"C-x '\" switch-to-previous-buffer)
      (\"C-x -\" split-window-below-and-focus)
      (\"C-x \\\\\" split-window-right-and-focus)
      (\"C-x l\" delete-other-windows)
      (\"C-x n\" other-window)
      (\"C-x p\" previous-multiframe-window)
      (\"C-x q\" delete-window)
      (\"C-x |\" split-window-right-and-focus)
      (\"M-SPC\" shell-pop-eshell)
      (\"M-[\" beginning-of-defun)
      (\"M-]\" end-of-defun)
      (\"M-n\" vi-style-c-e)
      (\"M-p\" vi-style-c-y)
      (\"RET\" newline-and-indent)))
  ;; Custom key bindings: SPC shortcuts
  (spacemacs/set-leader-keys
    \"M-m\" 'avy-goto-word-or-subword-1
    \"ameh\" 'helm-emms
    \"amep\" 'emms-start
    \"ames\" 'emms-stop
    \"an\" 'deft
    \"ga\" 'vc-annotate-current-buffer-head
    \"gM\" 'magit-show-refs-head
    \"gl\" 'magit-log-head
    \"ho\" 'helm-occur
    \"pP\" 'projectile-test-project
    \"pss\" 'helm-projectile-ag
    \"psp\" 'helm-projectile-pt
    \"pu\" 'projectile-run-project
    \"sq\" 'howdoi-query
    \",cm\" 'mc/mark-all-like-this))

;; Do not write anything past this comment. This is where Emacs will
;; auto-generate custom variable definitions.
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(auth-source-save-behavior nil)
 '(deft-auto-save-interval 0.0)
 '(deft-directory \"~/Dropbox/.deft\")
 '(emms-mode-line-cycle-max-width 13)
 '(emms-mode-line-cycle-use-icon-p t)
 '(magit-log-arguments (quote (\"-n256\" \"--graph\" \"--decorate\" \"--color\")))
 '(neo-persist-show t t)
 '(neo-show-hidden-files nil t)
 '(neo-theme (quote ascii))
 '(paradox-github-token t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:foreground \"#DCDCCC\" :background \"#3F3F3F\"))))
 '(company-tooltip-common ((t (:inherit company-tooltip :weight bold :underline nil))))
 '(company-tooltip-common-selection ((t (:inherit company-tooltip-selection :weight bold :underline nil)))))
" #("tar -xvzf spacemacs-0." 0 4 (fontified t) 4 9 (fontified t face font-lock-comment-face) 9 10 (fontified t) 10 22 (fontified t)) #("tar -xzvf spacemacs" 0 4 (fontified t) 4 9 (fontified t face font-lock-comment-face) 9 10 (fontified t) 10 19 (fontified t)) #("plot(x, " 0 4 (fontified t) 4 5 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 5 8 (fontified t)) "0.4458
0.6702
0.8164
0.8792
0.9233
0.9546
0.9675
0.98" "0.4363
0.6648
0.7759
0.8584
0.8906
0.9187
0.9397
0.9548" "2500
5000
7500
10000
12500
15000
17500
20000" #("    0.1114
    0.3351
    0.6123
    0.8792
    1.1541
    1.4319
    1.6931
    1.9600" 0 87 (inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky (field inhibit-line-move-field-capture) fontified t)) #("0.4458
0.6702
0.8164
0.8792
0.9233
0.9546
0.9675
0.9800" 0 6 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 6 7 (fontified t) 7 13 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 13 14 (fontified t) 14 20 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 20 21 (fontified t) 21 27 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 27 28 (fontified t) 28 34 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 34 35 (fontified t) 35 41 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 41 42 (fontified t) 42 48 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 48 49 (fontified t) 49 55 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture))) #("0.2908
0.4753
0.5994
0.6899
0.7454
0.7913
0.8196
0.8389" 0 6 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 6 7 (fontified t) 7 13 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 13 14 (fontified t) 14 20 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 20 21 (fontified t) 21 27 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 27 28 (fontified t) 28 34 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 34 35 (fontified t) 35 41 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 41 42 (fontified t) 42 48 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 48 49 (fontified t) 49 55 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture))) #("N_chips .* Hits
" 0 8 (fontified t) 8 10 (fontified t face font-lock-type-face) 10 15 (fontified t) 15 16 (fontified t)) #("    0.3650
    0.5610
    0.6748
    0.7559
    0.8096
    0.8418
    0.8652
    0.8770
    0.9011
    0.9060" 0 11 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 11 22 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 22 33 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 33 44 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 44 55 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 55 66 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 66 77 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 77 88 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 88 99 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 99 109 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture))) #("    0.3650
    0.5610
    0.6748
    0.7559
    0.8096
    0.8418
    0.8652
    0.8770
    0.9011
    0.9060" 0 11 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 11 22 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 22 33 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 33 44 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 44 55 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 55 66 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 66 77 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 77 88 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 88 99 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 99 109 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture))) #("    0.5610
    0.6748
    0.7559
    0.8096
    0.8418
    0.8652
    0.8770
    0.9011
    0.9060" 0 11 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 11 22 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 22 33 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 33 44 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 44 55 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 55 66 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 66 77 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 77 88 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 88 98 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture))) #("   0.1091
    0.3324
    0.5819
    0.8584
    1.1133
    1.3780
    1.6445
    1.9096" 0 10 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 10 21 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 21 32 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 32 43 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 43 54 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 54 65 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 65 76 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 76 86 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture))) #("   0.1091
    0.3324
    0.5819
    0.8584
    1.1133
    1.3780
    1.6445
    1.9096" 0 2 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 2 3 (fontified t front-sticky (inhibit-line-move-field-capture) rear-nonsticky (inhibit-line-move-field-capture) inhibit-line-move-field-capture t) 3 10 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 10 21 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 21 86 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture))) #("   0.4363
    0.6648
    0.7759
    0.8584
    0.8906
    0.9187
    0.9397
    0.9548" 0 10 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture)) 10 86 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture))) #("   0.1091
    0.3324
    0.5819
    0.8584
    1.1133
    1.3780
    1.6445
    1.9096" 0 86 (inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky (field inhibit-line-move-field-capture) fontified t)) #("Hits(:, 1) .* N_chips'" 0 4 (fontified t) 4 5 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 5 6 (face font-lock-type-face fontified t) 6 9 (fontified t) 9 10 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 10 11 (fontified t) 11 13 (face font-lock-type-face fontified t) 13 22 (fontified t)) #("    0.4363
    0.6648
    0.7759
    0.8584
    0.8906
    0.9187
    0.9397
    0.9548
" 0 88 (inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky (field inhibit-line-move-field-capture) fontified t)) #("   0.1091
    0.3324
    0.5819
    0.8584
    1.1133
    1.3780
    1.6445
    1.9096" 0 86 (inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky (field inhibit-line-move-field-capture) fontified t)) #("
" 0 1 (fontified t)) #("ylabel('\\% of coverage');" 0 6 (fontified t) 6 7 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 7 23 (face font-lock-string-face fontified t) 23 25 (fontified t)) #("ylabel('\\% of coverage');" 0 6 (fontified t help-echo "mouse-2: insert after prompt as new input" mouse-face highlight font-lock-face comint-highlight-input front-sticky t) 6 7 (fontified t help-echo "mouse-2: insert after prompt as new input" mouse-face highlight front-sticky t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face") 7 23 (fontified t help-echo "mouse-2: insert after prompt as new input" mouse-face highlight font-lock-face comint-highlight-input front-sticky t) 23 25 (fontified t help-echo "mouse-2: insert after prompt as new input" mouse-face highlight font-lock-face comint-highlight-input front-sticky t)) #("xlabel('# of chips');" 0 6 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight font-lock-face comint-highlight-input front-sticky t fontified t) 6 7 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight front-sticky t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 7 19 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight font-lock-face comint-highlight-input front-sticky t fontified t) 19 20 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight front-sticky t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 20 21 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight font-lock-face comint-highlight-input front-sticky t fontified t)) #("plot(N, H, 'r', 'linewidth', 2)" 0 4 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight font-lock-face comint-highlight-input front-sticky t fontified t) 4 5 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight front-sticky t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 5 11 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight font-lock-face comint-highlight-input front-sticky t fontified t) 11 14 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight font-lock-face comint-highlight-input front-sticky t fontified t) 14 16 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight font-lock-face comint-highlight-input front-sticky t fontified t) 16 17 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight font-lock-face comint-highlight-input front-sticky t fontified t) 17 27 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight font-lock-face comint-highlight-input front-sticky t fontified t) 27 30 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight font-lock-face comint-highlight-input front-sticky t fontified t) 30 31 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight front-sticky t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t)) #("pcent(" 0 5 (fontified t) 5 6 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face")) #("
" 0 1 (fontified t)) #("[20000, 12000]" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 13 (fontified t) 13 14 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t)) #("20000" 0 5 (fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) #("N = 20000;
" 0 10 (fontified t) 10 11 (fontified t)) #("plot(N, H, 'r', 'linewidth' = 2)" 0 4 (fontified t) 4 5 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 5 11 (fontified t) 11 14 (face font-lock-string-face fontified t) 14 16 (fontified t) 16 27 (face font-lock-string-face fontified t) 27 31 (fontified t) 31 32 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t)) #("ans =

   1.0e+04 *

    0.0730
    0.2244
    0.4049
    0.6047
    0.8096
    1.0102
    1.2113
    1.4031
    1.6220
    1.8120

>> H

H =

    0.3650
    0.5610
    0.6748
    0.7559
    0.8096
    0.8418
    0.8652
    0.8770
    0.9011
    0.9060" 0 3 (inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky (field inhibit-line-move-field-capture) face font-lock-constant-face fontified t) 3 14 (inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky (field inhibit-line-move-field-capture) fontified t) 14 15 (inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky (field inhibit-line-move-field-capture) face font-lock-type-face fontified t) 15 18 (inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky (field inhibit-line-move-field-capture) fontified t) 18 19 (inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky (field inhibit-line-move-field-capture) face font-lock-type-face fontified t) 19 132 (inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky (field inhibit-line-move-field-capture) fontified t) 132 133 (font-lock-face comint-highlight-prompt inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky (field inhibit-line-move-field-capture) face font-lock-type-face fontified t) 133 134 (font-lock-face comint-highlight-prompt inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky (field inhibit-line-move-field-capture) face font-lock-type-face fontified t) 134 135 (font-lock-face comint-highlight-prompt inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky (field inhibit-line-move-field-capture) fontified t) 135 136 (help-echo "mouse-2: insert after prompt as new input" mouse-face highlight font-lock-face comint-highlight-input front-sticky t fontified t) 136 137 (inhibit-line-move-field-capture t field boundary rear-nonsticky t fontified t) 137 252 (inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky (field inhibit-line-move-field-capture) fontified t)) #("Hits .* " 0 5 (fontified t) 5 7 (face font-lock-type-face fontified t) 7 8 (fontified t)) #("N_chips = 1:" 0 11 (fontified t) 11 12 (face font-lock-type-face fontified t)) #("n_run = 20;
" 0 11 (fontified t) 11 12 (fontified t)) "" #("[a, b] = pstat" 0 1 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 1 5 (fontified t) 5 6 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 6 14 (fontified t)) #("5000" 0 4 (fontified t)) #("12000" 0 5 (fontified t)) #("Subscript indices must either be real positive integers or logicals" 0 67 (fontified t front-sticky (field inhibit-line-move-field-capture) rear-nonsticky t field output inhibit-line-move-field-capture t)) #("
" 0 1 (fontified t)) "" #("z = floor(v);" 0 9 (fontified t) 9 10 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 10 11 (fontified t) 11 12 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 12 13 (fontified t)) #("floor" 0 5 (fontified t)) #("return p" 0 6 (fontified t face font-lock-keyword-face) 6 8 (fontified t)) #("size(unique(V))" 0 4 (fontified t) 4 5 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 5 11 (fontified t) 11 12 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12 13 (fontified t) 13 14 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 14 15 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t)) #("uniq = size(unique(sample))" 0 11 (fontified t) 11 12 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 12 18 (fontified t) 18 19 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 19 25 (fontified t) 25 26 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 26 27 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t)) #("v = rand(1) * n;" 0 4 (fontified t) 4 8 (fontified t) 8 9 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 9 10 (fontified t) 10 11 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 11 12 (fontified t) 12 13 (fontified t face font-lock-type-face) 13 16 (fontified t)) #("4096" 0 4 (fontified t)) #("unidrnd(4096, 1, n)" 0 7 (fontified t) 7 8 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 8 18 (fontified t) 18 19 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t)) #("n = 12000;" 0 10 (fontified t)) #("type = 4096;" 0 12 (fontified t)) #("zeros(1, n)" 0 5 (fontified t) 5 6 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 6 10 (fontified t) 10 11 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t)) #("history" 0 7 (fontified t)) #("for i = 1:n" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 5 (fontified t face (font-lock-variable-name-face font-lock-variable-name-face)) 5 7 (fontified t) 7 8 (fontified t) 8 11 (fontified t face (font-lock-constant-face font-lock-constant-face))) #("unidrnd(type, 1, " 0 7 (fontified t) 7 8 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 8 17 (fontified t)) #("S = unidrnd" 0 11 (fontified t)) #("rand(n, 4096)" 0 4 (fontified t) 4 5 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 5 12 (fontified t) 12 13 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t)) #("Dave instructions" 0 17 (fontified t face org-level-2)) #("** Dave instructions
*** Setup of new Optiplex 9010
1) Install Microsoft .NET Framewrk 4.5.2
2) Install chocolatey by following the directions at:	http://chocolatey.org/
3) Opend a command prompt as administrator and run: C:\\> choco install git
4) Creat a NEW Enviornment Variable:
   Variable name:	HOME
   Variable value:	C:\\users\\your_user_name
5) Opend a command prompt as administrator and run: C:\\> choco install emacs
6) Open a command prompt as administrator and run the commands:
   net use \\\\share2\\share
   choco install -source \\\\share2\\share\\nuget wandconsole
7) from \\\\share2\\a_David\\10-ArrayReader\\emacs_CLR_setup
   copy the .emacs.d folder into your local folder -->>  C:\\Users\\user_name\\
8) In \"c:\\programdata\\chocolatey\\bin\", create the file \"repl.bat\" and add these 2 lines-
   cd C:\\Users\\your_user_name\\Documents\\Projects\\Wand-LATEST\\Apps
    wandconsole  --wc --clj

=================================================================================================================
upgrading a WandConsole nuget.

choco uninstall WandConsole	note, may need to use force --> c:\\Windows\\system32> choco uninstall WandConsole --force
choco install WandConsole -source \\\\share2\\share\\nuget

Verify installed choco packages:

C:\\Windows\\system32>choco list -lo
Chocolatey v0.9.9.6
Emacs 24.4.0.20141122
git 1.9.5.20150320
git.install 1.9.5.20150320
WandConsole 2015.7.7.1221
4 packages installed.

other useful commands::
choco upgrade chocolatey
" 0 1 (face org-hide fontified t) 1 3 (face org-level-2 fontified t) 3 20 (face org-level-2 fontified t) 20 21 (fontified t) 21 23 (fontified t face org-hide) 23 25 (fontified t face org-level-3) 25 51 (fontified t face org-level-3) 51 52 (fontified t) 52 53 (fontified t) 53 54 (rear-nonsticky t font-lock-face "rainbow-delimiters-unmatched-face" fontified t) 54 55 (fontified t) 55 93 (fontified t) 93 94 (fontified t) 94 95 (rear-nonsticky t font-lock-face "rainbow-delimiters-unmatched-face" fontified t) 95 96 (fontified t) 96 147 (fontified t) 147 168 (htmlize-link (:uri "http://chocolatey.org/") fontified t org-no-flyspell t mouse-face highlight face org-link keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 168 169 (htmlize-link (:uri "http://chocolatey.org/") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t org-no-flyspell t mouse-face highlight face org-link keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 169 170 (fontified t) 170 171 (fontified t) 171 172 (rear-nonsticky t font-lock-face "rainbow-delimiters-unmatched-face" fontified t) 172 173 (fontified t) 173 245 (fontified t) 245 246 (fontified t) 246 247 (rear-nonsticky t font-lock-face "rainbow-delimiters-unmatched-face" fontified t) 247 248 (fontified t) 248 282 (fontified t) 282 285 (fontified t) 285 305 (fontified t) 305 308 (fontified t) 308 348 (fontified t) 348 349 (fontified t) 349 350 (rear-nonsticky t font-lock-face "rainbow-delimiters-unmatched-face" fontified t) 350 351 (fontified t) 351 425 (fontified t) 425 426 (fontified t) 426 427 (rear-nonsticky t font-lock-face "rainbow-delimiters-unmatched-face" fontified t) 427 428 (fontified t) 428 489 (fontified t) 489 492 (fontified t) 492 515 (fontified t) 515 518 (fontified t) 518 573 (fontified t) 573 574 (fontified t) 574 575 (rear-nonsticky t font-lock-face "rainbow-delimiters-unmatched-face" fontified t) 575 576 (fontified t) 576 629 (fontified t) 629 632 (fontified t) 632 706 (fontified t) 706 707 (fontified t) 707 708 (rear-nonsticky t font-lock-face "rainbow-delimiters-unmatched-face" fontified t) 708 709 (fontified t) 709 795 (fontified t) 795 796 (fontified t) 796 861 (fontified t) 861 865 (fontified t) 865 889 (fontified t) 889 890 (fontified t) 890 1004 (fontified t) 1004 1035 (fontified t) 1035 1036 (fontified t) 1036 1153 (fontified t) 1153 1208 (fontified t) 1208 1242 (fontified t) 1242 1243 (fontified t) 1243 1278 (fontified t) 1278 1298 (fontified t) 1298 1366 (fontified t) 1366 1392 (fontified t) 1392 1439 (fontified t) 1439 1462 (fontified t) 1462 1463 (rear-nonsticky t fontified t) 1463 1464 (fontified t)) #("Work" 0 4 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("  
" 0 3 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("


" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("Setup of new Optiplex 9010 ::

1)	Install Microsoft .NET Framewrk 4.5.2

2)	Install chocolatey by following the directions at:	http://chocolatey.org/

3)	Opend a command prompt as administrator and run: C:\\> choco install git

4)	Creat a NEW Enviornment Variable:
	Variable name:	HOME
	Variable value:	C:\\users\\your_user_name

5)	Opend a command prompt as administrator and run: C:\\> choco install emacs

6)	Open a command prompt as administrator and run the commands:
	net use \\\\share2\\share
	choco install -source \\\\share2\\share\\nuget wandconsole

	
7)	from \\\\share2\\a_David\\10-ArrayReader\\emacs_CLR_setup
	copy the .emacs.d folder into your local folder -->>  C:\\Users\\user_name\\


8)	In \"c:\\programdata\\chocolatey\\bin\", create the file \"repl.bat\" and add these 2 lines-

	cd C:\\Users\\your_user_name\\Documents\\Projects\\Wand-LATEST\\Apps
	wandconsole  --wc --clj


=================================================================================================================



upgrading a WandConsole nuget.

choco uninstall WandConsole	note, may need to use force --> c:\\Windows\\system32> choco uninstall WandConsole --force
choco install WandConsole -source \\\\share2\\share\\nuget

Verify installed choco packages:


C:\\Windows\\system32>choco list -lo
Chocolatey v0.9.9.6
Emacs 24.4.0.20141122
git 1.9.5.20150320
git.install 1.9.5.20150320
WandConsole 2015.7.7.1221
4 packages installed.

other useful commands::
choco upgrade chocolatey" 0 32 (fontified t) 32 33 (fontified t font-lock-face "rainbow-delimiters-unmatched-face" rear-nonsticky t) 33 74 (fontified t) 74 75 (fontified t font-lock-face "rainbow-delimiters-unmatched-face" rear-nonsticky t) 75 127 (fontified t) 127 148 (fontified t org-no-flyspell t mouse-face highlight face org-link htmlize-link (:uri "http://chocolatey.org/") keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 148 149 (fontified t org-no-flyspell t mouse-face highlight face org-link htmlize-link (:uri "http://chocolatey.org/") keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 149 152 (fontified t) 152 153 (fontified t font-lock-face "rainbow-delimiters-unmatched-face" rear-nonsticky t) 153 228 (fontified t) 228 229 (fontified t font-lock-face "rainbow-delimiters-unmatched-face" rear-nonsticky t) 229 328 (fontified t) 328 329 (fontified t font-lock-face "rainbow-delimiters-unmatched-face" rear-nonsticky t) 329 406 (fontified t) 406 407 (fontified t font-lock-face "rainbow-delimiters-unmatched-face" rear-nonsticky t) 407 549 (fontified t) 549 553 (fontified t) 553 554 (fontified t font-lock-face "rainbow-delimiters-unmatched-face" rear-nonsticky t) 554 686 (fontified t) 686 687 (fontified t font-lock-face "rainbow-delimiters-unmatched-face" rear-nonsticky t) 687 1132 (fontified t) 1132 1443 (fontified t)) #("projects" 0 8 (fontified t)) #("tar -xxvzf " 0 4 (fontified t) 4 10 (fontified t face font-lock-comment-face) 10 11 (fontified t)) "https://github.com/syl20bnr/spacemacs.git" #("vagrant up af" 0 13 (fontified t)) #("
" 0 1 (fontified t)) #("不如嫁给我吧" 0 6 (face org-level-3 fontified t)) #("我的人生除了酷，到底还剩下什么？！还剩下美丽的希望。我是早上八九点钟的太阳" 0 37 (fontified t)) #("*** DONE Baby formular                                                                :#B:
    CLOSED: [2016-01-13 Wed 23:25]
    - State \"DONE\"       from \"ACTIVE\"     [2016-01-13 Wed 23:25]
[2016-01-09 Sat 11:29]

给末末买奶粉

小姨, 查好了. 我准备去个这边的Costco买, 然后寄回去. 如果海关那能过就没问题.
据说雅培(similac), 美赞臣(enfamil)的好像都不错, 我去店里看看. 然后现在家里地址用哪个?

国内一个大学同学, 大学时呢关系一般, 他住我隔壁寝室, 平时只是开开玩笑, 我出国以后
多年没联系, 最近一两年, 他家孩子要吃奶粉, 所以让我在美国代购寄回去, 每次都是买
10-12桶奶粉, 分两箱寄回;

算上最近一次的邮寄, 一共给他代购了4次;每次的奶粉钱, 运费加起来大概由360刀的样子.

我就寄过两次, 都是用US Postal Service.用的priority mail. 其中一次弄丢(百分之五十
的机率, 有木有!!!), 自己没留收据, 损失近三百刀. 什么邮寄方式又保险又不太贵?

神州快递
http://www.chexusa.com/index.php/2013-08-08-06-59-08/2-2012-10-07-18-37-02/-faq/203-2012-09-22-14-18-29

关于如何购买奶粉及邮寄回国 -陈晓婷

家有二侄已四月, 奶粉的需求量是大大的, 于是每个月总有那么几天, 要忍痛割爱地去各大
超市淘货, 给小家伙快递口粮.

由于宝贝的不挑食, 让我在选择空间上大了很多, 也会换着品牌的给他买, 原则就是哪个打
折买哪个. 游离于雅培(similac),美赞臣(enfamil)和雀巢旗下的嘉宝(gerber)三大品牌之间.
从质量上来说, 无优劣之分, 全在个人偏好或者宝宝口味. 注:但听说有滴宝宝吃乐一个品牌
后, 就不稀饭换; 甚至就是宁可不吃不喝也不愿改滴.

奶粉一般分为三段, 0-12月为一段, 价钱较贵, 9-24月为二段, 24月以上三段. 三大品牌应
该都有, 因为我的囤货美赞臣居多, 没太注意其他两家二三段的产品.

介于我家的需求量和价钱, 有时候会力不从心, 于是跑到mitbbs的我爱宝宝版上购买别人用
不完的奶票或coupon,通常交易价钱为面值的一般, 这样就可以一罐节省四五刀, 再加上购买
时吐给我的代金券, 可以小剩一笔. 超市也会时不时地发行自己的coupon,可关注下广告页或
者网站信息. 像publix, walmart, target, babyrus, toyrus , cvs, amazon都会有. 当然
大爱还是cosco.

通常会购买650克左右一桶的奶粉, 因为比较来比较去, 邮费更让我头痛. 如何省钱更是让我
做了不少功课. 结论是选择邮局的flat rate box, 最便宜的服务, 免费拿一个小箱子, 合理
利用, 可以塞满六罐 (这个数量是本人邮寄中顺利过关滴经验. 罐有大小, 请验查具体海关
条律, 做到遵纪守法), 6-10个工作日可到中国, 然后转国内ems,两个周左右基本全国各地可
至. 费用大体是七十几刀. –> 网页

填写地址时找个可以写的地方, 将中文一并写上, 以免转运过程出现差错. 希望一切顺利哈!

更多关于奶粉知识, 请参见: 婴儿奶粉的小知识.

https://ircalc.usps.com/?country=10063
" 0 2 (face org-hide org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 2 4 (face org-level-3 org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 4 8 (face (:foreground "PeachPuff2" :weight bold) org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 8 86 (face org-level-3 org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 86 87 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t face (org-tag org-level-3) org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 87 89 (font-lock-fontified t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t face (:foreground "Pink" :weight bold) org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 89 90 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t face (org-tag org-level-3) org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 90 91 (org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 91 1544 (org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified nil) 1544 1581 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://ircalc.usps.com/?country=10063") face org-link mouse-face highlight org-no-flyspell t org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 1581 1582 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://ircalc.usps.com/?country=10063") face org-link mouse-face highlight org-no-flyspell t org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 1582 1583 (org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t)) #("*** DONE Baby formular                                                                :#B:
    CLOSED: [2016-01-13 Wed 23:25]
    - State \"DONE\"       from \"ACTIVE\"     [2016-01-13 Wed 23:25]
[2016-01-09 Sat 11:29]

给末末买奶粉

小姨, 查好了. 我准备去个这边的Costco买, 然后寄回去. 如果海关那能过就没问题.
据说雅培(similac), 美赞臣(enfamil)的好像都不错, 我去店里看看. 然后现在家里地址用哪个?

国内一个大学同学, 大学时呢关系一般, 他住我隔壁寝室, 平时只是开开玩笑, 我出国以后
多年没联系, 最近一两年, 他家孩子要吃奶粉, 所以让我在美国代购寄回去, 每次都是买
10-12桶奶粉, 分两箱寄回;

算上最近一次的邮寄, 一共给他代购了4次;每次的奶粉钱, 运费加起来大概由360刀的样子.

我就寄过两次, 都是用US Postal Service.用的priority mail. 其中一次弄丢(百分之五十
的机率, 有木有!!!), 自己没留收据, 损失近三百刀. 什么邮寄方式又保险又不太贵?

神州快递
http://www.chexusa.com/index.php/2013-08-08-06-59-08/2-2012-10-07-18-37-02/-faq/203-2012-09-22-14-18-29

关于如何购买奶粉及邮寄回国 -陈晓婷

家有二侄已四月, 奶粉的需求量是大大的, 于是每个月总有那么几天, 要忍痛割爱地去各大
超市淘货, 给小家伙快递口粮.

由于宝贝的不挑食, 让我在选择空间上大了很多, 也会换着品牌的给他买, 原则就是哪个打
折买哪个. 游离于雅培(similac),美赞臣(enfamil)和雀巢旗下的嘉宝(gerber)三大品牌之间.
从质量上来说, 无优劣之分, 全在个人偏好或者宝宝口味. 注:但听说有滴宝宝吃乐一个品牌
后, 就不稀饭换; 甚至就是宁可不吃不喝也不愿改滴.

奶粉一般分为三段, 0-12月为一段, 价钱较贵, 9-24月为二段, 24月以上三段. 三大品牌应
该都有, 因为我的囤货美赞臣居多, 没太注意其他两家二三段的产品.

介于我家的需求量和价钱, 有时候会力不从心, 于是跑到mitbbs的我爱宝宝版上购买别人用
不完的奶票或coupon,通常交易价钱为面值的一般, 这样就可以一罐节省四五刀, 再加上购买
时吐给我的代金券, 可以小剩一笔. 超市也会时不时地发行自己的coupon,可关注下广告页或
者网站信息. 像publix, walmart, target, babyrus, toyrus , cvs, amazon都会有. 当然
大爱还是cosco.

通常会购买650克左右一桶的奶粉, 因为比较来比较去, 邮费更让我头痛. 如何省钱更是让我
做了不少功课. 结论是选择邮局的flat rate box, 最便宜的服务, 免费拿一个小箱子, 合理
利用, 可以塞满六罐 (这个数量是本人邮寄中顺利过关滴经验. 罐有大小, 请验查具体海关
条律, 做到遵纪守法), 6-10个工作日可到中国, 然后转国内ems,两个周左右基本全国各地可
至. 费用大体是七十几刀. –> 网页

填写地址时找个可以写的地方, 将中文一并写上, 以免转运过程出现差错. 希望一切顺利哈!

更多关于奶粉知识, 请参见: 婴儿奶粉的小知识.

https://ircalc.usps.com/?country=10063
" 0 2 (face org-hide org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 2 4 (face org-level-3 org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 4 8 (face (:foreground "PeachPuff2" :weight bold) org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 8 86 (face org-level-3 org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 86 87 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t face (org-tag org-level-3) org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 87 89 (font-lock-fontified t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t face (:foreground "Pink" :weight bold) org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 89 90 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t face (org-tag org-level-3) org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 90 91 (org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 91 1544 (org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified nil) 1544 1581 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://ircalc.usps.com/?country=10063") face org-link mouse-face highlight org-no-flyspell t org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 1581 1582 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) htmlize-link (:uri "https://ircalc.usps.com/?country=10063") face org-link mouse-face highlight org-no-flyspell t org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t) 1582 1583 (org-category-position 2249 org-category #("TODO-#B" 0 7 (face org-property-value org-category-position 2249 org-category "iPrv" fontified t)) fontified t)) #("\\cite{}
" 0 1 (fontified t face (font-lock-keyword-face font-latex-sedate-face)) 1 5 (fontified t face (font-lock-keyword-face font-latex-sedate-face)) 5 6 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 6 7 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 7 8 (fontified t)) "@article{LU:2013bl,
author = {LU, Chao and Recht, Daniel and Arnold, Craig},
title = {{Generalized Model for Photoinduced Surface Structure in Amorphous Thin Films}},
journal = {Physical Review Letters},
year = {2013},
volume = {111},
number = {10},
pages = {105503},
month = sep
}

" #("100" 0 3 (fontified t)) #("        
" 0 8 (fontified t) 8 9 (fontified t)) #("  -rwxrwxrwx  2 LooChao  staff   671B Jan 21 18:29 " 0 2 (fontified t) 2 3 (mouse-face highlight help-echo diredp-mouseover-help fontified t) 3 4 (mouse-face highlight help-echo diredp-mouseover-help fontified t face diredp-read-priv) 4 5 (mouse-face highlight help-echo diredp-mouseover-help fontified t face diredp-write-priv) 5 6 (mouse-face highlight help-echo diredp-mouseover-help fontified t face diredp-exec-priv) 6 7 (mouse-face highlight help-echo diredp-mouseover-help fontified t face diredp-read-priv) 7 8 (mouse-face highlight help-echo diredp-mouseover-help fontified t face diredp-write-priv) 8 9 (mouse-face highlight help-echo diredp-mouseover-help fontified t face diredp-exec-priv) 9 10 (mouse-face highlight help-echo diredp-mouseover-help fontified t face diredp-read-priv) 10 11 (mouse-face highlight help-echo diredp-mouseover-help fontified t face diredp-write-priv) 11 12 (mouse-face highlight help-echo diredp-mouseover-help fontified t face diredp-exec-priv) 12 14 (mouse-face highlight help-echo diredp-mouseover-help fontified t) 14 16 (mouse-face highlight help-echo diredp-mouseover-help fontified t face diredp-number) 16 33 (mouse-face highlight help-echo diredp-mouseover-help fontified t) 33 38 (mouse-face highlight help-echo diredp-mouseover-help fontified t face diredp-number) 38 50 (mouse-face highlight help-echo diredp-mouseover-help fontified t face diredp-date-time) 50 51 (mouse-face highlight help-echo diredp-mouseover-help fontified t)) #("
" 0 1 (org-category "iPrv" fontified t)) "  Velocity 3 = 0
  Velocity 2 = 0" "  Noslip wall BC = True" "13789" "  External Pressure = 13789" "  Noslip wall BC = True" "0" "2" #("~/Dropbox/Work/Sorter/" 0 22 (fontified t)) #("Sorter" 0 6 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv)) #("Pharmaseq" 0 9 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv)) #("Projects" 0 8 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv)) #("Pharmaseq" 0 9 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv)) #("
" 0 1 (fontified t)) #("*** ACTIVE Eating with Bonnie                                                         :#B:
[2016-01-13 Thu 00:57]" 0 2 (fontified t face org-hide) 2 4 (fontified t face org-level-3) 4 10 (fontified t face (:foreground "Cyan" :weight bold)) 10 17 (fontified t face org-level-3) 17 22 (fontified t face org-level-3) 22 29 (fontified t face org-level-3) 29 30 (fontified t face org-level-3) 30 86 (fontified t face org-level-3) 86 87 (fontified t face (org-tag org-level-3) org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 87 89 (fontified t font-lock-fontified t face (:foreground "Pink" :weight bold) org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 89 90 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face (org-tag org-level-3) org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 90 91 (fontified t) 91 92 (face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 92 112 (face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t fontified t) 112 113 (face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t)) "dell precision t1700  lan problem" #("Sorter.base.for.Simulation4" 0 7 (face diredp-flag-mark-line fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 7 12 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-flag-mark-line) 12 16 (face diredp-flag-mark-line fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 16 27 (face diredp-flag-mark-line fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) #("Sorter.base.for.Simulation4" 0 7 (face diredp-flag-mark-line fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 7 12 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-flag-mark-line) 12 16 (face diredp-flag-mark-line fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 16 27 (face diredp-flag-mark-line fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) #("~/Dropbox/Pharmaseq/Sorter/Manifold/Manifold06/" 0 47 (fontified t)) #("~/Dropbox/Pharmaseq/Sorter/Manifold/Manifold06/" 0 47 (fontified t)) #("~/Dropbox/Pharmaseq/Sorter/Manifold/Manifold06/" 0 47 (fontified t)) #("~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation15_V.WORK.GREAT/" 0 64 (fontified t)) #("~/Dropbox/Pharmaseq/Sorter/Simulation/Simulation11_Full.Body_Work/" 0 66 (fontified t)) #("Dropbox/Pharmaseq/Sorter/Simulation/Simulation11_Full.Body_Work/" 0 64 (fontified t)) "Hi Wes,
 
We’re just looking at a few items that we were hoping for feedback on related to some initial design work Chris has been doing on a GigaSort switch-based manifold design:
1)      What are the approx.. pressures you have been and expect to run on your manifolds with current channel geometries (which look to be 5-6 inches long)?
2)      On slide 2 of the set you provided last Friday, the right hand end of the channel (dashed circle) shows a expanded view – is this an orienting feature, and if so, do you have dimensions of this section that Chris can include in his design?
3)      What is the reason for the additional two similar wedges along the flow path?
4)      What are the pressure units on the last slide and or what operating pressure and pressure drop would you see based on your experience?
 
Best regards,
 
John" "https://github.com/syl20bnr/spacemacs.git" #("
" 0 1 (org-category "Pharmaseq" fontified t)) #("Dear all,

The action items from our conference call were:

1. PharmaSeq (Tom/Chao) to continue investigation of fluidic simulations.
   a. Conduct further calculations on current 'V-point' setting:
      - Add the control flow in simulation of transient switching.
      - Search the parameter space to match experimental results.
   b. Explore Elmer's capabilities with respect to:
      - Moving boundary condition problems.
      - Two-phase (fluid and p-Chip) coupling problem.
   c. Explore other FEM tools, like OpenFoam, Fluidity, COMSOL, etc.
      - Information, comments from Cytonome are appreciated.

2. PharmaSeq (Wes/Tom/Chao) to provide data on valves and switches.
   - Parker-hannifin Series 9 solenoid type valve with poppet seal (catalog #
     009-0347-900, 0.020'' orifice.
   - This valve is capable to achieve an opening time of 0.18ms under special
     conditions.
   - Data sheet:
     http://ph.parker.com/us/12051/da/pulse-valves-miniature-high-speed-high-vacuum-dispense-valve/009-0347-900

3. PharmaSeq objectives regarding the fluidic setup:
   a. Get electronic control board functioning.
   b. Get the 2 way sorting fluidic setup working.
   c. Provide preliminary data on properties of the fluidic system.

4. PharmaSeq (Chao/Tom) to continue work on 8-channel valve-based manifold.
   - Finish first version of the design and send out for fabrication.

5. Cytonome and PharmaSeq to further study GigaSort-based manifold.
   a. Cytonome to obtain preliminary CAD designs of manifold.
   b. PharmaSeq (Tom/Chao) to explore information of piezo disk and the
   electronic control system.

5. Next meeting to be held 28 January 2 pm EST.
   - Chao to set up the conference call.

Comments and suggestions are welcome.

We are looking forward to talking with you at the next meeting.

Best regards,

Chao
" 0 10 (fontified t org-category "Pharmaseq") 10 11 (fontified t org-category "Pharmaseq") 11 59 (fontified t org-category "Pharmaseq") 59 60 (fontified t org-category "Pharmaseq") 60 63 (org-category "Pharmaseq" fontified t) 63 72 (fontified t) 72 73 (org-category "Pharmaseq" fontified t) 73 74 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category "Pharmaseq" fontified t) 74 82 (org-category "Pharmaseq" fontified t) 82 83 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category "Pharmaseq" fontified t) 83 134 (org-category "Pharmaseq" fontified t) 134 137 (org-category "Pharmaseq" fontified t) 137 139 (org-category "Pharmaseq" fontified t) 139 199 (org-category "Pharmaseq" fontified t) 199 200 (org-category "Pharmaseq" fontified t) 200 215 (org-category "Pharmaseq" fontified t) 215 266 (org-category "Pharmaseq" fontified t) 266 332 (org-category "Pharmaseq" fontified t) 332 335 (org-category "Pharmaseq" fontified t) 335 337 (org-category "Pharmaseq" fontified t) 337 354 (org-category "Pharmaseq" fontified t) 354 365 (org-category "Pharmaseq" fontified t) 365 366 (org-category "Pharmaseq" fontified t rear-nonsticky t) 366 382 (fontified t) 382 384 (org-category "Pharmaseq" fontified t) 384 392 (org-category "Pharmaseq" fontified t) 392 428 (org-category "Pharmaseq" fontified t) 428 446 (org-category "Pharmaseq" fontified t) 446 447 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category "Pharmaseq" fontified t) 447 463 (org-category "Pharmaseq" fontified t) 463 464 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category "Pharmaseq" fontified t) 464 482 (org-category "Pharmaseq" fontified t) 482 483 (org-category "Pharmaseq" fontified t) 483 486 (org-category "Pharmaseq" fontified t) 486 489 (org-category "Pharmaseq" fontified t) 489 519 (org-category "Pharmaseq" fontified t) 519 552 (org-category "Pharmaseq" fontified t) 552 587 (org-category "Pharmaseq" fontified t) 587 612 (fontified t) 612 613 (org-category "Pharmaseq" fontified t) 613 614 (org-category "Pharmaseq" fontified t) 614 617 (org-category "Pharmaseq" fontified t) 617 626 (fontified t) 626 627 (org-category "Pharmaseq" fontified t) 627 628 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category "Pharmaseq" fontified t) 628 640 (org-category "Pharmaseq" fontified t) 640 641 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category "Pharmaseq" fontified t) 641 682 (org-category "Pharmaseq" fontified t) 682 749 (org-category "Pharmaseq" fontified t) 749 750 (org-category "Pharmaseq" fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 750 760 (fontified t) 760 796 (fontified t) 796 874 (fontified t) 874 891 (fontified t) 891 896 (fontified t) 896 906 (fontified t) 906 908 (fontified t) 908 913 (fontified t) 913 1018 (htmlize-link (:uri "http://ph.parker.com/us/12051/da/pulse-valves-miniature-high-speed-high-vacuum-dispense-valve/009-0347-900") fontified t org-no-flyspell t mouse-face highlight face org-link keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 1018 1019 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "http://ph.parker.com/us/12051/da/pulse-valves-miniature-high-speed-high-vacuum-dispense-valve/009-0347-900") fontified t org-no-flyspell t mouse-face highlight face org-link keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 1019 1020 (fontified t) 1020 1021 (org-category "Pharmaseq" fontified t) 1021 1074 (org-category "Pharmaseq" fontified t) 1074 1077 (org-category "Pharmaseq" fontified t) 1077 1084 (org-category "Pharmaseq" fontified t) 1084 1122 (org-category "Pharmaseq" fontified t) 1122 1125 (org-category "Pharmaseq" fontified t) 1125 1173 (org-category "Pharmaseq" fontified t) 1173 1177 (org-category "Pharmaseq" fontified t) 1177 1241 (org-category "Pharmaseq" fontified t) 1241 1242 (org-category "Pharmaseq" fontified t) 1242 1243 (org-category "Pharmaseq" fontified t) 1243 1245 (org-category "Pharmaseq" fontified t) 1245 1254 (fontified t) 1254 1255 (org-category "Pharmaseq" fontified t) 1255 1256 (org-category "Pharmaseq" font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t fontified t) 1256 1264 (fontified t) 1264 1265 (font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t fontified t) 1265 1308 (fontified t) 1308 1318 (fontified t) 1318 1387 (fontified t) 1387 1388 (fontified t) 1388 1389 (org-category "Pharmaseq" fontified t) 1389 1390 (org-category "Pharmaseq" fontified t) 1390 1405 (org-category "Pharmaseq" fontified t) 1405 1414 (fontified t) 1414 1432 (org-category "Pharmaseq" fontified t) 1432 1457 (fontified t) 1457 1460 (fontified t) 1460 1519 (fontified t) 1519 1522 (fontified t) 1522 1525 (fontified t) 1525 1534 (fontified t) 1534 1535 (fontified t) 1535 1536 (font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t fontified t) 1536 1544 (fontified t) 1544 1545 (font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t fontified t) 1545 1591 (fontified t) 1591 1621 (fontified t) 1621 1622 (fontified t) 1622 1659 (fontified t) 1659 1670 (fontified t) 1670 1711 (fontified t) 1711 1712 (fontified t) 1712 1750 (fontified t) 1750 1751 (fontified t) 1751 1758 (fontified t) 1758 1815 (fontified t) 1815 1816 (fontified t) 1816 1830 (fontified t) 1830 1831 (fontified t) 1831 1835 (fontified t) 1835 1836 (fontified t)) #("harvard" 0 7 (fontified t)) "https://www.youtube.com/watch?v=7q3VIoQinCs&list=PL2SOU6wwxB0u5DBbFA2cjpKfdPzL3ruC1&index=22" "https://github.com/syl20bnr/spacemacs.git" #("projects" 0 8 (fontified t)) #("Dear all,

The action items from our conference call were:

1. PharmaSeq (Tom/Chao) to continue investigation of fluidic simulations.
   a. Conduct further calculations on current 'V-point' setting:
      - Add the control flow in simulation of transient switching.
      - Search the parameter space to match experimental results.
   b. Explore Elmer's capabilities with respect to:
      - Moving boundary condition problems.
      - Two-phase (fluid and p-Chip) coupling problem.
   c. Explore other FEM tools, like OpenFoam, Fluidity, COMSOL, etc.
      - Information, comments from Cytonome are appreciated.

2. PharmaSeq (Wes/Tom/Chao) to provide data on valves and switches.
   - Parker-hannifin Series 9 solenoid type valve with poppet seal (catalog #
     009-0347-900, 0.020'' orifice.
   - This valve is capable to achieve an opening time of 0.18ms under special
     conditions.
   - Data sheet:
     http://ph.parker.com/us/12051/da/pulse-valves-miniature-high-speed-high-vacuum-dispense-valve/009-0347-900

3. PharmaSeq objectives regarding the fluidic setup:
   a. Get electronic control board functioning.
   b. Get the 2 way sorting fluidic setup working.
   c. Provide preliminary data on properties of the fluidic system.

4. PharmaSeq (Chao/Tom) to continue work on 8-channel valve-based manifold.
   - Finish first version of the design and send out for fabrication.

5. Cytonome and PharmaSeq to further study GigaSort-based manifold.
   a. Cytonome to obtain preliminary CAD designs of manifold.
   b. PharmaSeq (Tom/Chao) to explore information of piezo disk and the
   electronic control system.

5. Next meeting to be held 28 January 2 pm EST.
   - Chao to set up the conference call.

Comments and suggestions are welcome.

We are looking forward to talking with you at the next meeting.

Best regards,

Chao" 0 10 (fontified t org-category "Pharmaseq") 10 11 (fontified t org-category "Pharmaseq") 11 59 (fontified t org-category "Pharmaseq") 59 60 (fontified t org-category "Pharmaseq") 60 63 (org-category "Pharmaseq" fontified t) 63 72 (fontified t) 72 73 (org-category "Pharmaseq" fontified t) 73 74 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category "Pharmaseq" fontified t) 74 82 (org-category "Pharmaseq" fontified t) 82 83 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category "Pharmaseq" fontified t) 83 134 (org-category "Pharmaseq" fontified t) 134 137 (org-category "Pharmaseq" fontified t) 137 139 (org-category "Pharmaseq" fontified t) 139 199 (org-category "Pharmaseq" fontified t) 199 200 (org-category "Pharmaseq" fontified t) 200 215 (org-category "Pharmaseq" fontified t) 215 266 (org-category "Pharmaseq" fontified t) 266 332 (org-category "Pharmaseq" fontified t) 332 335 (org-category "Pharmaseq" fontified t) 335 337 (org-category "Pharmaseq" fontified t) 337 354 (org-category "Pharmaseq" fontified t) 354 365 (org-category "Pharmaseq" fontified t) 365 366 (org-category "Pharmaseq" fontified t rear-nonsticky t) 366 382 (fontified t) 382 384 (org-category "Pharmaseq" fontified t) 384 392 (org-category "Pharmaseq" fontified t) 392 428 (org-category "Pharmaseq" fontified t) 428 446 (org-category "Pharmaseq" fontified t) 446 447 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category "Pharmaseq" fontified t) 447 463 (org-category "Pharmaseq" fontified t) 463 464 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category "Pharmaseq" fontified t) 464 482 (org-category "Pharmaseq" fontified t) 482 483 (org-category "Pharmaseq" fontified t) 483 486 (org-category "Pharmaseq" fontified t) 486 489 (org-category "Pharmaseq" fontified t) 489 519 (org-category "Pharmaseq" fontified t) 519 552 (org-category "Pharmaseq" fontified t) 552 587 (org-category "Pharmaseq" fontified t) 587 612 (fontified t) 612 613 (org-category "Pharmaseq" fontified t) 613 614 (org-category "Pharmaseq" fontified t) 614 617 (org-category "Pharmaseq" fontified t) 617 626 (fontified t) 626 627 (org-category "Pharmaseq" fontified t) 627 628 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category "Pharmaseq" fontified t) 628 640 (org-category "Pharmaseq" fontified t) 640 641 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category "Pharmaseq" fontified t) 641 682 (org-category "Pharmaseq" fontified t) 682 749 (org-category "Pharmaseq" fontified t) 749 750 (org-category "Pharmaseq" fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 750 760 (fontified t) 760 796 (fontified t) 796 874 (fontified t) 874 891 (fontified t) 891 896 (fontified t) 896 906 (fontified t) 906 908 (fontified t) 908 913 (fontified t) 913 1018 (htmlize-link (:uri "http://ph.parker.com/us/12051/da/pulse-valves-miniature-high-speed-high-vacuum-dispense-valve/009-0347-900") fontified t org-no-flyspell t mouse-face highlight face org-link keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 1018 1019 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "http://ph.parker.com/us/12051/da/pulse-valves-miniature-high-speed-high-vacuum-dispense-valve/009-0347-900") fontified t org-no-flyspell t mouse-face highlight face org-link keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 1019 1020 (fontified t) 1020 1021 (org-category "Pharmaseq" fontified t) 1021 1074 (org-category "Pharmaseq" fontified t) 1074 1077 (org-category "Pharmaseq" fontified t) 1077 1084 (org-category "Pharmaseq" fontified t) 1084 1122 (org-category "Pharmaseq" fontified t) 1122 1125 (org-category "Pharmaseq" fontified t) 1125 1173 (org-category "Pharmaseq" fontified t) 1173 1177 (org-category "Pharmaseq" fontified t) 1177 1241 (org-category "Pharmaseq" fontified t) 1241 1242 (org-category "Pharmaseq" fontified t) 1242 1243 (org-category "Pharmaseq" fontified t) 1243 1245 (org-category "Pharmaseq" fontified t) 1245 1254 (fontified t) 1254 1255 (org-category "Pharmaseq" fontified t) 1255 1256 (org-category "Pharmaseq" font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t fontified t) 1256 1264 (fontified t) 1264 1265 (font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t fontified t) 1265 1308 (fontified t) 1308 1318 (fontified t) 1318 1387 (fontified t) 1387 1388 (fontified t) 1388 1389 (org-category "Pharmaseq" fontified t) 1389 1390 (org-category "Pharmaseq" fontified t) 1390 1405 (org-category "Pharmaseq" fontified t) 1405 1414 (fontified t) 1414 1432 (org-category "Pharmaseq" fontified t) 1432 1457 (fontified t) 1457 1460 (fontified t) 1460 1519 (fontified t) 1519 1522 (fontified t) 1522 1525 (fontified t) 1525 1534 (fontified t) 1534 1535 (fontified t) 1535 1536 (font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t fontified t) 1536 1544 (fontified t) 1544 1545 (font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t fontified t) 1545 1591 (fontified t) 1591 1621 (fontified t) 1621 1622 (fontified t) 1622 1659 (fontified t) 1659 1670 (fontified t) 1670 1711 (fontified t) 1711 1712 (fontified t) 1712 1750 (fontified t) 1750 1751 (fontified t) 1751 1758 (fontified t) 1758 1815 (fontified t) 1815 1816 (fontified t) 1816 1830 (fontified t) 1830 1831 (fontified t) 1831 1835 (fontified t)) #("meetin" 0 6 (fontified t)) #("February" 0 8 (fontified t)) #("
" 0 1 (org-category "Pharmaseq" fontified t)) #("on" 0 2 (org-category "Pharmaseq" fontified t)) "http://ph.parker.com/us/12051/da/pulse-valves-miniature-high-speed-high-vacuum-dispense-valve/009-0347-900" #("009-0347-900" 0 12 (fontified t)) #("I wish everybody a health and positive emotions and every success in the
year 2016. " 0 2 (fontified t) 2 7 (fontified t) 7 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 26 (fontified t) 26 30 (fontified t) 30 39 (fontified t) 39 48 (fontified t) 48 52 (fontified t) 52 58 (fontified t) 58 66 (fontified t) 66 69 (fontified t) 69 73 (fontified t) 73 78 (fontified t) 78 82 (fontified t) 82 83 (rear-nonsticky t fontified t) 83 84 (fontified t)) #("Please reply if there's any mistake. " 0 7 (fontified t) 7 13 (fontified t) 13 16 (fontified t) 16 24 (fontified t) 24 28 (fontified t) 28 37 (fontified t)) #("capabilities" 0 12 (org-category "Pharmaseq" fontified t)) #("of " 0 3 (org-category "Pharmaseq" fontified t)) #("the " 0 4 (org-category "Pharmaseq" fontified t)) #("on" 0 2 (org-category "Pharmaseq" fontified t)) #("to perform " 0 3 (fontified t org-category "Pharmaseq") 3 11 (fontified t org-category "Pharmaseq")) #("problem" 0 7 (org-category "Pharmaseq" fontified t)) #("system" 0 6 (org-category "Pharmaseq" fontified t)) #("on simulation" 0 3 (fontified t org-category "Pharmaseq") 3 13 (fontified t org-category "Pharmaseq")) #("investigate further" 0 12 (fontified t org-category "Pharmaseq") 12 19 (fontified t org-category "Pharmaseq")) #("meeting" 0 7 (fontified t org-category "Pharmaseq")) #("follow up " 0 7 (org-category "Pharmaseq" fontified t) 7 10 (org-category "Pharmaseq" fontified t)) #("https://www.youtube.com/watch?v=kI7D2lkcF8E&list=PL36EC6A6180271B0F" 0 66 (fontified t front-sticky t font-lock-face comint-highlight-input mouse-face highlight help-echo "mouse-2: insert after prompt as new input") 66 67 (fontified t rear-nonsticky t front-sticky t font-lock-face comint-highlight-input mouse-face highlight help-echo "mouse-2: insert after prompt as new input")) "https://www.youtube.com/watch?v=kI7D2lkcF8E&list=PL36EC6A6180271B0F" "https://www.youtube.com/watch?v=HtSuA80QTyo&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" "https://github.com/syl20bnr/spacemacs.git" #("Dear all,

The follow up action items from our meeting were:

1. Pharmaseq (Tom/Chao) to continue investigations on simulation.
   a. Conduct further calculations on current 'V-point' setting:
      - Add the control flow in to perform simulation on transient switching.
      - Search the parameter space to match experimental results.
   b. Explore the capabilities of Elmer on:
      - Moving boundary condition problems.
      - Two-phase (fluid and p-chip) coupling problem.
   c. Explore other FEM tools, like OpenFoam, Fluidity, COMSOL, etc.
      - Information, comments from Cytonome are appreciated.

2. Pharmaseq (Wes/Tom/Chao) to provide data on valves and switch.
   a. Get electronic control board functioning.
   b. Get the 2 way sorting fluidic setup working.
   c. Provide preliminary data on properties of the fluidic system.

3. Pharmaseq (Chao/Tom) to continue work on 8-channel Valve-based manifold.
   - Finish first version of design and send out for fabrication.

4. Cytonome and Pharmaseq to further study GigaSort-based manifold.
   a. Cytonome to obtain preliminary CAD designs of manifold.
   b. Pharmaseq (Tom/Chao) to explore information of piezo disk and the
   electronic control system.

5. Next meeing to be held ?? February ?? pm EST.
   - Chao to set up the meeting.

Please reply if there's any mistake. Comments and suggestions are welcome.

I wish everybody healthy and positive emotions and every success in the
year 2016. Looking forward to talking with you next meeting.

Best regards,

Chao" 0 10 (org-category "Pharmaseq" fontified t) 10 11 (org-category "Pharmaseq" fontified t) 11 61 (org-category "Pharmaseq" fontified t) 61 62 (org-category "Pharmaseq" fontified t) 62 75 (org-category "Pharmaseq" fontified t) 75 76 (rear-nonsticky t org-category "Pharmaseq" fontified t font-lock-face "rainbow-delimiters-depth-1-face") 76 84 (org-category "Pharmaseq" fontified t) 84 85 (rear-nonsticky t org-category "Pharmaseq" fontified t font-lock-face "rainbow-delimiters-depth-1-face") 85 127 (org-category "Pharmaseq" fontified t) 127 128 (org-category "Pharmaseq" fontified t) 128 131 (org-category "Pharmaseq" fontified t) 131 133 (org-category "Pharmaseq" fontified t) 133 193 (org-category "Pharmaseq" fontified t) 193 194 (org-category "Pharmaseq" fontified t) 194 209 (org-category "Pharmaseq" fontified t) 209 271 (org-category "Pharmaseq" fontified t) 271 337 (org-category "Pharmaseq" fontified t) 337 340 (org-category "Pharmaseq" fontified t) 340 342 (org-category "Pharmaseq" fontified t) 342 381 (org-category "Pharmaseq" fontified t) 381 389 (org-category "Pharmaseq" fontified t) 389 425 (org-category "Pharmaseq" fontified t) 425 443 (org-category "Pharmaseq" fontified t) 443 444 (rear-nonsticky t org-category "Pharmaseq" font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 444 460 (org-category "Pharmaseq" fontified t) 460 461 (rear-nonsticky t org-category "Pharmaseq" font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 461 479 (org-category "Pharmaseq" fontified t) 479 480 (org-category "Pharmaseq" fontified t) 480 483 (org-category "Pharmaseq" fontified t) 483 486 (org-category "Pharmaseq" fontified t) 486 516 (org-category "Pharmaseq" fontified t) 516 549 (org-category "Pharmaseq" fontified t) 549 584 (org-category "Pharmaseq" fontified t) 584 609 (fontified t) 609 610 (org-category "Pharmaseq" fontified t) 610 611 (org-category "Pharmaseq" fontified t) 611 624 (org-category "Pharmaseq" fontified t) 624 625 (rear-nonsticky t org-category "Pharmaseq" font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 625 637 (org-category "Pharmaseq" fontified t) 637 638 (rear-nonsticky t org-category "Pharmaseq" font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 638 677 (org-category "Pharmaseq" fontified t) 677 680 (org-category "Pharmaseq" fontified t) 680 687 (org-category "Pharmaseq" fontified t) 687 725 (org-category "Pharmaseq" fontified t) 725 728 (org-category "Pharmaseq" fontified t) 728 776 (org-category "Pharmaseq" fontified t) 776 780 (org-category "Pharmaseq" fontified t) 780 844 (org-category "Pharmaseq" fontified t) 844 845 (org-category "Pharmaseq" fontified t) 845 858 (org-category "Pharmaseq" fontified t) 858 859 (org-category "Pharmaseq" rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 859 867 (fontified t) 867 868 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 868 911 (fontified t) 911 921 (fontified t) 921 986 (fontified t) 986 987 (fontified t) 987 988 (org-category "Pharmaseq" fontified t) 988 989 (org-category "Pharmaseq" fontified t) 989 1031 (org-category "Pharmaseq" fontified t) 1031 1056 (fontified t) 1056 1059 (fontified t) 1059 1118 (fontified t) 1118 1121 (fontified t) 1121 1134 (fontified t) 1134 1135 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1135 1143 (fontified t) 1143 1144 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1144 1190 (fontified t) 1190 1220 (fontified t) 1220 1221 (fontified t) 1221 1250 (fontified t) 1250 1258 (fontified t) 1258 1270 (fontified t) 1270 1303 (fontified t) 1303 1304 (fontified t) 1304 1379 (fontified t) 1379 1380 (fontified t) 1380 1382 (fontified t) 1382 1396 (fontified t) 1396 1427 (fontified t) 1427 1452 (fontified t) 1452 1461 (fontified t) 1461 1462 (rear-nonsticky t fontified t) 1462 1513 (fontified t) 1513 1514 (fontified t) 1514 1528 (fontified t) 1528 1529 (fontified t) 1529 1532 (fontified t) 1532 1533 (rear-nonsticky t fontified t)) #("
membership
mind" 0 1 (fontified t) 1 11 (fontified t) 11 12 (fontified t) 12 15 (fontified t) 15 16 (fontified t rear-nonsticky t)) #("13
" 0 2 (fontified t) 2 3 (fontified t)) "13
关键词还是最后一句话
新保险便宜
要是老保险便宜，你就忍了吧，哈哈

membership
mind" "另外看来保险公司更注意你的驾龄，中间保险有空档并不影响保费。这好象是很多人的
一个误区。想来也符合道理
只要驾龄够上，中年养家男，开minivan，估计是保险公司最愿意保的了" "不是故意不买保险，是新换的保险公司账单打回头了，我没收到
我以为和老保险一样是自动renew的，因为有收到保险卡" #("6
" 0 1 (fontified t) 1 2 (fontified t)) "6
我有个同学，没有续保险
又一次违章parking被警察抓到，要求出示保险，结果没有
被罚款，多少钱我忘记了，另外吊销驾照3个月" "半年内换工作，换地址．．．邮局forward也没起作用
" #("4
" 0 1 (fontified t) 1 2 (fontified t)) "4
不会吧，记得有一次我保险过期了一年左右，title和inspection也都过期了，直到
accident了才发现，警察也就是给了几张ticket，口头警告手续办全之前不能再开车，那
晚是警车陪着我回家的，只不过是俺给警车开道。后来保险续上，罚款交了就没事了。
我在纽约州。" #("problem" 0 7 (org-category "Pharmaseq" fontified t)) #("further" 0 7 (org-category "Pharmaseq" fontified t)) #("
" 0 1 (org-category "Pharmaseq" fontified t)) #("." 0 1 (org-category "Pharmaseq" fontified t)) #("of fluidic system" 0 3 (fontified t org-category "Pharmaseq") 3 11 (org-category "Pharmaseq" fontified t) 11 17 (org-category "Pharmaseq" fontified t)) #("Dear all,

The follow up action items from our meeting were:

1. Pharmaseq (Tom/Chao) to investigate further on simulation of fluidic system.
   a. Conduct further calculations on current 'V-point' problem:
      - Add the control flow in to perform simulation on transient switching.
      - Search the parameter space to match experimental results.
   b. Explore the capabilities of Elmer on:
      - Moving boundary condition problems.
      - Two-phase (fluid and p-chip) coupling problem.
   c. Explore other FEM tools, like OpenFoam, Fluidity, COMSOL, etc.
      - Information, comments from Cytonome are appreciated.

2. Pharmaseq (Wes/Tom/Chao) to provide data on valves and switch.
   a. Get electronic control board functioning.
   b. Get the 2 way sorting fluidic setup working.
   c. Provide preliminary data on properties of the fluidic system.

3. Pharmaseq (Chao/Tom) to continue work on 8-channel Valve-based manifold.
   - Finish first version of design and send out for fabrication.

4. Cytonome and Pharmaseq to further study GigaSort-based manifold.
   a. Cytonome to obtain preliminary CAD designs of manifold.
   b. Pharmaseq (Tom/Chao) to explore information of piezo disk and the
   electronic control system.

5. Next meeing to be held ?? February ?? pm EST.
   - Chao to set up the meeting.

Please reply if there's any mistake. Comments and suggestions are welcome.

I wish everybody a health and positive emotions and every success in the
year 2016. Looking forward to talking with you next meeting.

Best regards,

Chao" 0 10 (fontified t org-category "Pharmaseq") 10 11 (fontified t org-category "Pharmaseq") 11 61 (fontified t org-category "Pharmaseq") 61 62 (fontified t org-category "Pharmaseq") 62 75 (fontified t org-category "Pharmaseq") 75 76 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category "Pharmaseq") 76 84 (fontified t org-category "Pharmaseq") 84 85 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category "Pharmaseq") 85 142 (fontified t org-category "Pharmaseq") 142 145 (fontified t org-category "Pharmaseq") 145 147 (fontified t org-category "Pharmaseq") 147 207 (fontified t org-category "Pharmaseq") 207 208 (fontified t org-category "Pharmaseq") 208 223 (fontified t org-category "Pharmaseq") 223 285 (fontified t org-category "Pharmaseq") 285 351 (org-category "Pharmaseq" fontified t) 351 354 (org-category "Pharmaseq" fontified t) 354 356 (org-category "Pharmaseq" fontified t) 356 395 (org-category "Pharmaseq" fontified t) 395 403 (org-category "Pharmaseq" fontified t) 403 439 (org-category "Pharmaseq" fontified t) 439 457 (org-category "Pharmaseq" fontified t) 457 458 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category "Pharmaseq" fontified t) 458 474 (org-category "Pharmaseq" fontified t) 474 475 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category "Pharmaseq" fontified t) 475 493 (org-category "Pharmaseq" fontified t) 493 494 (org-category "Pharmaseq" fontified t) 494 497 (org-category "Pharmaseq" fontified t) 497 500 (org-category "Pharmaseq" fontified t) 500 530 (org-category "Pharmaseq" fontified t) 530 563 (org-category "Pharmaseq" fontified t) 563 598 (org-category "Pharmaseq" fontified t) 598 623 (fontified t) 623 624 (org-category "Pharmaseq" fontified t) 624 625 (org-category "Pharmaseq" fontified t) 625 638 (org-category "Pharmaseq" fontified t) 638 639 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category "Pharmaseq" fontified t) 639 651 (org-category "Pharmaseq" fontified t) 651 652 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category "Pharmaseq" fontified t) 652 691 (org-category "Pharmaseq" fontified t) 691 694 (org-category "Pharmaseq" fontified t) 694 701 (org-category "Pharmaseq" fontified t) 701 739 (org-category "Pharmaseq" fontified t) 739 742 (org-category "Pharmaseq" fontified t) 742 790 (org-category "Pharmaseq" fontified t) 790 794 (org-category "Pharmaseq" fontified t) 794 858 (org-category "Pharmaseq" fontified t) 858 859 (org-category "Pharmaseq" fontified t) 859 872 (org-category "Pharmaseq" fontified t) 872 873 (org-category "Pharmaseq" font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t) 873 881 (fontified t) 881 882 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t) 882 925 (fontified t) 925 935 (fontified t) 935 1000 (fontified t) 1000 1001 (fontified t) 1001 1002 (org-category "Pharmaseq" fontified t) 1002 1003 (org-category "Pharmaseq" fontified t) 1003 1045 (org-category "Pharmaseq" fontified t) 1045 1070 (fontified t) 1070 1073 (fontified t) 1073 1132 (fontified t) 1132 1135 (fontified t) 1135 1148 (fontified t) 1148 1149 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t) 1149 1157 (fontified t) 1157 1158 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t) 1158 1204 (fontified t) 1204 1234 (fontified t) 1234 1235 (fontified t) 1235 1264 (fontified t) 1264 1272 (fontified t) 1272 1284 (fontified t) 1284 1318 (fontified t) 1318 1393 (fontified t) 1393 1394 (fontified t) 1394 1396 (fontified t) 1396 1412 (fontified t) 1412 1442 (fontified t) 1442 1467 (fontified t) 1467 1476 (fontified t) 1476 1477 (rear-nonsticky t fontified t) 1477 1528 (fontified t) 1528 1529 (fontified t) 1529 1543 (fontified t) 1543 1544 (fontified t) 1544 1548 (fontified t)) #("Thanks and" 0 7 (fontified t) 7 10 (fontified t)) #("very we" 0 5 (fontified t) 5 7 (fontified t)) #("welcome" 0 7 (fontified t)) #("Any " 0 4 (fontified t)) #("considerations" 0 14 (fontified t)) #("further " 0 8 (fontified t)) #("conduct " 0 8 (fontified t)) #("design " 0 7 (fontified t)) #("health, unforgettable " 0 8 (fontified t) 8 22 (fontified t)) #("I wish you" 0 2 (fontified t) 2 7 (fontified t) 7 10 (fontified t)) "I wish you health, unforgettable positive emotions
and every success in the year 2016." #("get the numbers right" 0 4 (fontified t) 4 8 (fontified t) 8 16 (fontified t) 16 21 (fontified t)) #("
" 0 1 (fontified t)) #("Research " 0 9 (fontified t)) #("investigate" 0 11 (fontified t)) #("research " 0 9 (fontified t)) #("investigate " 0 12 (fontified t)) #("conduct " 0 8 (fontified t)) #("Tom/Chao" 0 4 (fontified t) 4 8 (fontified t)) #("Obtain " 0 7 (org-category "Pharmaseq" fontified t)) #("electronic con" 0 11 (fontified t) 11 14 (fontified t)) #("further" 0 7 (org-category "Pharmaseq" fontified t)) #("study" 0 5 (org-category "Pharmaseq" fontified t)) #("perform" 0 7 (org-category "Pharmaseq" fontified t)) #(".
" 0 1 (fontified t org-category "Pharmaseq") 1 2 (fontified t org-category "Pharmaseq")) #("and then" 0 4 (fontified t org-category "Pharmaseq") 4 8 (fontified t org-category "Pharmaseq")) #("functioning" 0 11 (org-category "Pharmaseq" fontified t)) #("sketch" 0 6 (fontified t)) #("the very first version " 0 4 (fontified t) 4 9 (fontified t) 9 15 (fontified t) 15 23 (fontified t)) #("first " 0 6 (fontified t)) #("provide" 0 7 (org-category "Pharmaseq" fontified t)) #("2 channel switching" 0 2 (fontified t org-category "Pharmaseq") 2 10 (org-category "Pharmaseq" fontified t) 10 19 (org-category "Pharmaseq" fontified t)) #("results" 0 7 (org-category "Pharmaseq" fontified t)) #("get " 0 4 (org-category "Pharmaseq" fontified t)) #("Get the " 0 4 (fontified t org-category "Pharmaseq") 4 8 (fontified t org-category "Pharmaseq")) #("Investigate " 0 12 (fontified t)) #("so as to solve" 0 3 (fontified t) 3 6 (fontified t) 6 9 (fontified t) 9 14 (fontified t)) #("obtain setting" 0 7 (fontified t) 7 14 (fontified t)) #("Such as " 0 5 (fontified t) 5 8 (fontified t)) #("setting" 0 7 (fontified t)) #("setting" 0 7 (fontified t)) #("to" 0 2 (fontified t)) #("tweaking the" 0 9 (fontified t) 9 12 (fontified t)) #("more " 0 5 (fontified t)) #("Attempt to " 0 8 (fontified t) 8 11 (fontified t)) #("from" 0 4 (fontified t)) #("obtain more  " 0 7 (fontified t) 7 13 (fontified t)) #("Keep eyes open and " 0 5 (fontified t) 5 10 (fontified t) 10 15 (fontified t) 15 19 (fontified t)) #("coupling problem" 0 9 (fontified t) 9 16 (fontified t)) #("ability " 0 8 (fontified t)) #("moving boundary " 0 7 (fontified t) 7 16 (fontified t)) #("results matching" 0 8 (fontified t) 8 16 (fontified t)) #("Get further" 0 4 (fontified t) 4 11 (fontified t)) #("Wes/Tom/Chao) to pro" 0 4 (fontified t) 4 8 (fontified t) 8 12 (fontified t) 12 13 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 13 14 (fontified t) 14 17 (fontified t) 17 20 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) "Follow-up action items from our meeting were as follows:
1)      Cytonome (Etienne/Chris) to provide any possible open source software packages to be able to perform fluidic FEM modelling or equivalent
a.       OpenFoam: C++ toolbox for modeling
b.      Attending a free COMSOL workshop ((http://www.comsol.com/events) gets you a two-week trial version of all the physics module. You can attend as many workshop as you want and actually ask questions about specific modeling issue during the workshop. It’s not a long term solution but it’s suitable for quick turnaround problems.
2)      Cytonome (John S) to ask external consultant – Dean Barker – question as above and or difficulty and availability to perform particle orientation simulations – turns out (as expected) this is possible but very difficult – probably not affordable versus empirical studies in year 1 – our recommendation would be to fabricate and test experiementally and then possibly do some modelling in 2nd year
3)      Cytonome (Etienne/John) to provide back-up information on possible piezo elements for use with GigaSort-based manifold concept  - best suggestion we have come up with is: https://www.steminc.com/PZT/en/piezo-round-bimorph-actuator-for-pumps-27x05mm which is a bimorph piezo disk that provides 50-80um displacement, so with suitable mechanical amplification, a volume displacement within a cylindrical cavity will deflect the meniscus within a narrow channel by an expected/necessary 200-500+ um displacement sufficient to deflect particles of interest (and the bimorph nature would ultimately/potentially provide 2 way left/right sorting from the primary central channel)
4)      Cytonome (Etienne) to provide contact name (if there is one) for FineLine
                I don’t have a contact number but they are extremely responsive https://www.protolabs.com/additive-manufacturing
5)      PharmaSeq (Wes/Chao Lu) to provide data on valves and switching
6)      Next meeting to be held 13 January 3pm EST/14 January 9am NZT (invitation to follow – Etienne to set this up as John may be on the road) This has been set up for tomorrow Friday US time. I may be calling in via mobile (since it’s Saturday here and I will likely be at the beach with family)
 
Please reply all if I have made any mistakes or left items out.
 
Hope you all have a few days to catch up with family and or friends at some stage over the upcoming holidays. Looking forward to working with you all in 2016.
 
Thanks, and best regards,
 
John" "保险因为auto pay出了问题 没renew成功 但是保险公司提前寄来了卡 朋友以为一切ok
然后去办registration的时候dmv 说弄不了 驾照被吊销了 具体原因他们也不知道 回
来自己上dmv网站 还他妈得花钱 一查 是因为没有连续的保险 至于为什么没保险就吊
销驾照具体原因我也不清楚 可能是某些州必须只要车有注册就必须有连续保险 否则吊
销车主驾照？
按照dmv网站提示 后来又开了好几个小时车 去另一个城市类似citi hall那种地方专门
管车的部门 一个老太太有点糊涂 听那个样子是说不能那么简单就给恢复驾照 但是我
当时耍了个心眼 跟她说我们一直是有保险cover的 还给她看了保险公司给提前寄来的
那个保险卡 所以我们也不知道怎么回事就被弄成没保险了 装傻呗 那老太太一听 然后
看了看保险卡 在电脑上捣鼓两下 然后一切就都恢复了 没罚款 没上庭" "1. paid $200 to get my license and registration restored.
2. went to court, pleaed not guilty, spoke with the prosecutor, dismissed
two tickets (no insurance, no registration) and lowered the other one to
drive with an expired license. paid $139 fine.
now I am all clean. will switch from geico when I am not so busy. they did
not send me an email to let me know the payment did not go through." #("10
" 0 2 (fontified t) 2 3 (fontified t)) "10
不用担心 赶快续保险 想好理由解释为什么忘了, 上庭一般法官会放你一马
" #("
" 0 1 (fontified t)) "1
我的保险每半年续一次，设定的自动付款，所以平时也没管。这个月初偶然登陆保险网
站，才发现前一次付款因为信用卡有效期没有更新，付款没有通过，所以我在没有保险
的情况下开了快半年。发现情况我马上付了款，延续了保险。结果今天开在路上被警察
给拦了下来，因为我的驾照被吊销了。我向警察解释了情况，警察给了我三张单子，让
我两个礼拜后出庭。
请问这种情况该怎么处理，要请律师吗？明天我准备先去DMV争取把驾照和车辆注册的
事情给解决了。破财是难免的了，希望不会留下什么不良记录。" "车的保险单是2010年11月到2011年11月份的，但是后来因为车子故障维修，我就把保险在2011年4月份的时候取消了，不过保险单还留在自己手里" #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) "加洲沒買保險抓到三百五 四百左右

妳ㄉ情況 只有見法官 要求 減輕罰款

或分期繳 如果妳題分期繳通常法官會

給妳減輕罰款 " "即使你是當天早上11點去保的險,
保險公司也不能馬上啟動你的保險...
最快也要一個工作天,
也就是隔天你的保險才開始有效...
除非你是事前就已經填好所有的資料,
然後指定你要哪天開始生效你的保險...
所以照理來講雖然你是被抓當天保的險,
如果到時保險公司那裡的資料調出來是顯示你的保險要到隔天才開始生效的話,
那你在那天就是以無保險的身分在開車,
被抓到可不是小事...
我兩個朋友被抓過,
罰了$5,000,
隔年保費涨兩倍...

勸你還是乖一點,
出庭去跟法官講,
80%都會降低刑罰...
不過沒有保險開車本來就是你不對...
這點上面你很難說服法官...
所以還是準備一筆可觀的數字吧... " "我有两个建议,第一告票专家一定要找,我第一张告票就是没保险,当时在多伦多,找了一个专家,帮我搞定了,一分钱没罚.第二,下次再被警察要保险的时候千万别说没有,死都要说有,只是没带,最多给你一张几十元的罚单,事后交了钱就没事了,但真的撞车那就没哲了,没保险的朋友还是加紧尾巴做人,小心谨慎开车! " "At least, you need to buy the insurance ASAP to show you were planning for it. Ticket Expert may help you a little but don't expect too much - because this is a simple fact having no much \"reasonable\" excuse there." "https://www.youtube.com/watch?v=4aDEJNOkCyA" #(" https://www.youtube.com/watch?v=cxBFqPkoLt4" 0 1 (fontified t) 1 43 (fontified t) 43 44 (fontified t rear-nonsticky t)) "https://www.youtube.com/watch?v=cxBFqPkoLt4" "/Applications/Documents/Emacs.app/Contents/MacOS/bin/emacsclient --eval '(emms-previous)'" #("/Volumes/DATA/Applications/Library/Netease_Music/高梨康治_Kanashiki.Kako.mp3
" 0 72 (face emms-playlist-track-face emms-track (*track* (type . file) (name . "/Volumes/DATA/Applications/Library/Netease_Music/高梨康治_Kanashiki.Kako.mp3") (metadata) (info-mtime 22112 26346 0 0) (last-played 22170 40860 149227 0) (play-count . 1)) fontified t) 72 73 (fontified t)) #("/Volumes/DATA/Applications/Library/Netease_Music/高梨康治_Mahou.Hatsudou.mp3
" 0 72 (face emms-playlist-track-face emms-track (*track* (type . file) (name . "/Volumes/DATA/Applications/Library/Netease_Music/高梨康治_Mahou.Hatsudou.mp3") (metadata) (info-mtime 22112 26383 0 0) (last-played 22170 40862 676534 0) (play-count . 1)) fontified t) 72 73 (fontified t)) "/Applications/Documents/Emacs.app/Contents/MacOS/bin/emacsclient --eval '(emms-next)'" #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) "5" "/" "9" "8" "7" "3" "1" "  Noslip wall BC = True
" "  Noslip wall BC = True" "E
" "  Velocity 3 = 0
  Velocity 2 = 0
  Normal-Tangential Velocity = True
  External Pressure = 13789
E" "  Noslip wall BC = True" "External Pressure = 13789/2" "External Pressure = 13789/2" "P" #("case" 0 4 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) "Username : Chao
Password : Chao1042" #("/Volumes/DATA/Dro" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t)) #("~/Downloads/spacemacs-private/layers/" 0 37 (fontified t)) #("Downloads/spacemacs-private/layers/" 0 10 (fontified t) 10 20 (fontified t) 20 28 (fontified t) 28 35 (fontified t)) #("Downloads/spacemacs-private/" 0 10 (fontified t) 10 20 (fontified t) 20 28 (fontified t)) "https://github.com/CodeFalling/spacemacs-private.git" "git clone https://github.com/CodeFalling/spacemacs-private" "git clone https://github.com/CodeFalling/spacemacs-private ~/.spacemacs.d" "https://www.youtube.com/playlist?list=PLLVplP8OIVc8EktkrD3Q8td0GmId7DjW0" "https://www.youtube.com/watch?v=KbB0FjPg0mw&list=PLszwY6Kw2_n-GTrsUCnjli2Q3A6VxfVmk" "做个网站, 剪个视频, 设计个纪念衫" "60人的聚会怎么弄" "https://youtu.be/8WuirWi6sYI" #("wget -p -np -k -r  http://www.seitzman.gatech.edu/classes/ae6766/" 0 5 (fontified t) 5 7 (face font-lock-comment-face fontified t) 7 8 (fontified t) 8 11 (face font-lock-comment-face fontified t) 11 12 (fontified t) 12 14 (face font-lock-comment-face fontified t) 14 15 (fontified t) 15 17 (face font-lock-comment-face fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 64 (fontified t) 64 65 (rear-nonsticky t fontified t)) "http://www.seitzman.gatech.edu/classes/ae6766/" "5" "7" "5" "7" "
" "!! Inlet
Boundary Condition 12
  Target Boundaries(1) = 59
  Name = \"Inlet\"
  Normal-Tangential Velocity = True
  Velocity 2 = 0  
  Velocity 3 = 0
  External Pressure = 13789
End

!! Outlet Left
Boundary Condition 13
  Target Boundaries(1) = 62
  Name = \"Outlet left\"
  Normal-Tangential Velocity = True
  !External Pressure = 13789/2
  Velocity 2 = 0  
  Velocity 3 = 0
End

!! Outlet right
Boundary Condition 14
  Target Boundaries(1) = 63
  Name = \"Outlet right\"
  Normal-Tangential Velocity = True
  !External Pressure = 13789/2
  Velocity 2 = 0  
  Velocity 3 = 0
End

!! Control left
Boundary Condition 15
  Target Boundaries(1) = 61
  Name = \"Control left\"
  Normal-Tangential Velocity = True
  Velocity 1 = 0  
  Velocity 2 = 0  
  Velocity 3 = 0
End

!! Control right
Boundary Condition 16
  Target Boundaries(1) = 60
  Name = \"Control right\"
  Normal-Tangential Velocity = True
  Velocity 1 = 0  
  Velocity 2 = 0  
  Velocity 3 = 0
End
" "13789" "Pressure = 13789" #("  External Pressure = 0  
" 0 26 (yank-handler (evil-yank-line-handler))) #("  External Pressure = 0
" 0 24 (yank-handler (evil-yank-line-handler))) "
!! Outlet right" "  Velocity 1 = 0  " "  Velocity 2 = 0  " "Body 1" "

Body 1
  Target Bodies(1) = 46
  Name = \"Body 1\"
  Equation = 1
End

" "Body 1
  Target Bodies(1) = 26
  Name = \"Body 1\"
  Equation = 1
  Material = 1
End

" "

" "/// Control left
Boundary Condition 15
  Target Boundaries(1) = 62
  Name = \"Control left\"
  Normal-Tangential Velocity = True
  External Pressure = 0  
  Velocity 2 = 0  
  Velocity 3 = 0
End
" "right" "Outlet " "Right" "Outlet" "/// Outlet Right
Boundary Condition 14
  Target Boundaries(1) = 63
  Name = \"Outlet right\"
  Normal-Tangential Velocity = True
  External Pressure = 0  
  Velocity 2 = 0  
  Velocity 3 = 0
End
" "left" "Left" "/// Outlet Left
Boundary Condition 13
  Target Boundaries(1) = 62
  Name = \"Outlet left\"
  Normal-Tangential Velocity = True
  External Pressure = 0  
  Velocity 2 = 0  
  Velocity 3 = 0
End
" "  Velocity 2 = 0  
  Velocity 3 = 0" "13789" "  External Pressure = 13789" "13789" "3000" "BoundaryCondition 2" "
" "  Velocity 2 = 0" "  Normal-Tangential Velocity = True
" "E  
" "  Normal-Tangential Velocity = True
" "  Velocity 3 = 0
  Velocity 2 = 0
  Normal-Tangential Velocity = True
  External Pressure = 3000
E" "BoundaryCondition 1" "BoundaryCondition 2" "/// Inlet" "Boundary Condition 12
  Target Boundaries(1) = 50
  Name = \"BoundaryCondition 2\"
  Normal-Tangential Velocity = True
End
" "9" "Body 1
  Target Bodies(1) = 193
  Name = \"Body 1\"
  Equation = 1
  Material = 1
End

" "Equation 1
  Name = \"Equation 1\"
End

" "

Header
  CHECK KEYWORDS Warn
  Mesh DB \".\" \".\"
  Include Path \"\"
  Results Directory \"\"
End

Simulation
  Max Output Level = 4
  Coordinate System = Cartesian
  Coordinate Mapping(3) = 1 2 3
  Simulation Type = Steady state
  Steady State Max Iterations = 1
  Output Intervals = 1
  Timestepping Method = BDF
  BDF Order = 1
  Solver Input File = case.sif
  Post File = case.ep
End

Constants
  Gravity(4) = 0 -1 0 9.82
  Stefan Boltzmann = 5.67e-08
  Permittivity of Vacuum = 8.8542e-12
  Boltzmann Constant = 1.3807e-23
  Unit Charge = 1.602e-19
End

" "Header
  CHECK KEYWORDS Warn
  Mesh DB \".\" \".\"
  Include Path \"\"
  Results Directory \"\"
End

Simulation
  Max Output Level = 4
  Coordinate System = Cartesian
  Coordinate Mapping(3) = 1 2 3
  Simulation Type = Steady state
  Steady State Max Iterations = 1
  Output Intervals = 1
  Timestepping Method = BDF
  BDF Order = 1
  Solver Input File = case.sif
  Post File = case.ep
End

Constants
  Gravity(4) = 0 -1 0 9.82
  Stefan Boltzmann = 5.67e-08
  Permittivity of Vacuum = 8.8542e-12
  Boltzmann Constant = 1.3807e-23
  Unit Charge = 1.602e-19
End

Body 1
  Target Bodies(1) = 193
  Name = \"Body 1\"
  Equation = 1
  Material = 1
End

Solver 1
  Equation = Navier-Stokes
  Procedure = \"FlowSolve\" \"FlowSolver\"
  Variable = Flow Solution[Velocity:3 Pressure:1]
  Exec Solver = Always
  Stabilize = True
  Bubbles = False
  Lumped Mass Matrix = False
  Optimize Bandwidth = True
  Steady State Convergence Tolerance = 1.0e-5
  Nonlinear System Convergence Tolerance = 1.0e-7
  Nonlinear System Max Iterations = 20
  Nonlinear System Newton After Iterations = 3
  Nonlinear System Newton After Tolerance = 1.0e-3
  Nonlinear System Relaxation Factor = 1
  Linear System Solver = Iterative
  Linear System Iterative Method = BiCGStab
  Linear System Max Iterations = 20000
  Linear System Convergence Tolerance = 1.0e-4
  Linear System Preconditioning = ILU0
  Linear System ILUT Tolerance = 1.0e-3
  Linear System Abort Not Converged = False
  Linear System Residual Output = 1
  Linear System Precondition Recompute = 1
End

Equation 1
  Name = \"Equation 1\"
  Active Solvers(1) = 1
End

Material 1
  Name = \"Water (room temperature)\"
  Viscosity = 1.002e-3
  Heat expansion Coefficient = 0.207e-3
  Compressibility Model = Incompressible
  Heat Conductivity = 0.58
  Sound speed = 1497.0
  Heat Capacity = 4183.0
  Density = 998.3
End

" "Merge \"Simulation12" "Characteristic Length {17, 18, 19, 20} = .15;" "// Points of outlet 1" "Characteristic Length {11, 12, 14, 16} = .15;" "Characteristic Length {1, 3, 29, 30} = .15;" "// Points of Control 1" "5, 6, 7, 9" "Characteristic Length {5, 6, 7, 9} = .15;" "Characteristic Length {22} = .3;" "Characteristic Length {2} = .3;" "Characteristic Length {15} = .3;" "Characteristic Length {28} = .3;" "Characteristic Length {22} = .3;" "Characteristic Length {21} = .3;" "Top " "Characteristic Length {10} = .3;" "Characteristic Length {27} = .3;" "Characteristic Length {13} = .3;" "Characteristic Length {21} = .3;" "Characteristic Length {43, 44} = .3;" "Mesh.CharacteristicLengthFactor = 1.5;
Mesh.OptimizeNetgen = 1;
Mesh.ElementOrder = 0;
Mesh.Optimize = 0;" "https://www.youtube.com/playlist?list=PLlXfTHzgMRULkodlIEqfgTS-H1AY_bNtq" "https://www.youtube.com/watch?v=hiYgYWJEaMk&index=2&list=PLlXfTHzgMRULkodlIEqfgTS-H1AY_bNtq" "5" "1" #("Dropbox/.emacs.dz/spacemacs" 0 9 (face font-lock-string-face fontified t) 9 15 (fontified t face font-lock-string-face) 15 18 (face font-lock-string-face fontified t) 18 27 (face font-lock-string-face fontified t)) #("Dropbox/.emacs.dz/spacemacs" 0 9 (face font-lock-string-face fontified t) 9 15 (fontified t face font-lock-string-face) 15 18 (face font-lock-string-face fontified t) 18 27 (face font-lock-string-face fontified t)) #("(setq spacemacs-core-directory (concat \"~/Dropbox/.emacs.dz/spacemacs\" \"/cores\"))" 0 1 (rear-nonsticky t fontified t font-lock-face "rainbow-delimiters-depth-1-face") 1 31 (fontified t) 31 32 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 32 39 (fontified t) 39 70 (fontified t face font-lock-string-face) 70 71 (fontified t) 71 72 (fontified t face font-lock-string-face) 72 78 (action ac-start fontified t face font-lock-string-face) 78 79 (fontified t face font-lock-string-face) 79 80 (rear-nonsticky t fontified t font-lock-face "rainbow-delimiters-depth-2-face") 80 81 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t)) #("emacs" 0 5 (fontified t)) #("(setq user-emacs-directory spacemacs-directory)" 0 1 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t) 1 46 (fontified t) 46 47 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t)) #("\"~/Dropbox/.emacs.dz/spacemacs/\")" 0 32 (fontified t face font-lock-string-face) 32 33 (rear-nonsticky t fontified t font-lock-face "rainbow-delimiters-depth-1-face")) #("(setq spacemacs-directory \"~/Dropbox/.emacs.dz/spacemacs/\")" 0 1 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 1 26 (fontified t) 26 58 (fontified t face font-lock-string-face) 58 59 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t)) "1" "  External Pressure = 13789" "  Noslip wall BC = True" "  Noslip wall BC = True" "Boundary Condition 1
  Target Boundaries(1) = 268
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 2
  Target Boundaries(1) = 269
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 3
  Target Boundaries(1) = 270
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 4
  Target Boundaries(1) = 271
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 5
  Target Boundaries(1) = 272
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 6
  Target Boundaries(1) = 273
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 7
  Target Boundaries(1) = 276
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 8
  Target Boundaries(1) = 277
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 9
  Target Boundaries(1) = 278
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 10
  Target Boundaries(1) = 279
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 11
  Target Boundaries(1) = 280
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 12
  Target Boundaries(1) = 281
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 13
  Target Boundaries(1) = 282
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 14
  Target Boundaries(1) = 283
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 15
  Target Boundaries(1) = 216
  Name = \"BoundaryCondition 2\"
  Velocity 3 = 0
  Velocity 2 = 0
  Normal-Tangential Velocity = True
End

Boundary Condition 16
  Target Boundaries(1) = 284
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 17
  Target Boundaries(1) = 285
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 18
  Target Boundaries(1) = 218
  Name = \"BoundaryCondition 2\"
  Velocity 3 = 0
  Velocity 2 = 0
  Normal-Tangential Velocity = True
End

Boundary Condition 19
  Target Boundaries(1) = 286
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 20
  Target Boundaries(1) = 219
  Name = \"BoundaryCondition 2\"
  Velocity 3 = 0
  Velocity 2 = 0
  Normal-Tangential Velocity = True
End

Boundary Condition 21
  Target Boundaries(1) = 287
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 22
  Target Boundaries(1) = 220
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 23
  Target Boundaries(1) = 288
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 24
  Target Boundaries(1) = 221
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 25
  Target Boundaries(1) = 289
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 26
  Target Boundaries(1) = 222
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 27
  Target Boundaries(1) = 290
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 28
  Target Boundaries(1) = 223
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 29
  Target Boundaries(1) = 291
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 30
  Target Boundaries(1) = 224
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 31
  Target Boundaries(1) = 225
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 32
  Target Boundaries(1) = 226
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 33
  Target Boundaries(1) = 227
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 34
  Target Boundaries(1) = 228
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 35
  Target Boundaries(1) = 229
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 36
  Target Boundaries(1) = 230
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 37
  Target Boundaries(1) = 231
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 38
  Target Boundaries(1) = 232
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 39
  Target Boundaries(1) = 233
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 40
  Target Boundaries(1) = 234
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 41
  Target Boundaries(1) = 235
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 42
  Target Boundaries(1) = 236
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 43
  Target Boundaries(1) = 237
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 44
  Target Boundaries(1) = 238
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 45
  Target Boundaries(1) = 239
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 46
  Target Boundaries(1) = 240
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 47
  Target Boundaries(1) = 242
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 48
  Target Boundaries(1) = 243
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 49
  Target Boundaries(1) = 257
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 50
  Target Boundaries(1) = 258
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 51
  Target Boundaries(1) = 259
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 52
  Target Boundaries(1) = 260
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 53
  Target Boundaries(1) = 261
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 54
  Target Boundaries(1) = 194
  Name = \"BoundaryCondition 3\"
  Velocity 3 = 0
  Velocity 2 = 0
  Normal-Tangential Velocity = True
  External Pressure = 13789
End

Boundary Condition 55
  Target Boundaries(1) = 262
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 56
  Target Boundaries(1) = 263
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 57
  Target Boundaries(1) = 264
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 58
  Target Boundaries(1) = 265
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 59
  Target Boundaries(1) = 266
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 60
  Target Boundaries(1) = 267
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 61
  Target Boundaries(1) = 217
  Name = \"BoundaryCondition 2\"
  Velocity 3 = 0
  Velocity 2 = 0
  Normal-Tangential Velocity = True
End" "Boundary Condition 20
  Target Boundaries(1) = 219
  Name = \"BoundaryCondition 2\"
  Velocity 3 = 0
  Velocity 2 = 0
  Normal-Tangential Velocity = True
End" "Boundary Condition 1
  Target Boundaries(1) = 1
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 2
  Target Boundaries(1) = 2
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 3
  Target Boundaries(1) = 3
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 4
  Target Boundaries(1) = 4
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 5
  Target Boundaries(1) = 5
  Name = \"BoundaryCondition 3\"
  Velocity 3 = 0
  Velocity 2 = 0
  Normal-Tangential Velocity = True
End

Boundary Condition 6
  Target Boundaries(1) = 6
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 7
  Target Boundaries(1) = 7
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 8
  Target Boundaries(1) = 8
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 9
  Target Boundaries(1) = 9
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 10
  Target Boundaries(1) = 10
  Name = \"BoundaryCondition 2\"
  Velocity 3 = 0
  Velocity 2 = 0
  Normal-Tangential Velocity = True
  External Pressure = 13789
End
" "Boundary Condition 1
  Target Boundaries(1) = 1
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 2
  Target Boundaries(1) = 2
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 3
  Target Boundaries(1) = 3
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 4
  Target Boundaries(1) = 4
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End


Boundary Condition 6
  Target Boundaries(1) = 6
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 7
  Target Boundaries(1) = 7
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 8
  Target Boundaries(1) = 8
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End

Boundary Condition 9
  Target Boundaries(1) = 9
  Name = \"BoundaryCondition 1\"
  Noslip wall BC = True
End


! Inlet
Boundary Condition 1
  Target Boundaries(1) = 194
  Name = \"BoundaryCondition 2\"
  Velocity 3 = 0
  Velocity 2 = 0
  Normal-Tangential Velocity = True
  External Pressure = 13789
End

! Outlet
Boundary Condition 2
  Target Boundaries(1) = 
  Name = \"BoundaryCondition 3\"
  Velocity 3 = 0
  Velocity 2 = 0
  Normal-Tangential Velocity = True
End

" "Boundary Condition 5
  Target Boundaries(1) = 5
  Name = \"BoundaryCondition 3\"
  Velocity 3 = 0
  Velocity 2 = 0
  Normal-Tangential Velocity = True
End
" "
" "Characteristic Length {5, 6, 29, 30} = 0.15;" "Characteristic Length {1, 2, 35, 36} = 0.15;" "Characteristic Length {9, 10, 23, 24} = 0.15;" "Characteristic Length {49, 50, 51, 52} = 0.15;

" "Characteristic Length {49, 50, 51, 52} = 0.15;" "Characteristic Length {49, 50, 51, 52} = 0.15;" "Characteristic Length {41, 42} = .3;" "Characteristic Length {43, 44} = .2;" "“想你，但不打扰，静静地思念就好" "." "5" #("Sorter.base.for.Simulation5" 0 7 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 7 12 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 12 16 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 16 27 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("Sorter.base.for.Simulation5" 0 6 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 6 11 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name) 11 15 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 15 27 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) "Sorter.base.for.Simulation5" "Characteristic Length {43, 44} = .5;" "13, 14, 16, 15" "Characteristic Length {13, 14, 16, 15} = .5;" "Physical Surface(275) = {63};
" "

" "Physical Surface(290) = {27};
Physical Surface(291) = {28};" "Physical Surface(274) = {21};" "Physical Surface(241) = {11};
" "Mesh.CharacteristicLengthFactor = 2.5;
Mesh.OptimizeNetgen = 1;
Mesh.ElementOrder = 0;
Mesh.Optimize = 0;" "Physical Surface(281) = {65};
" "Physical Surface(281) = {65};" "
" "Physical Surface(244) = {40};
Physical Surface(245) = {4};
Physical Surface(246) = {1};
Physical Surface(247) = {46};
Physical Surface(248) = {3};
Physical Surface(249) = {42};
Physical Surface(250) = {2};" "Physical Surface(251) = {5};
Physical Surface(252) = {15};
Physical Surface(253) = {8};
Physical Surface(254) = {6};
Physical Surface(255) = {12};" "Physical Surface(195) = {9};
Physical Surface(196) = {65};
Physical Surface(197) = {21};
Physical Surface(198) = {49};
Physical Surface(199) = {57};
Physical Surface(200) = {20};
Physical Surface(201) = {63};
Physical Surface(202) = {62};
Physical Surface(203) = {64};
Physical Surface(204) = {59};
Physical Surface(205) = {47};
Physical Surface(206) = {49};
Physical Surface(207) = {48};
Physical Surface(208) = {50};
Physical Surface(209) = {51};
Physical Surface(210) = {52};
Physical Surface(211) = {53};
Physical Surface(212) = {54};
Physical Surface(213) = {21};
Physical Surface(214) = {56};
Physical Surface(215) = {57};
" #("Private" 0 7 (face diredp-dir-priv fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) #("- PKU-ACM" 0 9 (org-category-position 53277 org-category #("Coding" 0 6 (org-category-position 52917 org-category #("DUALLY" 0 6 (org-category "iPrv" face org-property-value fontified t)) face org-property-value fontified t)) fontified t)) #("LIBNS/PORTS/" 0 6 (fontified t) 6 12 (fontified t)) #("PORTS/DOWNLOAD/" 0 6 (fontified t) 6 15 (fontified t)) "http://www.bilibili.com/video/av3540096/" #("Manual" 0 6 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv)) #("工具书" 0 3 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv)) #("其他" 0 2 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv)) #("历史" 0 2 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv)) #("政治哲学社科" 0 6 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv)) #("自然科学" 0 4 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv)) #("文化人文" 0 4 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv)) #("其他译作" 0 4 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv)) #("英文版" 0 3 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv)) #("经济学" 0 3 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv)) #("艺术" 0 2 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv)) #("、索引、书目、年谱" 0 9 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv)) #("/Volumes/LIBNS/PORTS/BAIDU_SYNC/工具书、索引、书目、年谱/书目/民国时期总书目/" 0 56 (fontified t)) #("/Volumes/LIBNS/PORTS/BAIDU_SYNC/工具书、索引、书目、年谱/书目/出版社书目/上海古籍出版社/" 0 62 (fontified t)) #("/Volumes/LIBNS/PORTS/BAIDU_SYNC/阅读器等工具/英文版/" 0 43 (fontified t)) #("/Volumes/LIBNS/PORTS/BAIDU_SYNC/阅读器等工具/英文版/杂志/Playboy/" 0 54 (fontified t)) "I have a broad range of software development experience which includes desktop applications, server and web programming, firmware and FPGA coding, and website design. Much of my work the past several years has been on scientific instrumentation with real-time requirements for control, data collection and analysis. I consider my current speciality to be the Clojure programming language which has allowed me to deliver sophisticated, high performance and maintainable instrumentation software in record time.

I have almost 10 years of experience writing C++, C, and C#/.NET code. I have been writing software in Clojure professionally for the past 2 years. Being somewhat of a language geek, at various times I have also worked with Javascript, HTML/CSS, Coffeescript, F#, Java, PHP, D, AHDL, Verilog, Assembly, Python, Ruby, R, Matlab, and Labview, .

I like to write my own tools and contribute to open source. Please check me out on GitHub: https://github.com/aaronc/

---

In my \"other\" life, I have been studying Tai Chi for almost 12 years, practicing meditation for about 15 and teaching for about 7. I'm also a Yoga instructor, have been playing music (cello and guitar) for more than 25 years, speak Spanish, French and Portuguese, and have strong interests in sustainability and community building." "据说雅培(similac), 美赞臣(enfamil)的好像都不错, 我去店里看看. 然后现在家里地址用哪个?" "小姨, 查好了. 我准备去个这边的Costco买, 然后寄回去. 如果海关那能过就没问题." "https://ircalc.usps.com/?country=10063" "关于如何购买奶粉及邮寄回国 -陈晓婷

家有二侄已四月，奶粉的需求量是大大的，于是每个月总有那么几天，要忍痛割爱地去各大超市淘货，给小家伙快递口粮。

由于宝贝的不挑食，让我在选择空间上大了很多，也会换着品牌的给他买，原则就是哪个打折买哪个。游离于雅培（similac）,美赞臣（enfamil）和雀巢旗下的嘉宝（gerber）三大品牌之间。从质量上来说，无优劣之分，全在个人偏好或者宝宝口味。注：但听说有滴宝宝吃乐一个品牌后， 就不稀饭换； 甚至就是宁可不吃不喝也不愿改滴。

奶粉一般分为三段，0-12月为一段，价钱较贵，9-24月为二段，24月以上三段。三大品牌应该都有，因为我的囤货美赞臣居多，没太注意其他两家二三段的产品。

介于我家的需求量和价钱，有时候会力不从心，于是跑到mitbbs的我爱宝宝版上购买别人用不完的奶票或coupon,通常交易价钱为面值的一般，这样就可以一罐节省四五刀，再加上购买时吐给我的代金券，可以小剩一笔。超市也会时不时地发行自己的coupon,可关注下广告页或者网站信息。像publix, walmart, target, babyrus, toyrus , cvs，amazon都会有。当然大爱还是cosco.

通常会购买650克左右一桶的奶粉，因为比较来比较去，邮费更让我头痛。如何省钱更是让我做了不少功课。结论是选择邮局的flat rate box, 最便宜的服务，免费拿一个小箱子，合理利用，可以塞满六罐 (这个数量是本人邮寄中顺利过关滴经验。罐有大小，请验查具体海关条律，做到遵纪守法)，6-10个工作日可到中国，然后转国内ems,两个周左右基本全国各地可至。费用大体是七十几刀。–> 网页

填写地址时找个可以写的地方，将中文一并写上，以免转运过程出现差错。希望一切顺利哈!

更多关于奶粉知识, 请参见: 婴儿奶粉的小知识" "http://www.chexusa.com/index.php/2013-08-08-06-59-08/2-2012-10-07-18-37-02/-faq/203-2012-09-22-14-18-29" "我就寄过两次，都是用US Postal Service.用的priority mail。其中一次弄丢（百分
之五十的机率，有木有！！！），自己没留收据，损失近三百刀。什么邮寄方式又保险
又不太贵？" "国内一个大学同学，大学时呢关系一般，他住我隔壁寝室，平时只是开开玩笑，我出国
以后多年没联系，最近一两年，他家孩子要吃奶粉，所以让我在美国代购寄回去，每次
都是买10-12桶奶粉，分两箱寄回；

算上最近一次的邮寄，一共给他代购了4次；每次的奶粉钱，运费加起来大概由360刀的
样子" #("给末末买奶粉" 0 6 (fontified t org-todo-head #("QUEUE" 0 5 (face (:foreground "Lavender" :weight bold))) face org-level-3)) "AmazonGlobal Eligible" "https://github.com/syl20bnr/spacemacs.git" #("(转载) 	2012-03-23 21:56:53 		" 0 1 (fontified t face org-level-3 font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 1 3 (fontified t face org-level-3) 3 4 (fontified t face org-level-3 font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 4 28 (fontified t face org-level-3)) #("- See more at: http://blog.creaders.net/u/6021/201203/107455.html#sthash.rY5sRMNO.dpuf" 0 15 (fontified t) 15 85 (htmlize-link (:uri "http://blog.creaders.net/u/6021/201203/107455.html#sthash.rY5sRMNO.dpuf") fontified t org-no-flyspell t mouse-face highlight face org-link keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 85 86 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "http://blog.creaders.net/u/6021/201203/107455.html#sthash.rY5sRMNO.dpuf") fontified t org-no-flyspell t mouse-face highlight face org-link keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)))) "天朝奸相温家宝列传（转载） 	2012-03-23 21:56:53 		
		
	温家宝者，天津北辰人，自言其书香门第，家世清白。然查其族人温世珍为日据时伪天津市长，宝之父祖其时多承其恩惠。光复后，世珍先为国民政府拿获，家产抄没，后为人民政府公审枪决。宝之父祖以附逆受牵连，宝时虽童稚，口不能言，然恨滋于心矣。 

太祖建国21年，宝入京师学堂学质地勘探，文革二年，赴甘陕采矿。默默无闻十余年，至改开元年，官方至九品。

改开元年，耀邦苦中央财政困乏，大兴矿山，号“有水快流”。宝大力推行之，甚得改开派欢心。数年间连升五级，至地矿部政治部主任。宝以耀邦知遇之恩，遂力行耀邦之政，为耀邦腹心。当是时，中宗皇帝在甘陕经年。耀邦私授在京城传谣：以中宗皇帝修水利，宝修地质为名，并称中宗皇帝与宝为“山水神童”，闻者莫解其意。

改开6年，太宗夜召宝桥牌，已而从容谓宝曰：君为耀邦，为党耶？宝惊对曰：唯上皇马首是瞻。太宗甚喜，赠宝直奏之权，寻迁宝中央办公厅主任。宝跪安趋出，出中南海新华门，不觉汗已透背。自是宝常入中南海太宗处陪侍，监国书记处大小是非，太宗尽知之。

改开七年，太宗废耀邦，宝自以耀邦余党，裸袒至中南海太宗处自述。太宗宽慰之，仍予直奏之权，以宝为书记处耳目，宝亦尽心竭力。

改开十年，贪腐横行，民怨沸腾，太宗召禁军进京师勤王。监国紫阳谋反，阴与万里、宝谋阻禁军，宝阳许之，飞报太宗先发其谋。太宗圈禁紫阳，甚嘉许宝。

改开十八年，太宗皇帝疾笃，召宝之病榻之前，亲许阁相之位。

中宗和谐元年，宝拜相，以国用不充，遂授意中央地方卖地，府库充盈，然地价飞涨，民甚苦之。

宝喜灾祸，凡有大灾，交通阻断，物资军队急不可入之时，宝必亲帅随从直趋慰苦民众，辄曰：吾晚矣！民每为之敝，久而方觉，号之“影帝”，言其善为戏子尔。

宝不读书，引喻常失其意，众莫衷一是。又雅好诗词，每引离骚之辞，众则疑其官运不久所然，寻又迁。久而乃知其乱吟尔，皆暗笑之。宝常自许“苟利国家生死以，岂因祸福避趋之”。有好事者断其句为“苟利，国家生死以，岂因，祸福避趋之！”

宝好破鞋蓑衣，炊于农家，以为乐。其妻好珠宝，收藏巨万，奇珍异宝，堪比石崇。 其子“新天域”，聚敛亿万，时人莫不侧目。宝任期将满，急敕有司曰：本相未了之事，不可遗之后人！有司心领神会，乃授其子卫通巡抚。

宝为官三十余载，以事太宗而入阁，历经三朝而不倒，人称“政坛不倒翁”。宝又以房产牟利，家私亿万，民谣曰“房价高涨温家饱”。为政以来，朝廷以贪墨谄媚为能事，奸恶贪婪之徒，充斥庙堂；忠直干练之士，往往免退。

和谐八年，铁道部尚书刘志军勇于任事，不避艰难。宝嫉恨之，寻以事下狱。

平西王薄公以亲贵督西南事，以太祖思想为号召，轻徭薄役，勤政爱民，数年间农战并修，政声鹊起。宝亦疾之，苦无对策，久乃污平西王谋反。

其时中宗无他长，秉国近十载，无善迹可陈；惟不动声色，做不偏不倚不左不右之状；外宽而内深，亦畏嫉薄公。时西蕃花旗国欲图我华夏久矣，甚畏薄公之胆识，此皆宝之熟知者也。宝乃勾连其间，暗室密谋，设“误入白虎堂”之局，诱薄公之亲信王捕头入花旗国领馆，拘之，旋污薄公意图非分。和谐九年春，薄公免，昏君奸相夷狄快意，而天下忠臣志士莫不切齿。

红朝奸相，前称刘邓，后称朱温；祸乱国家，中饱私囊；太祖之政，至此糜烂矣。
- See more at: http://blog.creaders.net/u/6021/201203/107455.html#sthash.rY5sRMNO.dpuf" #("," 0 1 (fontified t org-category "iPrv")) #("dylrin1986@gmail.com," 0 21 (fontified t)) #("princebia10," 0 12 (fontified t)) #("(setq dired-details-hidden-string \"[ ... ] \")" 0 1 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t face font-lock-comment-face) 1 34 (fontified t face font-lock-comment-face) 34 44 (fontified t face font-lock-comment-face) 44 45 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t face font-lock-comment-face)) "http://video.dispatch.tc.qq.com/6619950/b0018nsz6fl.flv?sdtfrom=v1000&vkey=376CA0F13E81953FFFE76D0B8B3F7A04A6FF822C74E6A0247E99F4136E3CC17D3AB0DE2228C4E5A2A6A1062EFBA820EA1AB7CD94A5C3426178EF87156CC74E0125925D21367E4E8949ECBFA6D3B35A34A9B6E49A01D65254&level=0&platform=10902&br=128&fmt=flv&sp=0&guid=1305418C1CE4D30395458A3AC2C7E4D2F97982E7" #("Manifold" 0 8 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) "e" "s" "a" "c" "case" #("/opt/local/libexec/Elmer_devel_12-22-15/bin/ElmerSolver " 0 56 (fontified t front-sticky (field inhibit-line-move-field-capture) rear-nonsticky t field output inhibit-line-move-field-capture t)) "1 2 3 4 6 7 8 9" "13, 14, 16, 15, " ", 6, 8, 5, 7, 9, 10, 11, 12, 4, 1, 2, 3" "Characteristic Length {13, 14, 16, 15, 6, 8, 5, 7, 9, 10, 11, 12, 4, 1, 2, 3} = .3;" "Physical Surface(37) = {4, 5};
" "Physical Surface(25) = {10, 5};
Physical Surface(27) = {7, 3, 4, 6, 2, 8, 1, 9};
" #("SquareInlet_Gmsh_NOTWork/" 0 12 (fontified t) 12 17 (fontified t) 17 25 (fontified t)) "Manifold8" #("/opt/local/libexec/Elmer_devel_12-22-15/bin/ElmerGrid 14 2 Manifold7" 0 16 (fontified t front-sticky (field inhibit-line-move-field-capture) rear-nonsticky t field output inhibit-line-move-field-capture t) 16 68 (fontified t front-sticky (field inhibit-line-move-field-capture) rear-nonsticky t field output inhibit-line-move-field-capture t)) #("/opt/local/libexec/Elmer_devel_12-22-15/bin/ElmerSolver " 0 56 (fontified t front-sticky (field inhibit-line-move-field-capture) rear-nonsticky t field output inhibit-line-move-field-capture t)) "6, 8, 5, 7, 9, 10, 11, 12, 4, 1, 2, 3" "13, 14, 1" "Characteristic Length {13, 14, 16, 15} = 1;" "6, 8, 5, 7, 9, 10, 11, 12, 4, 1, 2, 3" #("SquareInlet_Gmsh/" 0 12 (fontified t) 12 17 (fontified t)) "我学他这样走，一晚上被打了32次" #("
" 0 1 (fontified t)) #("013987000684111" 0 15 (fontified t)) "2027479526" #("dylrin1986@gmail.com" 0 20 (fontified t)) #("princebia10" 0 11 (fontified t)) #("2 Manifold7.msh" 0 2 (fontified t) 2 12 (fontified t) 12 15 (fontified t)) #("/opt/local/libexec/Elmer_devel_12-22-15/bin/ElmerGrid 14 2 Manifold7.msh" 0 72 (fontified t)) "case" #("Velocity 1 = Real -0.001
" 0 25 (yank-handler (evil-yank-line-handler))) "4" "Physical Volume(28) = {1};
" "Physical Surface(27) = {7, 3, 4, 6, 2, 8, 5, 1, 9};" "Characteristic Length {13, 14, 16, 15, 6, 8, 5, 7, 9, 10, 11, 12, 4, 1, 2, 3} = 0.15;" "Mesh.ElementOrder = 0;
Mesh.Optimize = 0;" "" "a" "Mesh.CharacteristicLengthFactor = .1;
Mesh.OptimiazeNetgen = 1;" #("FineMesh" 0 8 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-dir-priv)) #("spacemacs/system-is-linux" 0 10 (fontified t) 10 17 (fontified t) 17 20 (fontified t) 20 25 (fontified t)) #("spacemacs/system-is-mac" 0 10 (fontified t) 10 17 (fontified t) 17 20 (fontified t) 20 23 (fontified t)) #("spacemacs/system-is-mswindows" 0 10 (fontified t) 10 17 (fontified t) 17 20 (fontified t) 20 29 (fontified t)) "Header

Mesh DB \".\" \".\"       

End

Constants

End


Simulation
  
Coordinate System = Cartesian 3D  
Simulation Type = Steady State
Steady State Max Iterations = 30
Steady State Min Iterations = 1
Output Intervals = 1
Post File = \"Manifold.ep\"

End



Material 1

Name = \"Water (room temperature)\"
Viscosity = Real 1.002e-3
Density = Real 998.3 
   
End


Solver 1
  
Equation = Navier-Stokes
Stabilize = True
!Linear System Solver = Iterative
Linear System Solver = Direct
Linear System Iterative Method = BiCGStab
Linear System Preconditioning = ILU1
Linear System Max Iterations = 500
Linear System Convergence Tolerance = 1.0e-4
Linear System Abort Not Converged = True
Linear System Residual Output = 1
Steady State Convergence Tolerance = 1e-5
Nonlinear System Max Iterations = 15
Nonlinear System Convergence Tolerance = 1.0e-04
Nonlinear System Newton After Tolerance = 1.0e-05
Nonlinear System Newton After Iterations = 10
Nonlinear System Relaxation Factor = 1.0

End

Body 1
Name = \"fluid\"
Equation = 1
Material = 1
End

Equation 1
  
Active Solvers(1) = 1  
End

! Inlet
! If use Normal-Tangential coordinate, 
! velocity 1 refers to the velocity
! component perpendicular to the surface.
! minus value means inlet
Boundary Condition 1

Target Boundaries = 10
Normal-Tangential Velocity = True
! Velocity 1 = Real -0.001
Velocity 2 = Real 0.00
Velocity 3 = Real 0.00

! 2pi = 13789 Pa (Pa SCI units)
External Pressure = 13789.5
End

! Outlet
Boundary Condition 2
  
Normal-Tangential Velocity = True
Target Boundaries = 5
Velocity 2 = Real 0.00
Velocity 3 = Real 0.00
External Pressure = 0.0
  
End

! Wall 
Boundary Condition 3

Normal-Tangential Velocity = False  
Target Boundaries = 1 2 3 4 6 7 8 9

Velocity 1 = Real 0.0
Velocity 2 = Real 0.0
Velocity 3 = Real 0.0  
End



" #("1, 2, 3, 4, 5, 6, 7, 8, 9]" 0 25 (inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky (field inhibit-line-move-field-capture) fontified t) 25 26 (inhibit-line-move-field-capture t field output front-sticky (field inhibit-line-move-field-capture) rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t)) "2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 20 23" "10 19 21 22" "1 24" #("SquareInlet" 0 11 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) "https://github.com/syl20bnr/spacemacs/blob/master/doc/DOCUMENTATION.org" #(";; As has a multi-functional buffer
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 35 (face font-lock-comment-face fontified t) 35 36 (fontified t)) #("FIXME -- get inspiration" 0 5 (face font-lock-fixme-face fontified t) 5 9 (face font-lock-comment-face fontified t) 9 13 (fontified t face font-lock-comment-face) 13 24 (fontified t face font-lock-comment-face)) #("
" 0 1 (rear-nonsticky t fontified t)) #("(defconst spacemacs-buffer-name \"*spacemacs*\"
  \"The name of the spacemacs buffer.\")

(defconst spacemacs-buffer--banner-length 75
  \"Width of a banner.\")

(defconst spacemacs-buffer--cache-file
  (expand-file-name (concat spacemacs-cache-directory \"spacemacs-buffer.el\"))
  \"Cache file for various persistent data for the spacemacs startup buffer\")

(defvar spacemacs-buffer--release-note-version nil
  \"If nil the release note is displayed. If non nil it contains
a version number, if the version number is lesser than the current
version the release note it displayed\")

(defvar spacemacs-buffer--note-widgets nil
  \"List of widgets used to display the release note.\")

(defvar spacemacs-buffer--previous-insert-type nil
  \"Previous type of note inserted.\")

(defun spacemacs-buffer/insert-banner-and-buttons ()
  \"Choose a banner according to `dotspacemacs-startup-banner'and insert it
in spacemacs buffer along with quick buttons underneath.

Easter egg:
Doge special text banner can be reachable via `999', `doge' or `random*'.
`random' ignore special banners whereas `random*' does not.\"
  (let ((banner (spacemacs-buffer//choose-banner))
        (buffer-read-only nil))
    (progn
      (when banner
        (spacemacs-buffer/message (format \"Banner: %s\" banner))
        (if (image-type-available-p (intern (file-name-extension banner)))
            (spacemacs-buffer//insert-image-banner banner)
          (insert-file-contents banner))
        (spacemacs-buffer//inject-version))
      (spacemacs-buffer//insert-buttons)
      (if (file-exists-p spacemacs-buffer--cache-file)
          (load spacemacs-buffer--cache-file)
        (unless (file-exists-p dotspacemacs-filepath)
          ;; fresh install of spacemacs, the release notes are not displayed
          (setq spacemacs-buffer--release-note-version spacemacs-version)
          (spacemacs/dump-vars-to-file
           '(spacemacs-buffer--release-note-version) spacemacs-buffer--cache-file)))
      ;; if there is an installed dotfile we check the variable
      ;; spacemacs-buffer--release-note-version to decide whether
      ;; we show the release note
      (when (and (file-exists-p dotspacemacs-filepath)
                 (or (not spacemacs-buffer--release-note-version)
                     (version< spacemacs-buffer--release-note-version
                               spacemacs-version)))
        (spacemacs-buffer/toggle-note (concat spacemacs-release-notes-directory \"0.104.txt\")
                                      'release-note))
      (spacemacs//redisplay))))

(defun spacemacs-buffer//choose-banner ()
  \"Return the full path of a banner based on the dotfile value.\"
  (when dotspacemacs-startup-banner
    (cond ((eq 'official dotspacemacs-startup-banner)
           (if (and (display-graphic-p) (image-type-available-p 'png))
               spacemacs-banner-official-png
             (spacemacs-buffer//get-banner-path 1)))
          ((eq 'random dotspacemacs-startup-banner)
           (spacemacs-buffer//choose-random-text-banner))
          ((eq 'random* dotspacemacs-startup-banner)
           (spacemacs-buffer//choose-random-text-banner t))
          ((eq 'doge dotspacemacs-startup-banner)
           (spacemacs-buffer//get-banner-path 999))
          ((integerp dotspacemacs-startup-banner)
           (spacemacs-buffer//get-banner-path dotspacemacs-startup-banner))
          ((and dotspacemacs-startup-banner
                (image-type-available-p (intern (file-name-extension
                                                 dotspacemacs-startup-banner)))
                (display-graphic-p))
           (if (file-exists-p dotspacemacs-startup-banner)
               dotspacemacs-startup-banner
             (spacemacs-buffer/warning (format \"could not find banner %s\"
                                               dotspacemacs-startup-banner))
             (spacemacs-buffer//get-banner-path 1)))
          (t (spacemacs-buffer//get-banner-path 1)))))

(defun spacemacs-buffer//choose-random-text-banner (&optional all)
  \"Return the full path of a banner chosen randomly.

If ALL is non-nil then truly all banners can be selected.\"
  (let* ((files (directory-files spacemacs-banner-directory t))
         (count (length files))
         ;; -2 then +2 to remove `.' and `..'
         (choice (+ 2 (random (- count (if all 2 3))))))
    (nth choice files)))

(defun spacemacs-buffer//get-banner-path (index)
  \"Return the full path to banner with index INDEX.\"
  (concat spacemacs-banner-directory (format \"%03d-banner.txt\" index)))

(defun spacemacs-buffer//insert-image-banner (banner)
  \"Display an image banner.\"
  (when (file-exists-p banner)
    (let* ((title \"[S P A C E M A C S]\")
           (spec (create-image banner))
           (size (image-size spec))
           (width (car size))
           (left-margin (floor (- spacemacs-buffer--banner-length width) 2)))
      (beginning-of-buffer)
      (insert \"\\n\")
      (insert (make-string (- left-margin 1) ?\\ ))
      (insert-image spec)
      (insert \"\\n\\n\")
      (insert (make-string (+ left-margin
                              (floor (/ (- width (length title)) 2))) ?\\ ))
      (insert (format \"%s\\n\\n\" title)))))

(defun spacemacs-buffer//inject-version (&optional insert-distro)
  \"Inject the current version of spacemacs in the first line of the
buffer, right justified.\"
  (with-current-buffer (get-buffer-create \"*spacemacs*\")
    (save-excursion
      (let* ((maxcol spacemacs-buffer--banner-length)
             (injected (if insert-distro
                           (format \"(%s-%s)\"
                                   dotspacemacs-distribution
                                   spacemacs-version)
                         (format \"(%s)\" spacemacs-version)))
             (pos (- maxcol (length injected)))
             (buffer-read-only nil))
        ;; reset first line
        (beginning-of-buffer)
        (let ((buffer-read-only nil))
          (end-of-line)
          (kill-line (- maxcol)))
        (beginning-of-buffer)
        ;; fill the first line with spaces if required
        (when (< (line-end-position) maxcol)
          (end-of-line)
          (insert-char ?\\s (- maxcol (line-end-position))))
        (goto-char pos)
        (delete-char (length injected))
        (insert injected)))))

(defun spacemacs-buffer//insert-note (file caption &optional additional-widgets)
  \"Insert the release note just under the banner.

FILE is the file that contains the content to show.
CAPTION is the title of the note.
TAG-STRING is the label of the button for additional action.
HELP-STRING is the help message of the button for additional action.\"
  (save-excursion
    (beginning-of-buffer)
    (search-forward \"Spacemacs\\]\")
    (next-line)
    (let* ((note (concat \"\\n\" (spacemacs//render-framed-text file
                                                             spacemacs-buffer--banner-length
                                                             caption))))
      (add-to-list 'spacemacs-buffer--note-widgets (widget-create 'text note))
      (funcall additional-widgets))))

(defun spacemacs-buffer//insert-note-p (type)
  \"Decicde if whether to insert note widget or not based on current note TYPE.

If note TYPE is `quickhelp' or `release-note' and is equal to
previous insert type in `spacemacs-buffer--previous-insert-type',
which means previous note widget of the same type already
inserted. In this case, we simply delete the widgets but don't insert.

Otherwise, delete and allow insert note of TYPE.\"
  (if (not (eq spacemacs-buffer--previous-insert-type type))
      type
    (setq spacemacs-buffer--previous-insert-type nil)))

(defun spacemacs-buffer/toggle-note (file type)
  \"Toggle the note in FILE for the buffer based on TYPE.

If TYPE is nil, just remove widgets.\"
  (interactive)
  (spacemacs-buffer//remove-existing-widget-if-exist)
  (cond
   ((eq type 'quickhelp)
    (spacemacs-buffer//insert-quickhelp-widget file))
   ((eq type 'release-note)
    (spacemacs-buffer//insert-release-note-widget file))
   (t)))

(defun spacemacs-buffer//remove-existing-widget-if-exist ()
  \"Remove existing note widgets if exists.\"
  (when spacemacs-buffer--note-widgets
    (spacemacs-buffer//remove-note-widgets)))

(defun spacemacs-buffer//insert-quickhelp-widget (file)
  \"Insert quickhelp with content from FILE.\"
  (spacemacs-buffer//remove-existing-widget-if-exist)
  (let ((widget-func (lambda ()
                       (add-to-list 'spacemacs-buffer--note-widgets
                                    (widget-create 'push-button
                                                   :tag (propertize \"Evil Tutorial\" 'face 'font-lock-keyword-face)
                                                   :help-echo \"Teach you how to use Vim basics.\"
                                                   :action (lambda (&rest ignore) (call-interactively #'evil-tutor-start))
                                                   :mouse-face 'highlight
                                                   :follow-link \"\\C-m\"))
                       (widget-insert \" \")
                       (add-to-list 'spacemacs-buffer--note-widgets
                                    (widget-create 'push-button
                                                   :tag (propertize \"Emacs Tutorial\" 'face 'font-lock-keyword-face)
                                                   :help-echo \"Teach you how to use Emacs basics.\"
                                                   :action (lambda (&rest ignore) (call-interactively #'help-with-tutorial))
                                                   :mouse-face 'highlight
                                                   :follow-link \"\\C-m\"))
                       (widget-insert \" \")
                       (add-to-list 'spacemacs-buffer--note-widgets
                                    (widget-create 'push-button
                                                   :tag (propertize \"Vim Migration Guide\" 'face 'font-lock-keyword-face)
                                                   :help-echo \"Documentation for former vim users.\"
                                                   :action (lambda (&rest ignore) (spacemacs/view-org-file (concat spacemacs-docs-directory \"VIMUSERS.org\") \"^\" 'all))
                                                   :mouse-face 'highlight
                                                   :follow-link \"\\C-m\")))))
    (spacemacs-buffer//insert-note file \"Quick Help\" widget-func))
  (setq spacemacs-buffer--previous-insert-type 'quickhelp))

(defun spacemacs-buffer//insert-release-note-widget (file)
  \"Insert release note with content from FILE.\"
  (spacemacs-buffer//remove-existing-widget-if-exist)
  (let ((widget-func (lambda ()
                       (add-to-list 'spacemacs-buffer--note-widgets
                                    (widget-create 'push-button
                                                   :tag (propertize \"Click here for full change log\" 'face 'font-lock-warning-face)
                                                   :help-echo \"Open the full change log.\"
                                                   :action (lambda (&rest ignore)
                                                             (funcall 'spacemacs/view-org-file
                                                                      (concat user-emacs-directory \"CHANGELOG.org\")
                                                                      \"Release 0.104.x\"
                                                                      'subtree))
                                                   :mouse-face 'highlight
                                                   :follow-link \"\\C-m\")))))
    (spacemacs-buffer//insert-note file
                                   \" Important Notes (Release 0.104.x) \"
                                   widget-func))

  (setq spacemacs-buffer--release-note-version nil)
  (spacemacs/dump-vars-to-file
   '(spacemacs-buffer--release-note-version) spacemacs-buffer--cache-file)
  (setq spacemacs-buffer--previous-insert-type 'release-note))

(defun spacemacs-buffer//remove-note-widgets ()
  (mapc 'widget-delete spacemacs-buffer--note-widgets)
  (setq spacemacs-buffer--note-widgets nil)
  (setq spacemacs-buffer--release-note-version spacemacs-version)
  (spacemacs/dump-vars-to-file
   '(spacemacs-buffer--release-note-version) spacemacs-buffer--cache-file))

(defun spacemacs-buffer/set-mode-line (format)
  \"Set mode-line format for spacemacs buffer.\"
  (with-current-buffer (get-buffer-create \"*spacemacs*\")
    (setq mode-line-format format)))

(defun spacemacs-buffer/message (msg &rest args)
  \"Display MSG in message prepended with '(Spacemacs)'.
The message is displayed only if `dotspacemacs-verbose-loading' is non nil.\"
  (when dotspacemacs-verbose-loading
    (message \"(Spacemacs) %s\" (apply 'format msg args))))

(defun spacemacs-buffer/warning (msg &rest args)
  \"Display MSG as a warning message but in buffer `*Messages*'.
The message is always displayed. \"
  (message \"(Spacemacs) Warning: %s\" (apply 'format msg args)))

(defun spacemacs-buffer/insert-page-break ()
  \"Insert a page break line in spacemacs buffer.\"
  (spacemacs-buffer/append \"\\n\\n\\n\"))

(defun spacemacs-buffer/append (msg &optional messagebuf)
  \"Append MSG to spacemacs buffer. If MESSAGEBUF is not nil then MSG is
 also written in message buffer.\"
  (with-current-buffer (get-buffer-create \"*spacemacs*\")
    (goto-char (point-max))
    (let ((buffer-read-only nil))
      (insert msg)
      (if messagebuf (message \"(Spacemacs) %s\" msg)))
    (spacemacs-buffer/set-mode-line \"\")))

(defun spacemacs-buffer/replace-last-line (msg &optional messagebuf)
  \"Replace the last line of the spacemacs buffer with MSG. If MESSAGEBUF is
 not nil then MSG is also written in message buffer.\"
  (with-current-buffer (get-buffer-create \"*spacemacs*\")
    (goto-char (point-max))
    (let ((buffer-read-only nil))
      (delete-region (line-beginning-position) (point-max))
      (insert msg)
      (if messagebuf (message \"(Spacemacs) %s\" msg)))
    (spacemacs-buffer/set-mode-line \"\")))

(defun spacemacs-buffer/insert-framed-text
    (msg &optional caption hpadding)
  \"Insert MSG in spacemacs buffer within a frame of width FILL-COLUMN.

See `spacemacs//render-framed-text' for documentation of the other
parameters.\"
  (with-current-buffer (get-buffer-create \"*spacemacs*\")
    (let ((buffer-read-only nil))
      (insert (spacemacs//render-framed-text msg spacemacs-buffer--banner-length
                                             caption hpadding)))))

(defun spacemacs-buffer/insert-framed-text-from-file
    (filepath &optional caption hpadding)
  \"Insert at point the content of FILENAME file in spacemacs buffer in a
frame.

If FILEPATH does not exists the function returns nil.

See `spacemacs//render-framed-text' for documentation of the other
parameters.\"
  (when (file-exists-p filepath)
    (with-current-buffer (get-buffer-create \"*spacemacs*\")
      (let ((buffer-read-only nil))
        (insert (spacemacs//render-framed-text filepath spacemacs-buffer--banner-length
                                               caption hpadding))))))

(defun spacemacs//render-framed-text (content &optional width caption hpadding)
  \"Return a formated string framed with plained lines of width FILL-COLUMN.

CONTENT can be a text or a filepath.

WIDTH set the `fill-column' variable.

If CAPTION is non nil string then it is included in at the top of the frame.
If CAPTION length is greater than FILL-COLUMN minus 5 the function returns
nil.

HPADDING is the horizontal spacing between the text and the frame.
The vertical spacing is always one line.\"
  (with-temp-buffer
    (if (not (file-exists-p content))
        (insert content)
      (insert-file-contents content)
      ;; remove additional newline at eof
      (goto-char (point-max))
      (delete-char -1))
    (let* ((hpadding (or hpadding 1))
           (fill-column (if width
                            (- width (+ 2 (* 2 hpadding)))
                          fill-column))
           (sentence-end-double-space nil)
           (caption-len (length caption)))
      (fill-region (point-min) (point-max) 'justify 'nosqueeze)
      (concat
       ;; top
       \"╭─\"
       (if caption
           (concat caption
                   (make-string (+ (- fill-column caption-len 1)
                                   hpadding) ?─))
         (make-string fill-column ?─))
       (make-string hpadding ?─) \"╮\\n\"
       ;; content
       (spacemacs//render-framed-line \"\" hpadding)
       (mapconcat (lambda (x)
                    (spacemacs//render-framed-line x hpadding))
                  (split-string (buffer-string) \"\\n\" nil) \"\")
       (spacemacs//render-framed-line \"\" hpadding)
       ;; bottom
       \"╰\" (make-string hpadding ?─)
       (make-string fill-column ?─)
       (make-string hpadding ?─) \"╯\"))))

(defun spacemacs//render-framed-line (line hpadding)
  \"Return a formated LINE with borders of a frame on each side and
with width FILL-COLUMN.

If length of LINE is bigger than FILL-COLUMN it returns nil.

HPADDING is the horizontal spacing betwee the content line and the frame border.\"
  (let* ((len (length line))
         (fill (- fill-column len)))
    (when (>= fill 0)
      (concat \"│\" (make-string hpadding ?\\s)
              line (make-string fill ?\\s)
              (make-string hpadding ?\\s) \"│\\n\"))))

(defun spacemacs-buffer/loading-animation ()
  \"Display the progress bar by chunk of size `spacemacs--loading-dots-chunk-threshold'.\"
  (when dotspacemacs-loading-progress-bar
    (setq spacemacs-loading-counter (1+ spacemacs-loading-counter))
    (when (>= spacemacs-loading-counter spacemacs-loading-dots-chunk-threshold)
      (setq spacemacs-loading-counter 0)
      (setq spacemacs-loading-string
            (concat spacemacs-loading-string
                    (make-string spacemacs-loading-dots-chunk-size
                                 spacemacs-loading-char)))
      (spacemacs-buffer/set-mode-line spacemacs-loading-string)
      (spacemacs//redisplay))))

(defmacro spacemacs//insert--shortcut (shortcut-char search-label &optional no-next-line)
  `(define-key spacemacs-mode-map ,shortcut-char (lambda ()
                                                   (interactive)
                                                   (unless (search-forward ,search-label (point-max) t)
                                                     (search-backward ,search-label (point-min) t))
                                                   ,@(unless no-next-line
                                                       '((forward-line 1)))
                                                   (back-to-indentation))))

(defun spacemacs-buffer//insert-buttons ()
  (goto-char (point-max))
  (insert \"     \")
  (spacemacs//insert--shortcut \"m\" \"[?]\" t)
  (widget-create 'url-link
                 :tag (propertize \"?\" 'face 'font-lock-doc-face)
                 :help-echo \"Open the quickhelp.\"
                 :action (lambda (&rest ignore)
                           (spacemacs-buffer/toggle-note (concat spacemacs-info-directory \"quickhelp.txt\")
                                                         ;; if nil is returned, just delete the current note widgets
                                                         (spacemacs-buffer//insert-note-p 'quickhelp)))
                 :mouse-face 'highlight
                 :follow-link \"\\C-m\"
                 )
  (insert \" \")
  (widget-create 'url-link
                 :tag (propertize \"Homepage\" 'face 'font-lock-keyword-face)
                 :help-echo \"Open the Spacemacs Github page in your browser.\"
                 :mouse-face 'highlight
                 :follow-link \"\\C-m\"
                 \"https://github.com/syl20bnr/spacemacs\")
  (insert \" \")
  (widget-create 'url-link
                 :tag (propertize \"Documentation\" 'face 'font-lock-keyword-face)
                 :help-echo \"Open the Spacemacs documentation in your browser.\"
                 :mouse-face 'highlight
                 :follow-link \"\\C-m\"
                 \"https://github.com/syl20bnr/spacemacs/blob/master/doc/DOCUMENTATION.org\")
  (insert \" \")
  (widget-create 'url-link
                 :tag (propertize \"Gitter Chat\" 'face 'font-lock-keyword-face)
                 :help-echo \"Ask questions and chat with fellow users in our chat room.\"
                 :mouse-face 'highlight
                 :follow-link \"\\C-m\"
                 \"https://gitter.im/syl20bnr/spacemacs\")
  (insert \" \")
  (widget-create 'push-button
                 :help-echo \"Update all ELPA packages to the latest versions.\"
                 :action (lambda (&rest ignore) (configuration-layer/update-packages))
                 :mouse-face 'highlight
                 :follow-link \"\\C-m\"
                 (propertize \"Update\" 'face 'font-lock-keyword-face))
  (insert \" \")
  (widget-create 'push-button
                 :help-echo \"Rollback ELPA package upgrades if something got borked.\"
                 :action (lambda (&rest ignore) (call-interactively 'configuration-layer/rollback))
                 :mouse-face 'highlight
                 :follow-link \"\\C-m\"
                 (propertize \"Rollback\" 'face 'font-lock-keyword-face))
  (insert \"\\n\")
  (insert \"                  \")
  (widget-create 'push-button
                 :tag (propertize \"Release Notes\" 'face 'font-lock-preprocessor-face)
                 :help-echo \"Hide or show the Changelog\"
                 :action (lambda (&rest ignore)
                           (spacemacs-buffer/toggle-note (concat spacemacs-release-notes-directory \"0.104.txt\")
                                                         ;; if nil is returned, just delete the current note widgets
                                                         (spacemacs-buffer//insert-note-p 'release-note)))
                 :mouse-face 'highlight
                 :follow-link \"\\C-m\"
                 )
  (insert \" \")
  (widget-create 'url-link
                 :tag (propertize \"Search in Spacemacs\" 'face 'font-lock-function-name-face)
                 :help-echo \"Find Spacemacs package and layer configs using helm-spacemacs.\"
                 :action (lambda (&rest ignore) (call-interactively 'helm-spacemacs))
                 :mouse-face 'highlight
                 :follow-link \"\\C-m\")
  (insert \"\\n\\n\"))

(defun spacemacs-buffer//insert-file-list (list-display-name list)
  (when (car list)
    (insert list-display-name)
    (mapc (lambda (el)
            (insert \"\\n    \")
            (widget-create 'push-button
                           :action `(lambda (&rest ignore) (find-file-existing ,el))
                           :mouse-face 'highlight
                           :follow-link \"\\C-m\"
                           :button-prefix \"\"
                           :button-suffix \"\"
                           :format \"%[%t%]\"
                           (abbreviate-file-name el)))
          list)))

(defun spacemacs-buffer//insert-bookmark-list (list-display-name list)
  (when (car list)
    (insert list-display-name)
    (mapc (lambda (el)
            (insert \"\\n    \")
            (widget-create 'push-button
                           :action `(lambda (&rest ignore) (bookmark-jump ,el))
                           :mouse-face 'highlight
                           :follow-link \"\\C-m\"
                           :button-prefix \"\"
                           :button-suffix \"\"
                           :format \"%[%t%]\"
                           (format \"%s - %s\" el (abbreviate-file-name
                                                 (bookmark-get-filename el)))))
          list)))

(defun spacemacs-buffer/insert-startupify-lists ()
  (interactive)
  (with-current-buffer (get-buffer-create \"*spacemacs*\")
    (let ((buffer-read-only nil)
          (list-separator \"\\n\\n\"))
      (goto-char (point-max))
      (page-break-lines-mode)
      (spacemacs-buffer/insert-page-break)
      (mapc (lambda (el)
              (cond
               ((eq el 'recents)
                (recentf-mode)
                (when (spacemacs-buffer//insert-file-list \"Recent Files:\" (recentf-elements 5))
                  (spacemacs//insert--shortcut \"r\" \"Recent Files:\")
                  (insert list-separator)))
               ((eq el 'bookmarks)
                (helm-mode)
                (when (spacemacs-buffer//insert-bookmark-list \"Bookmarks:\" (bookmark-all-names))
                  (spacemacs//insert--shortcut \"m\" \"Bookmarks:\")
                  (insert list-separator)))
               ((eq el 'projects)
                (projectile-mode)
                (when (spacemacs-buffer//insert-file-list \"Projects:\" (projectile-relevant-known-projects))
                  (spacemacs//insert--shortcut \"p\" \"Projects:\")
                  (insert list-separator))))) dotspacemacs-startup-lists))))

(defun spacemacs-buffer/goto-link-line ()
  \"Move the point to the beginning of the link line.\"
  (interactive)
  (with-current-buffer spacemacs-buffer-name
    (goto-char (point-min))
    (re-search-forward \"Homepage\")
    (beginning-of-line)
    (widget-forward 1)))

" 0 1 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 1 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 31 (fontified t face font-lock-variable-name-face) 31 32 (fontified t) 32 45 (fontified t face font-lock-string-face) 45 48 (fontified t) 48 83 (fontified t face font-lock-doc-face) 83 84 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 84 86 (fontified t) 86 87 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 87 95 (fontified t face font-lock-keyword-face) 95 96 (fontified t) 96 127 (fontified t face font-lock-variable-name-face) 127 133 (fontified t) 133 153 (fontified t face font-lock-doc-face) 153 154 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 154 156 (fontified t) 156 157 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 157 165 (fontified t face font-lock-keyword-face) 165 166 (fontified t) 166 194 (fontified t face font-lock-variable-name-face) 194 195 (fontified t) 195 197 (fontified t) 197 198 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 198 215 (fontified t) 215 216 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 216 249 (fontified t) 249 270 (fontified t face font-lock-string-face) 270 271 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 271 272 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 272 275 (fontified t) 275 348 (fontified t face font-lock-doc-face) 348 349 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 349 350 (fontified t) 350 351 (fontified t) 351 352 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 352 358 (fontified t face font-lock-keyword-face) 358 359 (fontified t) 359 397 (fontified t face font-lock-variable-name-face) 397 404 (fontified t) 404 571 (fontified t face font-lock-doc-face) 571 572 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 572 574 (fontified t) 574 575 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 575 581 (fontified t face font-lock-keyword-face) 581 582 (fontified t) 582 612 (fontified t face font-lock-variable-name-face) 612 619 (fontified t) 619 670 (fontified t face font-lock-doc-face) 670 671 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 671 673 (fontified t) 673 674 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 674 680 (fontified t face font-lock-keyword-face) 680 681 (fontified t) 681 719 (fontified t face font-lock-variable-name-face) 719 724 (fontified t) 724 726 (fontified t) 726 759 (fontified t face font-lock-doc-face) 759 760 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 760 762 (fontified t) 762 763 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 763 768 (fontified t face font-lock-keyword-face) 768 769 (fontified t) 769 811 (fontified t face font-lock-function-name-face) 811 812 (fontified t) 812 813 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 813 814 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 814 817 (fontified t) 817 848 (fontified t face font-lock-doc-face) 848 875 (fontified t face (font-lock-constant-face font-lock-doc-face)) 875 890 (fontified t face font-lock-doc-face) 890 1007 (fontified t face font-lock-doc-face) 1007 1010 (fontified t face (font-lock-constant-face font-lock-doc-face)) 1010 1014 (fontified t face font-lock-doc-face) 1014 1018 (fontified t face (font-lock-constant-face font-lock-doc-face)) 1018 1024 (fontified t face font-lock-doc-face) 1024 1031 (fontified t face (font-lock-constant-face font-lock-doc-face)) 1031 1035 (fontified t face font-lock-doc-face) 1035 1041 (fontified t face (font-lock-constant-face font-lock-doc-face)) 1041 1075 (fontified t face font-lock-doc-face) 1075 1082 (fontified t face (font-lock-constant-face font-lock-doc-face)) 1082 1094 (fontified t face font-lock-doc-face) 1094 1097 (fontified t) 1097 1098 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 1098 1101 (fontified t face font-lock-keyword-face) 1101 1102 (fontified t) 1102 1103 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 1103 1104 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 1104 1111 (fontified t) 1111 1112 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 1112 1143 (fontified t) 1143 1144 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 1144 1145 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 1145 1154 (fontified t) 1154 1155 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 1155 1175 (fontified t) 1175 1176 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 1176 1177 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 1177 1182 (fontified t) 1182 1183 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 1183 1188 (fontified t face font-lock-keyword-face) 1188 1195 (fontified t) 1195 1196 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 1196 1200 (fontified t face font-lock-keyword-face) 1200 1216 (fontified t) 1216 1217 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 1217 1242 (fontified t) 1242 1243 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 1243 1250 (fontified t) 1250 1262 (fontified t face font-lock-string-face) 1262 1269 (fontified t) 1269 1270 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 1270 1271 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 1271 1272 (fontified t) 1272 2548 (fontified nil) 2548 2549 (fontified nil) 2549 2550 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 2550 2555 (fontified nil face font-lock-keyword-face) 2555 2556 (fontified nil) 2556 2587 (fontified nil face font-lock-function-name-face) 2587 2588 (fontified nil) 2588 2589 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 2589 2590 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 2590 2593 (fontified nil) 2593 2655 (fontified nil face font-lock-doc-face) 2655 2658 (fontified nil) 2658 2659 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 2659 2663 (fontified nil face font-lock-keyword-face) 2663 2696 (fontified nil) 2696 2697 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 2697 2701 (fontified nil face font-lock-keyword-face) 2701 2702 (fontified nil) 2702 2703 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 2703 2704 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 2704 2744 (fontified nil) 2744 2745 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 2745 2757 (fontified nil) 2757 2758 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 2758 2760 (fontified nil face font-lock-keyword-face) 2760 2761 (fontified nil) 2761 2762 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 2762 2766 (fontified nil) 2766 2767 (fontified nil font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 2767 2784 (fontified nil) 2784 2785 (fontified nil font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 2785 2786 (fontified nil) 2786 2787 (fontified nil font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 2787 2814 (fontified nil) 2814 2815 (fontified nil font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 2815 2816 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 2816 2875 (fontified nil) 2875 2876 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 2876 2911 (fontified nil) 2911 2912 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 2912 2913 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 2913 2914 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 2914 2925 (fontified nil) 2925 2926 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 2926 2927 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 2927 2965 (fontified nil) 2965 2966 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 2966 2978 (fontified nil) 2978 2979 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 2979 3022 (fontified nil) 3022 3023 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 3023 3024 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 3024 3035 (fontified nil) 3035 3036 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 3036 3037 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 3037 3076 (fontified nil) 3076 3077 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 3077 3078 (fontified nil) 3078 3957 (fontified nil) 3957 3958 (fontified nil) 3958 3959 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 3959 3964 (fontified nil face font-lock-keyword-face) 3964 3965 (fontified nil) 3965 4008 (fontified nil face font-lock-function-name-face) 4008 4009 (fontified nil) 4009 4010 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 4010 4019 (fontified nil face font-lock-type-face) 4019 4023 (fontified nil) 4023 4024 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 4024 4027 (fontified nil) 4027 4137 (fontified nil face font-lock-doc-face) 4137 4140 (fontified nil) 4140 4141 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 4141 4145 (fontified nil face font-lock-keyword-face) 4145 4146 (fontified nil) 4146 4147 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 4147 4148 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 4148 4154 (fontified nil) 4154 4155 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 4155 4199 (fontified nil) 4199 4200 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 4200 4201 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 4201 4211 (fontified nil) 4211 4212 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 4212 4218 (fontified nil) 4218 4219 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 4219 4231 (fontified nil) 4231 4232 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 4232 4233 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 4233 4243 (fontified nil) 4243 4246 (fontified nil face font-lock-comment-delimiter-face) 4246 4276 (fontified nil face font-lock-comment-face) 4276 4278 (fontified nil face (font-lock-constant-face font-lock-comment-face)) 4278 4280 (fontified nil face font-lock-comment-face) 4280 4289 (fontified nil) 4289 4290 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 4290 4297 (fontified nil) 4297 4298 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 4298 4302 (fontified nil) 4302 4303 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 4303 4310 (fontified nil) 4310 4311 (fontified nil font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 4311 4319 (fontified nil) 4319 4320 (fontified nil font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 4320 4322 (fontified nil face font-lock-keyword-face) 4322 4330 (fontified nil) 4330 4331 (fontified nil font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 4331 4332 (fontified nil font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 4332 4333 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 4333 4334 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 4334 4335 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 4335 4336 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 4336 4341 (fontified nil) 4341 4342 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 4342 4358 (fontified nil) 4358 4359 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 4359 4360 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 4360 4361 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 4361 4363 (fontified nil) 4363 4364 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 4364 4369 (fontified nil face font-lock-keyword-face) 4369 4370 (fontified nil) 4370 4403 (fontified nil face font-lock-function-name-face) 4403 4404 (fontified nil) 4404 4405 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 4405 4410 (fontified nil) 4410 4411 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 4411 4414 (fontified nil) 4414 4464 (fontified nil face font-lock-doc-face) 4464 4465 (fontified nil) 4465 4537 (fontified nil) 4537 4538 (fontified nil) 4538 4539 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 4539 4544 (fontified nil face font-lock-keyword-face) 4544 4545 (fontified nil) 4545 4582 (fontified nil face font-lock-function-name-face) 4582 4583 (fontified nil) 4583 4584 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 4584 4590 (fontified nil) 4590 4591 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 4591 4594 (fontified nil) 4594 4620 (fontified nil face font-lock-doc-face) 4620 4623 (fontified nil) 4623 4624 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 4624 4628 (fontified nil face font-lock-keyword-face) 4628 4629 (fontified nil) 4629 4630 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 4630 4650 (fontified nil) 4650 4651 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 4651 4656 (fontified nil) 4656 4657 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 4657 4661 (fontified nil face font-lock-keyword-face) 4661 4662 (fontified nil) 4662 4663 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 4663 4664 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 4664 4670 (fontified nil) 4670 4691 (fontified nil face font-lock-string-face) 4691 4692 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 4692 4704 (fontified nil) 4704 4705 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 4705 4710 (fontified nil) 4710 4711 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 4711 4730 (fontified nil) 4730 4731 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 4731 4732 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 4732 4744 (fontified nil) 4744 4745 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 4745 4750 (fontified nil) 4750 4751 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 4751 4766 (fontified nil) 4766 4767 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 4767 4768 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 4768 4780 (fontified nil) 4780 4781 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 4781 4787 (fontified nil) 4787 4788 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 4788 4796 (fontified nil) 4796 4797 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 4797 4798 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 4798 4810 (fontified nil) 4810 4811 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 4811 4823 (fontified nil) 4823 4824 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 4824 4830 (fontified nil) 4830 4831 (fontified nil font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 4831 4870 (fontified nil) 4870 4871 (fontified nil font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 4871 4873 (fontified nil) 4873 4874 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 4874 4875 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 4875 4876 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 4876 4883 (fontified nil) 4883 4884 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 4884 4903 (fontified nil) 4903 4904 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 4904 4911 (fontified nil) 4911 4912 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 4912 4919 (fontified nil) 4919 4923 (fontified nil face font-lock-string-face) 4923 4924 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 4924 4931 (fontified nil) 4931 4932 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 4932 4939 (fontified nil) 4939 4940 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 4940 4952 (fontified nil) 4952 4953 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 4953 4968 (fontified nil) 4968 4969 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 4969 4973 (fontified nil) 4973 4974 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 4974 4975 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 4975 4982 (fontified nil) 4982 4983 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 4983 5000 (fontified nil) 5000 5001 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 5001 5008 (fontified nil) 5008 5009 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 5009 5016 (fontified nil) 5016 5022 (fontified nil face font-lock-string-face) 5022 5023 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 5023 5030 (fontified nil) 5030 5031 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 5031 5038 (fontified nil) 5038 5039 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 5039 5051 (fontified nil) 5051 5052 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 5052 5066 (fontified nil) 5066 5184 (fontified nil) 5184 5185 (fontified nil) 5185 5186 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 5186 5191 (fontified nil face font-lock-keyword-face) 5191 5192 (fontified nil) 5192 5224 (fontified nil face font-lock-function-name-face) 5224 5225 (fontified nil) 5225 5226 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 5226 5235 (fontified nil face font-lock-type-face) 5235 5249 (fontified nil) 5249 5250 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 5250 5253 (fontified nil) 5253 5344 (fontified nil face font-lock-doc-face) 5344 5347 (fontified nil) 5347 5348 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 5348 5367 (fontified nil face font-lock-keyword-face) 5367 5368 (fontified nil) 5368 5369 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 5369 5387 (fontified nil) 5387 5400 (fontified nil face font-lock-string-face) 5400 5401 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 5401 5406 (fontified nil) 5406 5407 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 5407 5421 (fontified nil face font-lock-keyword-face) 5421 5428 (fontified nil) 5428 5429 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 5429 5433 (fontified nil face font-lock-keyword-face) 5433 5434 (fontified nil) 5434 5435 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 5435 5436 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 5436 5474 (fontified nil) 5474 5475 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 5475 5489 (fontified nil) 5489 5490 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 5490 5499 (fontified nil) 5499 5500 (fontified nil font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 5500 5502 (fontified nil face font-lock-keyword-face) 5502 5544 (fontified nil) 5544 5545 (fontified nil font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 5545 5552 (fontified nil) 5552 5561 (fontified nil face font-lock-string-face) 5561 5675 (fontified nil) 5675 5676 (fontified nil font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 5676 5702 (fontified nil) 5702 5703 (fontified nil font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 5703 5710 (fontified nil) 5710 5716 (fontified nil face font-lock-string-face) 5716 5734 (fontified nil) 5734 5735 (fontified nil font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 5735 5736 (fontified nil font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 5736 5737 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 5737 5738 (fontified nil) 5738 6285 (fontified nil) 6285 6286 (fontified nil) 6286 6287 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 6287 6292 (fontified nil face font-lock-keyword-face) 6292 6293 (fontified nil) 6293 6322 (fontified nil face font-lock-function-name-face) 6322 6323 (fontified nil) 6323 6324 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 6324 6337 (fontified nil) 6337 6346 (fontified nil face font-lock-type-face) 6346 6365 (fontified nil) 6365 6366 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 6366 6369 (fontified nil) 6369 6634 (fontified nil face font-lock-doc-face) 6634 6637 (fontified nil) 6637 6638 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 6638 6652 (fontified nil face font-lock-keyword-face) 6652 6657 (fontified nil) 6657 6658 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 6658 6677 (fontified nil) 6677 6678 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 6678 6683 (fontified nil) 6683 6684 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 6684 6699 (fontified nil) 6699 6712 (fontified nil face font-lock-string-face) 6712 6713 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 6713 6718 (fontified nil) 6718 6719 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 6719 6728 (fontified nil) 6728 6729 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 6729 6734 (fontified nil) 6734 6735 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 6735 6739 (fontified nil face font-lock-keyword-face) 6739 6740 (fontified nil) 6740 6741 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 6741 6742 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 6742 6747 (fontified nil) 6747 6748 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 6748 6755 (fontified nil) 6755 6759 (fontified nil face font-lock-string-face) 6759 6760 (fontified nil) 6760 6761 (fontified nil font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 6761 6796 (fontified nil) 6796 7079 (fontified nil) 7079 7080 (fontified nil) 7080 7081 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 7081 7086 (fontified nil face font-lock-keyword-face) 7086 7087 (fontified nil) 7087 7118 (fontified nil face font-lock-function-name-face) 7118 7119 (fontified nil) 7119 7120 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 7120 7124 (fontified nil) 7124 7125 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 7125 7128 (fontified nil) 7128 7223 (fontified nil face font-lock-doc-face) 7223 7232 (fontified nil face (font-lock-constant-face font-lock-doc-face)) 7232 7238 (fontified nil face font-lock-doc-face) 7238 7250 (fontified nil face (font-lock-constant-face font-lock-doc-face)) 7250 7293 (fontified nil face font-lock-doc-face) 7293 7331 (fontified nil face (font-lock-constant-face font-lock-doc-face)) 7331 7513 (fontified nil face font-lock-doc-face) 7513 7516 (fontified nil) 7516 7517 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 7517 7519 (fontified nil face font-lock-keyword-face) 7519 7520 (fontified nil) 7520 7521 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 7521 7525 (fontified nil) 7525 7526 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 7526 7572 (fontified nil) 7572 7573 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 7573 7574 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 7574 7586 (fontified nil) 7586 7642 (fontified nil) 7642 7643 (fontified nil) 7643 7644 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 7644 7649 (fontified nil face font-lock-keyword-face) 7649 7650 (fontified nil) 7650 7678 (fontified nil face font-lock-function-name-face) 7678 7679 (fontified nil) 7679 7680 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 7680 7689 (fontified nil) 7689 7690 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 7690 7693 (fontified nil) 7693 7786 (fontified nil face font-lock-doc-face) 7786 7789 (fontified nil) 7789 7790 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 7790 7801 (fontified nil) 7801 7802 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 7802 7805 (fontified nil) 7805 7806 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 7806 7855 (fontified nil) 7855 7856 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 7856 7859 (fontified nil) 7859 7860 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 7860 7864 (fontified nil face font-lock-keyword-face) 7864 7868 (fontified nil) 7868 7869 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 7869 7870 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 7870 7888 (fontified nil) 7888 7889 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 7889 7894 (fontified nil) 7894 7895 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 7895 7941 (fontified nil) 7941 7942 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 7942 7943 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 7943 7947 (fontified nil) 7947 7948 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 7948 7949 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 7949 7970 (fontified nil) 7970 7971 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 7971 7976 (fontified nil) 7976 7977 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 7977 8026 (fontified nil) 8026 8027 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 8027 8028 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 8028 8032 (fontified nil) 8032 8033 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 8033 8034 (fontified nil) 8034 8035 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 8035 8036 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 8036 8037 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 8037 8039 (fontified nil) 8039 8040 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 8040 8045 (fontified nil face font-lock-keyword-face) 8045 8046 (fontified nil) 8046 8095 (fontified nil face font-lock-function-name-face) 8095 8096 (fontified nil) 8096 8097 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 8097 8098 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 8098 8101 (fontified nil) 8101 8142 (fontified nil face font-lock-doc-face) 8142 8143 (fontified nil) 8143 8228 (fontified nil) 8228 8229 (fontified nil) 8229 8230 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 8230 8235 (fontified nil face font-lock-keyword-face) 8235 8236 (fontified nil) 8236 8277 (fontified nil face font-lock-function-name-face) 8277 8278 (fontified nil) 8278 8279 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 8279 8283 (fontified nil) 8283 8284 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 8284 8287 (fontified nil) 8287 8329 (fontified nil face font-lock-doc-face) 8329 8332 (fontified nil) 8332 8333 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 8333 8382 (fontified nil) 8382 8383 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 8383 8386 (fontified nil) 8386 8387 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 8387 8390 (fontified nil face font-lock-keyword-face) 8390 8391 (fontified nil) 8391 8392 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 8392 8393 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 8393 8405 (fontified nil) 8405 8406 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 8406 8412 (fontified nil face font-lock-keyword-face) 8412 8413 (fontified nil) 8413 8414 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 8414 8415 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 8415 8439 (fontified nil) 8439 8440 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 8440 8520 (fontified nil) 8520 8521 (fontified nil font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 8521 8599 (fontified nil) 8599 8603 (fontified nil face font-lock-builtin-face) 8603 8604 (fontified nil) 8604 8605 (fontified nil font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 8605 8616 (fontified nil) 8616 8631 (fontified nil face font-lock-string-face) 8631 8661 (fontified nil) 8661 8662 (fontified nil font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 8662 8714 (fontified nil) 8714 8724 (fontified nil face font-lock-builtin-face) 8724 8725 (fontified nil) 8725 8759 (fontified nil face font-lock-string-face) 8759 8760 (fontified nil) 8760 10532 (fontified nil) 10532 10533 (fontified nil) 10533 10534 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 10534 10539 (fontified nil face font-lock-keyword-face) 10539 10540 (fontified nil) 10540 10584 (fontified nil face font-lock-function-name-face) 10584 10585 (fontified nil) 10585 10586 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 10586 10590 (fontified nil) 10590 10591 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 10591 10594 (fontified nil) 10594 10639 (fontified nil face font-lock-doc-face) 10639 10642 (fontified nil) 10642 10643 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 10643 10692 (fontified nil) 10692 10693 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 10693 10696 (fontified nil) 10696 10697 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 10697 10700 (fontified nil face font-lock-keyword-face) 10700 10701 (fontified nil) 10701 10702 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 10702 10703 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 10703 10715 (fontified nil) 10715 10716 (fontified nil font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 10716 10722 (fontified nil face font-lock-keyword-face) 10722 10723 (fontified nil) 10723 10724 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 10724 10725 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 10725 10749 (fontified nil) 10749 10750 (fontified nil font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 10750 10830 (fontified nil) 10830 10831 (fontified nil font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 10831 10909 (fontified nil) 10909 10913 (fontified nil face font-lock-builtin-face) 10913 10914 (fontified nil) 10914 10915 (fontified nil font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 10915 10926 (fontified nil) 10926 10958 (fontified nil face font-lock-string-face) 10958 10988 (fontified nil) 10988 10989 (fontified nil font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 10989 11041 (fontified nil) 11041 11051 (fontified nil face font-lock-builtin-face) 11051 11052 (fontified nil) 11052 11079 (fontified nil face font-lock-string-face) 11079 11080 (fontified nil) 11080 12076 (fontified nil) 12076 12077 (fontified nil) 12077 12078 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 12078 12083 (fontified nil face font-lock-keyword-face) 12083 12084 (fontified nil) 12084 12121 (fontified nil face font-lock-function-name-face) 12121 12122 (fontified nil) 12122 12123 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12123 12124 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12124 12127 (fontified nil) 12127 12128 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12128 12178 (fontified nil) 12178 12179 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12179 12182 (fontified nil) 12182 12183 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12183 12222 (fontified nil) 12222 12223 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12223 12226 (fontified nil) 12226 12227 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12227 12288 (fontified nil) 12288 12289 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12289 12292 (fontified nil) 12292 12293 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12293 12325 (fontified nil) 12325 12326 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 12326 12364 (fontified nil) 12364 12365 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 12365 12394 (fontified nil) 12394 12395 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12395 12396 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 12396 12398 (fontified nil) 12398 12399 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 12399 12404 (fontified nil face font-lock-keyword-face) 12404 12405 (fontified nil) 12405 12435 (fontified nil face font-lock-function-name-face) 12435 12436 (fontified nil) 12436 12437 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12437 12443 (fontified nil) 12443 12444 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12444 12447 (fontified nil) 12447 12491 (fontified nil face font-lock-doc-face) 12491 12494 (fontified nil) 12494 12495 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12495 12514 (fontified nil face font-lock-keyword-face) 12514 12515 (fontified nil) 12515 12516 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 12516 12534 (fontified nil) 12534 12547 (fontified nil face font-lock-string-face) 12547 12548 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 12548 12553 (fontified nil) 12553 12554 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 12554 12582 (fontified nil) 12582 12583 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 12583 12584 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12584 12585 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 12585 12586 (fontified nil) 12586 12587 (fontified nil) 12587 12588 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 12588 12593 (fontified nil face font-lock-keyword-face) 12593 12594 (fontified nil) 12594 12618 (fontified nil face font-lock-function-name-face) 12618 12619 (fontified nil) 12619 12620 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12620 12624 (fontified nil) 12624 12629 (fontified nil face font-lock-type-face) 12629 12634 (fontified nil) 12634 12635 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12635 12638 (fontified nil) 12638 12726 (fontified nil face font-lock-doc-face) 12726 12754 (fontified nil face (font-lock-constant-face font-lock-doc-face)) 12754 12768 (fontified nil face font-lock-doc-face) 12768 12771 (fontified nil) 12771 12772 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12772 12776 (fontified nil face font-lock-keyword-face) 12776 12810 (fontified nil) 12810 12811 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 12811 12819 (fontified nil) 12819 12835 (fontified nil face font-lock-string-face) 12835 12836 (fontified nil) 12836 12837 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 12837 12859 (fontified nil) 12859 12860 (fontified nil font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 12860 12861 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 12861 12862 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12862 12863 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 12863 12865 (fontified nil) 12865 12866 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 12866 12871 (fontified nil face font-lock-keyword-face) 12871 12872 (fontified nil) 12872 12896 (fontified nil face font-lock-function-name-face) 12896 12897 (fontified nil) 12897 12898 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12898 12902 (fontified nil) 12902 12907 (fontified nil face font-lock-type-face) 12907 12912 (fontified nil) 12912 12913 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 12913 12916 (fontified nil) 12916 12965 (fontified nil face font-lock-doc-face) 12965 12975 (fontified nil face (font-lock-constant-face font-lock-doc-face)) 12975 13012 (fontified nil face font-lock-doc-face) 13012 13015 (fontified nil) 13015 13016 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 13016 13024 (fontified nil) 13024 13049 (fontified nil face font-lock-string-face) 13049 13050 (fontified nil) 13050 13051 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 13051 13073 (fontified nil) 13073 13074 (fontified nil font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 13074 13075 (fontified nil font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 13075 13076 (fontified nil font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 13076 13078 (fontified nil) 13078 13079 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 13079 13084 (fontified t face font-lock-keyword-face) 13084 13085 (fontified t) 13085 13119 (fontified t face font-lock-function-name-face) 13119 13120 (fontified t) 13120 13121 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 13121 13122 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 13122 13123 (fontified t) 13123 13125 (fontified t) 13125 13172 (fontified t face font-lock-doc-face) 13172 13175 (fontified t) 13175 13176 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 13176 13200 (fontified t) 13200 13209 (fontified t face font-lock-string-face) 13209 13210 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 13210 13211 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 13211 13212 (fontified t) 13212 13213 (fontified t) 13213 13214 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 13214 13219 (fontified t face font-lock-keyword-face) 13219 13220 (fontified t) 13220 13243 (fontified t face font-lock-function-name-face) 13243 13244 (fontified t) 13244 13245 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 13245 13249 (fontified t) 13249 13258 (fontified t face font-lock-type-face) 13258 13269 (fontified t) 13269 13270 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 13270 13273 (fontified t) 13273 13376 (fontified t face font-lock-doc-face) 13376 13379 (fontified t) 13379 13380 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 13380 13399 (fontified t face font-lock-keyword-face) 13399 13400 (fontified t) 13400 13401 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 13401 13419 (fontified t) 13419 13432 (fontified t face font-lock-string-face) 13432 13433 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 13433 13438 (fontified t) 13438 13439 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 13439 13449 (fontified t) 13449 13450 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 13450 13459 (fontified t) 13459 13460 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 13460 13461 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 13461 13466 (fontified t) 13466 13467 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 13467 13470 (fontified t face font-lock-keyword-face) 13470 13471 (fontified t) 13471 13472 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 13472 13473 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 13473 13493 (fontified t) 13493 13494 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 13494 13495 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 13495 13502 (fontified t) 13502 13503 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 13503 13513 (fontified t) 13513 13514 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 13514 13521 (fontified t) 13521 13522 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 13522 13524 (fontified t face font-lock-keyword-face) 13524 13536 (fontified t) 13536 13537 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 13537 13545 (fontified t) 13545 13561 (fontified t face font-lock-string-face) 13561 13565 (fontified t) 13565 13566 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 13566 13567 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 13567 13568 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 13568 13573 (fontified t) 13573 13574 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 13574 13605 (fontified t) 13605 13607 (fontified t face font-lock-string-face) 13607 13608 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 13608 13609 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 13609 13610 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 13610 13611 (fontified t) 13611 13612 (fontified t) 13612 13613 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 13613 13618 (fontified t face font-lock-keyword-face) 13618 13619 (fontified t) 13619 13653 (fontified t face font-lock-function-name-face) 13653 13654 (fontified t) 13654 13655 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 13655 13659 (fontified t) 13659 13668 (fontified t face font-lock-type-face) 13668 13679 (fontified t) 13679 13680 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 13680 13683 (fontified t) 13683 13757 (fontified t face font-lock-doc-face) 13757 13810 (fontified t face font-lock-doc-face) 13810 13813 (fontified t) 13813 13814 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 13814 13833 (fontified t face font-lock-keyword-face) 13833 13834 (fontified t) 13834 13835 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 13835 13853 (fontified t) 13853 13866 (fontified t face font-lock-string-face) 13866 13867 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 13867 13872 (fontified t) 13872 13873 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 13873 13883 (fontified t) 13883 13884 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 13884 13893 (fontified t) 13893 13894 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 13894 13895 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 13895 13900 (fontified t) 13900 13901 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 13901 13904 (fontified t face font-lock-keyword-face) 13904 13905 (fontified t) 13905 13906 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 13906 13907 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 13907 13927 (fontified t) 13927 13928 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 13928 13929 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 13929 13936 (fontified t) 13936 13937 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 13937 13951 (fontified t) 13951 13952 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 13952 13975 (fontified t) 13975 13976 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 13976 13977 (fontified t) 13977 13978 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 13978 13987 (fontified t) 13987 13988 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 13988 13989 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 13989 13996 (fontified t) 13996 13997 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 13997 14007 (fontified t) 14007 14008 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 14008 14015 (fontified t) 14015 14016 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 14016 14018 (fontified t face font-lock-keyword-face) 14018 14030 (fontified t) 14030 14031 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 14031 14039 (fontified t) 14039 14055 (fontified t face font-lock-string-face) 14055 14059 (fontified t) 14059 14060 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 14060 14061 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 14061 14062 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 14062 14067 (fontified t) 14067 14068 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 14068 14099 (fontified t) 14099 14101 (fontified t face font-lock-string-face) 14101 14102 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 14102 14103 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 14103 14104 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 14104 14105 (fontified t) 14105 14106 (fontified t) 14106 14107 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 14107 14112 (fontified t face font-lock-keyword-face) 14112 14113 (fontified t) 14113 14148 (fontified t face font-lock-function-name-face) 14148 14149 (fontified t) 14149 14153 (fontified t) 14153 14154 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 14154 14158 (fontified t) 14158 14167 (fontified t face font-lock-type-face) 14167 14184 (fontified t) 14184 14185 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 14185 14188 (fontified t) 14188 14263 (fontified t face font-lock-doc-face) 14263 14292 (fontified t face (font-lock-constant-face font-lock-doc-face)) 14292 14337 (fontified t face font-lock-doc-face) 14337 14340 (fontified t) 14340 14341 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 14341 14360 (fontified t face font-lock-keyword-face) 14360 14361 (fontified t) 14361 14362 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 14362 14380 (fontified t) 14380 14393 (fontified t face font-lock-string-face) 14393 14394 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 14394 14399 (fontified t) 14399 14400 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 14400 14403 (fontified t face font-lock-keyword-face) 14403 14404 (fontified t) 14404 14405 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 14405 14406 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 14406 14426 (fontified t) 14426 14427 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 14427 14428 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 14428 14435 (fontified t) 14435 14436 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 14436 14443 (fontified t) 14443 14444 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 14444 14571 (fontified t) 14571 14572 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 14572 14573 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 14573 14574 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 14574 14575 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 14575 14576 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 14576 14577 (fontified t) 14577 14578 (fontified t) 14578 14579 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 14579 14584 (fontified t face font-lock-keyword-face) 14584 14585 (fontified t) 14585 14630 (fontified t face font-lock-function-name-face) 14630 14631 (fontified t) 14631 14635 (fontified t) 14635 14636 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 14636 14645 (fontified t) 14645 14654 (fontified t face font-lock-type-face) 14654 14671 (fontified t) 14671 14672 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 14672 14675 (fontified t) 14675 14814 (fontified t face font-lock-doc-face) 14814 14843 (fontified t face (font-lock-constant-face font-lock-doc-face)) 14843 14888 (fontified t face font-lock-doc-face) 14888 14891 (fontified t) 14891 14892 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 14892 14896 (fontified t face font-lock-keyword-face) 14896 14897 (fontified t) 14897 14898 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 14898 14920 (fontified t) 14920 14921 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 14921 14926 (fontified t) 14926 14927 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 14927 14946 (fontified t face font-lock-keyword-face) 14946 14947 (fontified t) 14947 14948 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 14948 14966 (fontified t) 14966 14979 (fontified t face font-lock-string-face) 14979 14980 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 14980 14987 (fontified t) 14987 14988 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 14988 14991 (fontified t face font-lock-keyword-face) 14991 14992 (fontified t) 14992 14993 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 14993 14994 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 14994 15014 (fontified t) 15014 15015 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 15015 15016 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 15016 15025 (fontified t) 15025 15026 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 15026 15033 (fontified t) 15033 15034 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 15034 15105 (fontified t) 15105 15175 (fontified nil) 15175 15176 (fontified t) 15176 15177 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 15177 15182 (fontified t face font-lock-keyword-face) 15182 15183 (fontified t) 15183 15212 (fontified t face font-lock-function-name-face) 15212 15213 (fontified t) 15213 15214 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 15214 15222 (fontified t) 15222 15231 (fontified t face font-lock-type-face) 15231 15254 (fontified t) 15254 15255 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 15255 15258 (fontified t) 15258 15386 (fontified t face font-lock-doc-face) 15386 15397 (fontified t face (font-lock-constant-face font-lock-doc-face)) 15397 15676 (fontified t face font-lock-doc-face) 15676 15677 (fontified t) 15677 16900 (fontified nil) 16900 16901 (fontified t) 16901 16902 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 16902 16907 (fontified t face font-lock-keyword-face) 16907 16908 (fontified t) 16908 16937 (fontified t face font-lock-function-name-face) 16937 16938 (fontified t) 16938 16939 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 16939 16952 (fontified t) 16952 16953 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 16953 16956 (fontified t) 16956 17189 (fontified t face font-lock-doc-face) 17189 17192 (fontified t) 17192 17193 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 17193 17197 (fontified t face font-lock-keyword-face) 17197 17198 (fontified t) 17198 17199 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 17199 17200 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 17200 17204 (fontified t) 17204 17205 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 17205 17216 (fontified t) 17216 17217 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 17217 17218 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 17218 17228 (fontified t) 17228 17229 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 17229 17234 (fontified t) 17234 17235 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 17235 17252 (fontified t) 17252 17253 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 17253 17254 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 17254 17255 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 17255 17260 (fontified t) 17260 17261 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 17261 17265 (fontified t face font-lock-keyword-face) 17265 17266 (fontified t) 17266 17267 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 17267 17276 (fontified t) 17276 17277 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 17277 17284 (fontified t) 17284 17285 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 17285 17292 (fontified t) 17292 17295 (fontified t face font-lock-string-face) 17295 17296 (fontified t) 17296 17297 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 17297 17321 (fontified t) 17321 17322 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 17322 17342 (fontified t) 17342 17343 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 17343 17363 (fontified t) 17363 17364 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 17364 17379 (fontified t) 17379 17380 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 17380 17404 (fontified t) 17404 17405 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 17405 17406 (fontified t) 17406 17411 (fontified t face font-lock-string-face) 17411 17412 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 17412 17413 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 17413 17414 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 17414 17415 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 17415 17416 (fontified t) 17416 17417 (fontified t) 17417 17418 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 17418 17423 (fontified t face font-lock-keyword-face) 17423 17424 (fontified t) 17424 17458 (fontified t face font-lock-function-name-face) 17458 17459 (fontified t) 17459 17460 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 17460 17461 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 17461 17464 (fontified t) 17464 17508 (fontified t face font-lock-doc-face) 17508 17547 (fontified t face (font-lock-constant-face font-lock-doc-face)) 17547 17550 (fontified t face font-lock-doc-face) 17550 17553 (fontified t) 17553 17554 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 17554 17558 (fontified t face font-lock-keyword-face) 17558 17597 (fontified t) 17597 17598 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 17598 17629 (fontified t) 17629 17630 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 17630 17658 (fontified t) 17658 17659 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 17659 17660 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 17660 17665 (fontified t) 17665 17666 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 17666 17670 (fontified t face font-lock-keyword-face) 17670 17671 (fontified t) 17671 17672 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 17672 17739 (fontified t) 17739 17740 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 17740 17747 (fontified t) 17747 17748 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 17748 17780 (fontified t) 17780 17781 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 17781 17788 (fontified t) 17788 17789 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 17789 17831 (fontified t) 17831 17832 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 17832 17884 (fontified t) 17884 17885 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 17885 17931 (fontified t) 17931 18086 (fontified nil) 18086 18087 (fontified t) 18087 18088 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 18088 18096 (fontified t face font-lock-keyword-face) 18096 18097 (fontified t) 18097 18124 (fontified t face font-lock-function-name-face) 18124 18125 (fontified t) 18125 18126 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 18126 18153 (fontified t) 18153 18162 (fontified t face font-lock-type-face) 18162 18175 (fontified t) 18175 18176 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 18176 18180 (fontified t) 18180 18181 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 18181 18226 (fontified t) 18226 18227 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 18227 18233 (fontified t face font-lock-keyword-face) 18233 18234 (fontified t) 18234 18235 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 18235 18236 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 18236 18288 (fontified t) 18288 18289 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 18289 18300 (fontified t) 18300 18301 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 18301 18353 (fontified t) 18353 18354 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 18354 18360 (fontified t face font-lock-keyword-face) 18360 18361 (fontified t) 18361 18362 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 18362 18391 (fontified t) 18391 18392 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 18392 18401 (fontified t) 18401 18402 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 18402 18404 (fontified t) 18404 18405 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 18405 18459 (fontified t) 18459 18460 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 18460 18490 (fontified t) 18490 18491 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 18491 18500 (fontified t) 18500 18501 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 18501 18503 (fontified t) 18503 18504 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 18504 18505 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 18505 18559 (fontified t) 18559 18560 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 18560 18566 (fontified t face font-lock-keyword-face) 18566 18636 (fontified t) 18636 18637 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 18637 18638 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 18638 18652 (fontified t) 18652 18653 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 18653 18654 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 18654 18655 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 18655 18656 (fontified t) 18656 18732 (fontified nil) 18732 18733 (fontified t) 18733 18734 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 18734 18739 (fontified t face font-lock-keyword-face) 18739 18740 (fontified t) 18740 18772 (fontified t face font-lock-function-name-face) 18772 18773 (fontified t) 18773 18774 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 18774 18775 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 18775 18778 (fontified t) 18778 18779 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 18779 18789 (fontified t) 18789 18790 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 18790 18799 (fontified t) 18799 18800 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 18800 18801 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 18801 18804 (fontified t) 18804 18805 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 18805 18812 (fontified t) 18812 18819 (fontified t face font-lock-string-face) 18819 18820 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 18820 18823 (fontified t) 18823 18824 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 18824 18852 (fontified t) 18852 18855 (fontified t face font-lock-string-face) 18855 18856 (fontified t) 18856 18861 (fontified t face font-lock-string-face) 18861 18863 (fontified t) 18863 18864 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 18864 18867 (fontified t) 18867 18868 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 18868 18909 (fontified t) 18909 18913 (fontified t face font-lock-builtin-face) 18913 18914 (fontified t) 18914 18915 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 18915 18926 (fontified t) 18926 18929 (fontified t face font-lock-string-face) 18929 18955 (fontified t) 18955 18956 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 18956 18974 (fontified t) 18974 18984 (fontified t face font-lock-builtin-face) 18984 18985 (fontified t) 18985 19006 (fontified t face font-lock-string-face) 19006 19024 (fontified t) 19024 19031 (fontified t face font-lock-builtin-face) 19031 19032 (fontified t) 19032 19033 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 19033 19039 (fontified t face font-lock-keyword-face) 19039 19040 (fontified t) 19040 19041 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 19041 19046 (fontified t face font-lock-type-face) 19046 19053 (fontified t) 19053 19054 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 19054 19082 (fontified t) 19082 19083 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 19083 19112 (fontified t) 19112 19113 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 19113 19145 (fontified t) 19145 19160 (fontified t face font-lock-string-face) 19160 19161 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 19161 19219 (fontified t) 19219 19222 (fontified t face font-lock-comment-delimiter-face) 19222 19279 (fontified t face font-lock-comment-face) 19279 21946 (fontified nil) 21946 21963 (fontified t) 21963 21964 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 21964 21967 (fontified t) 21967 21968 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 21968 21975 (fontified t) 21975 21978 (fontified t face font-lock-string-face) 21978 21979 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 21979 21982 (fontified t) 21982 21983 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 21983 22024 (fontified t) 22024 22028 (fontified t face font-lock-builtin-face) 22028 22029 (fontified t) 22029 22030 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 22030 22041 (fontified t) 22041 22062 (fontified t face font-lock-string-face) 22062 22098 (fontified t) 22098 22099 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 22099 22117 (fontified t) 22117 22127 (fontified t face font-lock-builtin-face) 22127 22128 (fontified t) 22128 22192 (fontified t face font-lock-string-face) 22192 22210 (fontified t) 22210 22217 (fontified t face font-lock-builtin-face) 22217 22218 (fontified t) 22218 22219 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 22219 22225 (fontified t face font-lock-keyword-face) 22225 22226 (fontified t) 22226 22227 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 22227 22232 (fontified t face font-lock-type-face) 22232 22239 (fontified t) 22239 22240 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 22240 22241 (fontified t) 22241 22242 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 22242 22276 (fontified t) 22276 22277 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 22277 22278 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 22278 22296 (fontified t) 22296 22307 (fontified t face font-lock-builtin-face) 22307 22336 (fontified t) 22336 22348 (fontified t face font-lock-builtin-face) 22348 22349 (fontified t) 22349 22355 (fontified t face font-lock-string-face) 22355 22356 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 22356 22359 (fontified t) 22359 22360 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 22360 22367 (fontified t) 22367 22373 (fontified t face font-lock-string-face) 22373 22374 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 22374 22375 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 22375 22376 (fontified t) 22376 22377 (fontified t) 22377 22378 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 22378 22383 (fontified t face font-lock-keyword-face) 22383 22384 (fontified t) 22384 22418 (fontified t face font-lock-function-name-face) 22418 22419 (fontified t) 22419 22420 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 22420 22442 (fontified t) 22442 22443 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 22443 22446 (fontified t) 22446 22447 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 22447 22451 (fontified t face font-lock-keyword-face) 22451 22452 (fontified t) 22452 22453 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 22453 22461 (fontified t) 22461 22462 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 22462 22467 (fontified t) 22467 22468 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 22468 22492 (fontified t) 22492 22493 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 22493 22498 (fontified t) 22498 22499 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 22499 22504 (fontified t) 22504 22505 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 22505 22511 (fontified t face font-lock-keyword-face) 22511 22512 (fontified t) 22512 22513 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 22513 22515 (fontified t) 22515 22516 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 22516 22529 (fontified t) 22529 22530 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 22530 22537 (fontified t) 22537 22545 (fontified t face font-lock-string-face) 22545 22546 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 22546 22559 (fontified t) 22559 22560 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 22560 22614 (fontified t) 22614 22621 (fontified t face font-lock-builtin-face) 22621 22623 (fontified t) 22623 22624 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 22624 22630 (fontified t face font-lock-keyword-face) 22630 22631 (fontified t) 22631 22632 (fontified t font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 22632 22637 (fontified t face font-lock-type-face) 22637 22644 (fontified t) 22644 22645 (fontified t font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 22645 22646 (fontified t) 22646 22647 (fontified t font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 22647 22669 (fontified t) 22669 22670 (fontified t font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 22670 22671 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 22671 22699 (fontified t) 22699 22710 (fontified t face font-lock-builtin-face) 22710 22749 (fontified t) 22749 22761 (fontified t face font-lock-builtin-face) 22761 22762 (fontified t) 22762 22768 (fontified t face font-lock-string-face) 22768 22796 (fontified t) 22796 22810 (fontified t face font-lock-builtin-face) 22810 22811 (fontified t) 22811 22813 (fontified t face font-lock-string-face) 22813 22841 (fontified t) 22841 22855 (fontified t face font-lock-builtin-face) 22855 22856 (fontified t) 22856 22858 (fontified t face font-lock-string-face) 22858 22886 (fontified t) 22886 22893 (fontified t face font-lock-builtin-face) 22893 22894 (fontified t) 22894 22902 (fontified t face font-lock-string-face) 22902 22903 (fontified t) 22903 22930 (fontified t) 22930 22931 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 22931 22954 (fontified t) 22954 22955 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 22955 22956 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 22956 22957 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 22957 22972 (fontified t) 22972 22973 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 22973 22974 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 22974 22975 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 22975 22976 (fontified t) 22976 22977 (fontified t) 22977 22978 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 22978 22983 (fontified t face font-lock-keyword-face) 22983 22984 (fontified t) 22984 23022 (fontified t face font-lock-function-name-face) 23022 23023 (fontified t) 23023 23024 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 23024 23046 (fontified t) 23046 23047 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 23047 23050 (fontified t) 23050 23051 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 23051 23055 (fontified t face font-lock-keyword-face) 23055 23056 (fontified t) 23056 23057 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 23057 23065 (fontified t) 23065 23066 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 23066 23071 (fontified t) 23071 23072 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 23072 23096 (fontified t) 23096 23097 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 23097 23102 (fontified t) 23102 23103 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 23103 23108 (fontified t) 23108 23109 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 23109 23115 (fontified t face font-lock-keyword-face) 23115 23116 (fontified t) 23116 23117 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 23117 23119 (fontified t) 23119 23120 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 23120 23133 (fontified t) 23133 23134 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 23134 23141 (fontified t) 23141 23149 (fontified t face font-lock-string-face) 23149 23150 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 23150 23163 (fontified t) 23163 23164 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 23164 23218 (fontified t) 23218 23225 (fontified t face font-lock-builtin-face) 23225 23227 (fontified t) 23227 23228 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 23228 23234 (fontified t face font-lock-keyword-face) 23234 23235 (fontified t) 23235 23236 (fontified t font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 23236 23241 (fontified t face font-lock-type-face) 23241 23248 (fontified t) 23248 23249 (fontified t font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 23249 23250 (fontified t) 23250 23251 (fontified t font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 23251 23268 (fontified t) 23268 23269 (fontified t font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 23269 23270 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 23270 23298 (fontified t) 23298 23309 (fontified t face font-lock-builtin-face) 23309 23348 (fontified t) 23348 23360 (fontified t face font-lock-builtin-face) 23360 23361 (fontified t) 23361 23367 (fontified t face font-lock-string-face) 23367 23395 (fontified t) 23395 23409 (fontified t face font-lock-builtin-face) 23409 23410 (fontified t) 23410 23412 (fontified t face font-lock-string-face) 23412 23440 (fontified t) 23440 23454 (fontified t face font-lock-builtin-face) 23454 23455 (fontified t) 23455 23457 (fontified t face font-lock-string-face) 23457 23485 (fontified t) 23485 23492 (fontified t face font-lock-builtin-face) 23492 23493 (fontified t) 23493 23501 (fontified t face font-lock-string-face) 23501 23502 (fontified t) 23502 23529 (fontified t) 23529 23530 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 23530 23537 (fontified t) 23537 23546 (fontified t face font-lock-string-face) 23546 23550 (fontified t) 23550 23551 (fontified t font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 23551 23621 (fontified t) 23621 23622 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 23622 23646 (fontified t) 23646 23647 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 23647 23648 (fontified t font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 23648 23649 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 23649 23650 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 23650 23651 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 23651 23666 (fontified t) 23666 23667 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 23667 23668 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 23668 23669 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 23669 23670 (fontified t) 23670 23671 (fontified t) 23671 23672 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 23672 23677 (fontified t face font-lock-keyword-face) 23677 23678 (fontified t) 23678 23718 (fontified t face font-lock-function-name-face) 23718 23719 (fontified t) 23719 23720 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 23720 23721 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 23721 23724 (fontified t) 23724 23725 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 23725 23736 (fontified t) 23736 23737 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 23737 23740 (fontified t) 23740 23741 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 23741 23760 (fontified t face font-lock-keyword-face) 23760 23761 (fontified t) 23761 23762 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 23762 23780 (fontified t) 23780 23793 (fontified t face font-lock-string-face) 23793 23794 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 23794 23799 (fontified t) 23799 23800 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 23800 23803 (fontified t face font-lock-keyword-face) 23803 23804 (fontified t) 23804 23805 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 23805 23806 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 23806 23826 (fontified t) 23826 23827 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 23827 23838 (fontified t) 23838 23839 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 23839 23854 (fontified t) 23854 23860 (fontified t face font-lock-string-face) 23860 23861 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 23861 23862 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 23862 23869 (fontified t) 23869 23870 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 23870 23880 (fontified t) 23880 23881 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 23881 23890 (fontified t) 23890 23891 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 23891 23892 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 23892 23899 (fontified t) 23899 23900 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 23900 23921 (fontified t) 23921 23922 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 23922 23929 (fontified t) 23929 23930 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 23930 23964 (fontified t) 23964 23965 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 23965 23972 (fontified t) 23972 23973 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 23973 23978 (fontified t) 23978 23979 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 23979 23985 (fontified t face font-lock-keyword-face) 23985 23986 (fontified t) 23986 23987 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 23987 23989 (fontified t) 23989 23990 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 23990 24005 (fontified t) 24005 24006 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 24006 24010 (fontified t face font-lock-keyword-face) 24010 24026 (fontified t) 24026 24027 (fontified t font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 24027 24028 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 24028 24042 (fontified t) 24042 24043 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 24043 24060 (fontified t) 24060 24061 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 24061 24073 (fontified t) 24073 24074 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 24074 24091 (fontified t) 24091 24092 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 24092 24096 (fontified t face font-lock-keyword-face) 24096 24097 (fontified t) 24097 24098 (fontified t font-lock-face "rainbow-delimiters-depth-9-face" rear-nonsticky t) 24098 24133 (fontified t) 24133 24148 (fontified t face font-lock-string-face) 24148 24149 (fontified t) 24149 24150 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 24150 24168 (fontified t) 24168 24169 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 24169 24170 (fontified t font-lock-face "rainbow-delimiters-depth-9-face" rear-nonsticky t) 24170 24171 (fontified t) 24171 24189 (fontified t) 24189 24190 (fontified t font-lock-face "rainbow-delimiters-depth-9-face" rear-nonsticky t) 24190 24218 (fontified t) 24218 24221 (fontified t face font-lock-string-face) 24221 24222 (fontified t) 24222 24237 (fontified t face font-lock-string-face) 24237 24238 (fontified t font-lock-face "rainbow-delimiters-depth-9-face" rear-nonsticky t) 24238 24257 (fontified t) 24257 24258 (fontified t font-lock-face "rainbow-delimiters-depth-9-face" rear-nonsticky t) 24258 24279 (fontified t) 24279 24280 (fontified t font-lock-face "rainbow-delimiters-depth-9-face" rear-nonsticky t) 24280 24281 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 24281 24282 (fontified t font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 24282 24298 (fontified t) 24298 24299 (fontified t font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 24299 24300 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 24300 24316 (fontified t) 24316 24317 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 24317 24334 (fontified t) 24334 24335 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 24335 24344 (fontified t) 24344 24345 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 24345 24362 (fontified t) 24362 24363 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 24363 24367 (fontified t face font-lock-keyword-face) 24367 24368 (fontified t) 24368 24369 (fontified t font-lock-face "rainbow-delimiters-depth-9-face" rear-nonsticky t) 24369 24408 (fontified t) 24408 24420 (fontified t face font-lock-string-face) 24420 24421 (fontified t) 24421 24422 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 24422 24440 (fontified t) 24440 24441 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 24441 24442 (fontified t font-lock-face "rainbow-delimiters-depth-9-face" rear-nonsticky t) 24442 24461 (fontified t) 24461 24462 (fontified t font-lock-face "rainbow-delimiters-depth-9-face" rear-nonsticky t) 24462 24490 (fontified t) 24490 24493 (fontified t face font-lock-string-face) 24493 24494 (fontified t) 24494 24506 (fontified t face font-lock-string-face) 24506 24507 (fontified t font-lock-face "rainbow-delimiters-depth-9-face" rear-nonsticky t) 24507 24526 (fontified t) 24526 24527 (fontified t font-lock-face "rainbow-delimiters-depth-9-face" rear-nonsticky t) 24527 24548 (fontified t) 24548 24549 (fontified t font-lock-face "rainbow-delimiters-depth-9-face" rear-nonsticky t) 24549 24550 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 24550 24551 (fontified t font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 24551 24567 (fontified t) 24567 24568 (fontified t font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 24568 24569 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 24569 24584 (fontified t) 24584 24585 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 24585 24602 (fontified t) 24602 24603 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 24603 24618 (fontified t) 24618 24619 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 24619 24636 (fontified t) 24636 24637 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 24637 24641 (fontified t face font-lock-keyword-face) 24641 24642 (fontified t) 24642 24643 (fontified t font-lock-face "rainbow-delimiters-depth-9-face" rear-nonsticky t) 24643 24678 (fontified t) 24678 24689 (fontified t face font-lock-string-face) 24689 24690 (fontified t) 24690 24691 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 24691 24725 (fontified t) 24725 24726 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 24726 24727 (fontified t font-lock-face "rainbow-delimiters-depth-9-face" rear-nonsticky t) 24727 24728 (fontified t) 24728 24746 (fontified t) 24746 24747 (fontified t font-lock-face "rainbow-delimiters-depth-9-face" rear-nonsticky t) 24747 24775 (fontified t) 24775 24778 (fontified t face font-lock-string-face) 24778 24779 (fontified t) 24779 24790 (fontified t face font-lock-string-face) 24790 24791 (fontified t font-lock-face "rainbow-delimiters-depth-9-face" rear-nonsticky t) 24791 24810 (fontified t) 24810 24811 (fontified t font-lock-face "rainbow-delimiters-depth-9-face" rear-nonsticky t) 24811 24832 (fontified t) 24832 24833 (fontified t font-lock-face "rainbow-delimiters-depth-9-face" rear-nonsticky t) 24833 24834 (fontified t font-lock-face "rainbow-delimiters-depth-8-face" rear-nonsticky t) 24834 24835 (fontified t font-lock-face "rainbow-delimiters-depth-7-face" rear-nonsticky t) 24835 24836 (fontified t font-lock-face "rainbow-delimiters-depth-6-face" rear-nonsticky t) 24836 24837 (fontified t font-lock-face "rainbow-delimiters-depth-5-face" rear-nonsticky t) 24837 24864 (fontified t) 24864 24865 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 24865 24866 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 24866 24867 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 24867 24868 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 24868 24869 (fontified t) 24869 24870 (fontified t) 24870 24871 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 24871 24876 (fontified t face font-lock-keyword-face) 24876 24877 (fontified t) 24877 24908 (fontified t face font-lock-function-name-face) 24908 24909 (fontified t) 24909 24910 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 24910 24911 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 24911 24914 (fontified t) 24914 24965 (fontified t face font-lock-doc-face) 24965 24968 (fontified t) 24968 24969 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 24969 24980 (fontified t) 24980 24981 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 24981 24984 (fontified t) 24984 24985 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 24985 25004 (fontified t face font-lock-keyword-face) 25004 25031 (fontified t) 25031 25032 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 25032 25042 (fontified t) 25042 25043 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 25043 25052 (fontified t) 25052 25053 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 25053 25054 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 25054 25059 (fontified t) 25059 25060 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 25060 25078 (fontified t) 25078 25088 (fontified t face font-lock-string-face) 25088 25089 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 25089 25094 (fontified t) 25094 25095 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 25095 25112 (fontified t) 25112 25113 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 25113 25118 (fontified t) 25118 25119 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 25119 25135 (fontified t) 25135 25136 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 25136 25137 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 25137 25138 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 25138 25140 (fontified t)) #("startup" 0 7 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("(define-minor-mode bzg-big-fringe-mode
  \"Minor mode to use big fringe in the current buffer.\"
  :init-value nil
  :global t
  :variable bzg-big-fringe-mode
  :group 'editing-basics
  (if (not bzg-big-fringe-mode)
      (set-fringe-style nil)
    (set-fringe-mode
     (/ (- (frame-pixel-width)
           (* 100 (frame-char-width)))
        2))))
" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 18 (face font-lock-keyword-face fontified t) 18 19 (fontified t) 19 38 (face font-lock-function-name-face fontified t) 38 41 (fontified t) 41 94 (face font-lock-doc-face fontified t) 94 97 (fontified t) 97 108 (face font-lock-builtin-face fontified t) 108 113 (fontified t) 113 115 (fontified t) 115 122 (face font-lock-builtin-face fontified t) 122 127 (fontified t) 127 136 (face font-lock-builtin-face fontified t) 136 159 (fontified t) 159 165 (face font-lock-builtin-face fontified t) 165 184 (fontified t) 184 185 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 185 187 (face font-lock-keyword-face fontified t) 187 188 (fontified t) 188 189 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 189 212 (fontified t) 212 213 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 213 220 (fontified t) 220 221 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 221 241 (fontified t) 241 242 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 242 247 (fontified t) 247 248 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 248 269 (fontified t) 269 270 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 270 272 (fontified t) 272 273 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 273 275 (fontified t) 275 276 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 276 293 (fontified t) 293 294 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 294 306 (fontified t) 306 307 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 307 313 (fontified t) 313 314 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 314 330 (fontified t) 330 331 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 331 332 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 332 333 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 333 343 (fontified t) 343 344 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 344 345 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 345 346 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 346 347 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 347 348 (fontified t)) #("spacemacs" 0 9 (face font-lock-comment-face fontified t)) #("spacemacs" 0 9 (face font-lock-comment-face fontified t)) #("(defun spacemacs/indent-region-or-buffer ()
  \"Indent a region if selected, otherwise the whole buffer.\"
  (interactive)
  (unless (member major-mode spacemacs-indent-sensitive-modes)
    (save-excursion
      (if (region-active-p)
          (progn
            (indent-region (region-beginning) (region-end))
            (message \"Indented selected region.\"))
        (progn
          (evil-indent (point-min) (point-max))
          (message \"Indented buffer.\")))
      (whitespace-cleanup))))

" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 40 (face font-lock-function-name-face fontified t) 40 41 (fontified t) 41 42 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 42 43 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 43 46 (fontified t) 46 104 (face font-lock-doc-face fontified t) 104 105 (fontified t) 105 107 (fontified t) 107 108 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 108 119 (fontified t) 119 120 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 120 123 (fontified t) 123 124 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 124 130 (face font-lock-keyword-face fontified t) 130 131 (fontified t) 131 132 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 132 182 (fontified t) 182 183 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 183 188 (fontified t) 188 189 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 189 203 (face font-lock-keyword-face fontified t) 203 210 (fontified t) 210 211 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 211 213 (face font-lock-keyword-face fontified t) 213 214 (fontified t) 214 215 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 215 230 (fontified t) 230 231 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 231 242 (fontified t) 242 243 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 243 248 (face font-lock-keyword-face fontified t) 248 261 (fontified t) 261 262 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 262 276 (fontified t) 276 277 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 277 293 (fontified t) 293 294 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 294 295 (fontified t) 295 296 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 296 306 (fontified t) 306 307 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 307 308 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 308 321 (fontified t) 321 322 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 322 330 (fontified t) 330 357 (face font-lock-string-face fontified t) 357 358 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 358 359 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 359 368 (fontified t) 368 369 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 369 374 (face font-lock-keyword-face fontified t) 374 385 (fontified t) 385 386 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 386 398 (fontified t) 398 399 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 399 408 (fontified t) 408 409 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 409 410 (fontified t) 410 411 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 411 420 (fontified t) 420 421 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 421 422 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 422 433 (fontified t) 433 434 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 434 442 (fontified t) 442 460 (face font-lock-string-face fontified t) 460 461 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 461 462 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 462 463 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 463 470 (fontified t) 470 471 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 471 489 (fontified t) 489 490 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 490 491 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 491 492 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 492 493 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 493 495 (fontified t)) #("(let ((message-log-max nil))
    (apply 'message msg args)))
" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 6 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 6 7 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 7 26 (fontified t) 26 27 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 27 28 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 28 29 (fontified t) 29 33 (fontified t) 33 34 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 34 57 (fontified t) 57 58 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 58 59 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 59 60 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 60 61 (fontified t)) #("emacs-persistent-scratch" 0 24 (fontified t)) #("sed 's/lch-win32-p/lch-windows-p/g' " 0 36 (fontified t)) #("find . |sed " 0 12 (fontified t)) #("win32mswindows" 0 5 (face font-lock-function-name-face fontified t) 5 14 (face font-lock-function-name-face fontified t)) #("spacemacs/system-is-" 0 10 (fontified t face font-lock-function-name-face) 10 17 (face font-lock-function-name-face fontified t) 17 20 (face font-lock-function-name-face fontified t)) #("is" 0 2 (face font-lock-function-name-face fontified t)) #("spacemacs/system" 0 10 (fontified t face font-lock-function-name-face) 10 16 (fontified t face font-lock-function-name-face)) #("spacemacs/system-is" 0 10 (fontified t face font-lock-function-name-face) 10 17 (face font-lock-function-name-face fontified t) 17 19 (face font-lock-function-name-face fontified t)) #("(defun spacemacs/system-is-mac ()
  (string-equal system-type \"darwin\"))
(defun spacemacs/system-is-linux ()
  (string-equal system-type \"gnu/linux\"))
(defun spacemacs/system-is-mswindows ()
  (string-equal system-type \"windows-nt\"))

" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 30 (face font-lock-function-name-face fontified t) 30 31 (fontified t) 31 32 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 32 33 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 33 36 (fontified t) 36 37 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 37 62 (fontified t) 62 70 (face font-lock-string-face fontified t) 70 71 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 71 72 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 72 73 (fontified t) 73 74 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 74 79 (face font-lock-keyword-face fontified t) 79 80 (fontified t) 80 105 (face font-lock-function-name-face fontified t) 105 106 (fontified t) 106 107 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 107 108 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 108 111 (fontified t) 111 112 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 112 137 (fontified t) 137 148 (face font-lock-string-face fontified t) 148 149 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 149 150 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 150 151 (fontified t) 151 152 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 152 157 (face font-lock-keyword-face fontified t) 157 158 (fontified t) 158 187 (face font-lock-function-name-face fontified t) 187 188 (fontified t) 188 189 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 189 190 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 190 193 (fontified t) 193 194 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 194 219 (fontified t) 219 231 (face font-lock-string-face fontified t) 231 232 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 232 233 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 233 235 (fontified t)) #("mode" 0 4 (face font-lock-comment-face fontified t)) #("guide" 0 5 (face font-lock-comment-face fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) #("https://github.com/cofi/dotfiles/blob/master/emacs.d/" 0 53 (face font-lock-comment-face fontified t)) "/Users/LooChao/Dropbox/.emacs.dz/spacemacs/layers/+distribution/spacemacs-base/funcs.el" #("cleanup-buffer" 0 8 (fontified t) 8 14 (fontified t)) #("cleanup-buffer" 0 8 (fontified t face font-lock-string-face) 8 14 (fontified t face font-lock-string-face)) #("        ((\"c\" . \"cleanup-buffer\") . lch-cleanup-buffer)                    ;; => lch-util.el" 0 8 (fontified t) 8 9 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face") 9 10 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 10 13 (face font-lock-string-face fontified t) 13 16 (fontified t) 16 32 (face font-lock-string-face fontified t) 32 33 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 33 54 (fontified t) 54 55 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face") 55 75 (fontified t) 75 78 (face font-lock-comment-delimiter-face fontified t) 78 92 (face font-lock-comment-face fontified t)) #("
" 0 1 (fontified t rear-nonsticky t)) #("words-analysis" 0 6 (fontified t face font-lock-function-name-face) 6 14 (fontified t face font-lock-function-name-face)) #("spacemacs/" 0 10 (face font-lock-function-name-face fontified t)) #(";; from http://www.emacswiki.org/emacs/WordCount
(defun spacemacs/count-words-analysis (start end)
  \"Count how many times each word is used in the region.
 Punctuation is ignored.\"
  (interactive \"r\")
  (let (words)
    (save-excursion
      (goto-char start)
      (while (re-search-forward \"\\\\w+\" end t)
        (let* ((word (intern (match-string 0)))
               (cell (assq word words)))
          (if cell
              (setcdr cell (1+ (cdr cell)))
            (setq words (cons (cons word 1) words))))))
    (when (interactive-p)
      (message \"%S\" words))
    words))

" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 49 (face font-lock-comment-face fontified t) 49 50 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 50 55 (face font-lock-keyword-face fontified t) 55 56 (fontified t) 56 86 (face font-lock-function-name-face fontified t) 86 87 (fontified t) 87 88 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 88 97 (fontified t) 97 98 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 98 99 (fontified t) 99 101 (fontified t) 101 156 (face font-lock-doc-face fontified t) 156 181 (face font-lock-doc-face fontified t) 181 182 (fontified t) 182 184 (fontified t) 184 185 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 185 197 (fontified t) 197 200 (face font-lock-string-face fontified t) 200 201 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 201 204 (fontified t) 204 205 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 205 208 (face font-lock-keyword-face fontified t) 208 209 (fontified t) 209 210 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face") 210 215 (fontified t) 215 216 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face") 216 221 (fontified t) 221 222 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face") 222 236 (face font-lock-keyword-face fontified t) 236 243 (fontified t) 243 244 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 244 259 (fontified t) 259 260 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 260 267 (fontified t) 267 268 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 268 273 (face font-lock-keyword-face fontified t) 273 274 (fontified t) 274 275 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 275 293 (fontified t) 293 299 (face font-lock-string-face fontified t) 299 305 (fontified t) 305 306 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 306 315 (fontified t) 315 316 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 316 320 (face font-lock-keyword-face fontified t) 320 321 (fontified t) 321 322 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 322 323 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face") 323 328 (fontified t) 328 329 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face") 329 336 (fontified t) 336 337 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face") 337 351 (fontified t) 351 352 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face") 352 353 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face") 353 354 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face") 354 370 (fontified t) 370 371 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face") 371 376 (fontified t) 376 377 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face") 377 392 (fontified t) 392 393 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face") 393 394 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face") 394 395 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 395 406 (fontified t) 406 407 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 407 409 (face font-lock-keyword-face fontified t) 409 429 (fontified t) 429 430 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face") 430 442 (fontified t) 442 443 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face") 443 446 (fontified t) 446 447 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face") 447 455 (fontified t) 455 456 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face") 456 457 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face") 457 458 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face") 458 471 (fontified t) 471 472 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face") 472 483 (fontified t) 483 484 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face") 484 489 (fontified t) 489 490 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face") 490 501 (fontified t) 501 502 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face") 502 508 (fontified t) 508 509 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face") 509 510 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face") 510 511 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 511 512 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 512 513 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 513 514 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face") 514 515 (fontified t) 515 519 (fontified t) 519 520 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face") 520 524 (face font-lock-keyword-face fontified t) 524 525 (fontified t) 525 526 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 526 539 (fontified t) 539 540 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 540 547 (fontified t) 547 548 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 548 556 (fontified t) 556 560 (face font-lock-string-face fontified t) 560 566 (fontified t) 566 567 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 567 568 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face") 568 578 (fontified t) 578 579 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 579 580 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face") 580 582 (fontified t)) #("
" 0 1 (fontified t)) #("lines" 0 5 (fontified t)) #("  (message \"Have strip blanks line. Wakaka.\"))" 0 2 (fontified t) 2 3 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 3 11 (fontified t) 11 44 (face font-lock-string-face fontified t) 44 45 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 45 46 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t)) #("linesstrip-blank-lines" 0 5 (fontified t) 5 11 (fontified t) 11 17 (fontified t) 17 22 (fontified t)) #("lines" 0 5 (fontified t)) #("adjacent" 0 8 (fontified t)) #("adjacent" 0 8 (face font-lock-function-name-face fontified t)) #("        ((\"s\" . \"strip-blank-lines\") . strip-blank-lines)                  ;; => lch-util.el" 0 8 (fontified t) 8 9 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 9 10 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 10 13 (face font-lock-string-face fontified t) 13 16 (fontified t) 16 35 (face font-lock-string-face fontified t) 35 36 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 36 56 (fontified t) 56 57 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 57 75 (fontified t) 75 78 (face font-lock-comment-delimiter-face fontified t) 78 92 (face font-lock-comment-face fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #(";; from Spacemacs
(defun lch-strip-adjacent-lines ()
  \"Remove duplicate adjacent lines in region or current buffer\"
  (interactive)
  (save-excursion
    (save-restriction
      (let ((beg (if (region-active-p) (region-beginning) (point-min)))
            (end (if (region-active-p) (region-end) (point-max))))
        (goto-char beg)
        (while (re-search-forward \"^\\\\(.*\\n\\\\)\\\\1+\" end t)
          (replace-match \"\\\\1\"))))))
(define-key global-map (kbd \"<f4> S\") 'lch-strip-adjacent-lines)

" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 3 (face font-lock-comment-delimiter-face fontified t) 3 8 (face font-lock-comment-face fontified t) 8 17 (face font-lock-comment-face fontified t) 17 18 (fontified t) 18 19 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 19 24 (fontified t face font-lock-keyword-face) 24 25 (fontified t) 25 43 (fontified t face font-lock-function-name-face) 43 49 (fontified t face font-lock-function-name-face) 49 50 (fontified t) 50 51 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 51 52 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 52 53 (fontified t) 53 55 (fontified t) 55 116 (fontified t face font-lock-string-face) 116 117 (fontified t) 117 119 (fontified t) 119 120 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 120 131 (fontified t) 131 132 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 132 133 (fontified t) 133 135 (fontified t) 135 136 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 136 150 (fontified t face font-lock-keyword-face) 150 151 (fontified t) 151 155 (fontified t) 155 156 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 156 172 (fontified t face font-lock-keyword-face) 172 173 (fontified t) 173 179 (fontified t) 179 180 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 180 183 (fontified t face font-lock-keyword-face) 183 184 (fontified t) 184 185 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 185 186 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 186 190 (fontified t) 190 191 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 191 193 (fontified t face font-lock-keyword-face) 193 194 (fontified t) 194 195 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 195 210 (fontified t) 210 211 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 211 212 (fontified t) 212 213 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 213 229 (fontified t) 229 230 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 230 231 (fontified t) 231 232 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 232 241 (fontified t) 241 242 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 242 243 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 243 244 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 244 245 (fontified t) 245 257 (fontified t) 257 258 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 258 262 (fontified t) 262 263 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 263 265 (fontified t face font-lock-keyword-face) 265 266 (fontified t) 266 267 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 267 282 (fontified t) 282 283 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 283 284 (fontified t) 284 285 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 285 295 (fontified t) 295 296 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 296 297 (fontified t) 297 298 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 298 307 (fontified t) 307 308 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 308 309 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 309 310 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 310 311 (rear-nonsticky t font-lock-face "rainbow-delimiters-unmatched-face" fontified t) 311 312 (fontified t) 312 320 (fontified t) 320 321 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 321 334 (fontified t) 334 335 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 335 336 (fontified t) 336 344 (fontified t) 344 345 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 345 350 (fontified t face font-lock-keyword-face) 350 351 (fontified t) 351 352 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 352 370 (fontified t) 370 372 (fontified t face font-lock-string-face) 372 374 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 374 375 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 375 379 (fontified t face font-lock-string-face) 379 381 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 381 382 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 382 387 (fontified t face font-lock-string-face) 387 393 (fontified t) 393 394 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 394 395 (fontified t) 395 405 (fontified t) 405 406 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 406 420 (fontified t) 420 425 (fontified t face font-lock-string-face) 425 426 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 426 427 (rear-nonsticky t font-lock-face "rainbow-delimiters-unmatched-face" fontified t) 427 428 (rear-nonsticky t font-lock-face "rainbow-delimiters-unmatched-face" fontified t) 428 429 (rear-nonsticky t font-lock-face "rainbow-delimiters-unmatched-face" fontified t) 429 430 (rear-nonsticky t font-lock-face "rainbow-delimiters-unmatched-face" fontified t) 430 431 (rear-nonsticky t font-lock-face "rainbow-delimiters-unmatched-face" fontified t) 431 432 (fontified t) 432 433 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 433 455 (fontified t) 455 456 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 456 460 (fontified t) 460 468 (fontified t face font-lock-string-face) 468 469 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 469 471 (fontified t) 471 489 (fontified t) 489 495 (fontified t) 495 496 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 496 497 (fontified t) 497 498 (fontified t)) #("blank" 0 5 (fontified t)) #("uniquify" 0 8 (fontified t)) #("uniquify" 0 8 (face font-lock-function-name-face fontified t)) #("strip-blank-lines" 0 6 (fontified t) 6 12 (fontified t) 12 17 (fontified t)) #("(define-key global-map (kbd \"<f4> s\") 'strip-blank-lines)" 0 1 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 1 23 (fontified t) 23 24 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 24 28 (fontified t) 28 36 (face font-lock-string-face fontified t) 36 37 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 37 56 (fontified t) 56 57 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t)) #(";;; strip-blank-lines
" 0 4 (fontified t face font-lock-comment-delimiter-face) 4 21 (fontified t face font-lock-comment-face) 21 22 (fontified t)) #(";;; strip-blank-lines
(defun strip-blank-lines()
  \"Strip all blank lines in select area of buffer,
if not select any area, then strip all blank lines of buffer.\"
  (interactive)
  (strip-regular-expression-string \"^[ \\t]*\\n\")
  (message \"Have strip blanks line. Wakaka.\"))

(define-key global-map (kbd \"<f4> s\") 'strip-blank-lines)

(defun strip-regular-expression-string (regular-expression)
  \"Strip all string that match REGULAR-EXPRESSION in select area of buffer.
If not select any area, then strip current buffer\"
  (interactive)
  (let ((begin (point-min))             ;initialization make select all buffer
        (end (point-max)))
    (if mark-active                     ;if have select some area of buffer, then strip this area
        (setq begin (region-beginning)
              end (region-end)))
    (save-excursion                                              ;save position
      (goto-char end)                                            ;goto end position
      (while (and (> (point) begin)                              ;when above beginning position
                  (re-search-backward regular-expression nil t)) ;and find string that match regular expression
        (replace-match \"\" t t)))))                               ;replace target string with null
" 0 4 (face font-lock-comment-delimiter-face fontified t) 4 22 (face font-lock-comment-face fontified t) 22 23 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face") 23 28 (face font-lock-keyword-face fontified t) 28 29 (fontified t) 29 46 (face font-lock-function-name-face fontified t) 46 47 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 47 48 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 48 49 (fontified t) 49 51 (fontified t) 51 162 (face font-lock-doc-face fontified t) 162 165 (fontified t) 165 166 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 166 177 (fontified t) 177 178 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 178 181 (fontified t) 181 182 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 182 214 (fontified t) 214 225 (face font-lock-string-face fontified t) 225 226 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 226 227 (fontified t) 227 229 (fontified t) 229 230 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 230 238 (fontified t) 238 271 (face font-lock-string-face fontified t) 271 272 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 272 273 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face") 273 275 (fontified t) 275 276 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face") 276 298 (fontified t) 298 299 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 299 303 (fontified t) 303 311 (face font-lock-string-face fontified t) 311 312 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 312 331 (fontified t) 331 332 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face") 332 334 (fontified t) 334 335 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face") 335 340 (face font-lock-keyword-face fontified t) 340 341 (fontified t) 341 372 (face font-lock-function-name-face fontified t) 372 373 (fontified t) 373 374 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 374 392 (fontified t) 392 393 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 393 396 (fontified t) 396 520 (face font-lock-doc-face fontified t) 520 521 (fontified t) 521 523 (fontified t) 523 524 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 524 535 (fontified t) 535 536 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 536 537 (fontified t) 537 539 (fontified t) 539 540 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 540 543 (face font-lock-keyword-face fontified t) 543 544 (fontified t) 544 545 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face") 545 546 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 546 552 (fontified t) 552 553 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 553 562 (fontified t) 562 563 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 563 564 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 564 577 (fontified t) 577 578 (face font-lock-comment-delimiter-face fontified t) 578 616 (face font-lock-comment-face fontified t) 616 624 (fontified t) 624 625 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 625 629 (fontified t) 629 630 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 630 639 (fontified t) 639 640 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 640 641 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 641 642 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face") 642 647 (fontified t) 647 648 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face") 648 650 (face font-lock-keyword-face fontified t) 650 683 (fontified t) 683 684 (face font-lock-comment-delimiter-face fontified t) 684 741 (face font-lock-comment-face fontified t) 741 749 (fontified t) 749 750 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 750 761 (fontified t) 761 762 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 762 778 (fontified t) 778 779 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 779 798 (fontified t) 798 799 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 799 809 (fontified t) 809 810 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 810 811 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 811 812 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face") 812 817 (fontified t) 817 818 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face") 818 832 (face font-lock-keyword-face fontified t) 832 878 (fontified t) 878 879 (face font-lock-comment-delimiter-face fontified t) 879 893 (face font-lock-comment-face fontified t) 893 899 (fontified t) 899 900 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 900 913 (fontified t) 913 914 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 914 958 (fontified t) 958 959 (face font-lock-comment-delimiter-face fontified t) 959 977 (face font-lock-comment-face fontified t) 977 983 (fontified t) 983 984 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 984 989 (face font-lock-keyword-face fontified t) 989 990 (fontified t) 990 991 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 991 995 (fontified t) 995 996 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 996 998 (fontified t) 998 999 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face") 999 1004 (fontified t) 1004 1005 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face") 1005 1011 (fontified t) 1011 1012 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 1012 1042 (fontified t) 1042 1043 (face font-lock-comment-delimiter-face fontified t) 1043 1073 (face font-lock-comment-face fontified t) 1073 1091 (fontified t) 1091 1092 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 1092 1135 (fontified t) 1135 1136 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 1136 1137 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 1137 1138 (fontified t) 1138 1139 (face font-lock-comment-delimiter-face fontified t) 1139 1185 (face font-lock-comment-face fontified t) 1185 1193 (fontified t) 1193 1194 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 1194 1208 (fontified t) 1208 1210 (face font-lock-string-face fontified t) 1210 1214 (fontified t) 1214 1215 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 1215 1216 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 1216 1217 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face") 1217 1218 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 1218 1219 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face") 1219 1250 (fontified t) 1250 1251 (face font-lock-comment-delimiter-face fontified t) 1251 1283 (face font-lock-comment-face fontified t)) #("spacemacs" 0 9 (face font-lock-function-name-face fontified t)) #("(defun spacemacs/uniquify-lines ()
  \"Remove duplicate adjacent lines in region or current buffer\"
  (interactive)
  (save-excursion
    (save-restriction
      (let ((beg (if (region-active-p) (region-beginning) (point-min)))
            (end (if (region-active-p) (region-end) (point-max))))
        (goto-char beg)
        (while (re-search-forward \"^\\\\(.*\\n\\\\)\\\\1+\" end t)
          (replace-match \"\\\\1\"))))))

" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 31 (face font-lock-function-name-face fontified t) 31 32 (fontified t) 32 33 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 33 34 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 34 37 (fontified t) 37 98 (face font-lock-doc-face fontified t) 98 101 (fontified t) 101 102 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 102 113 (fontified t) 113 114 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 114 117 (fontified t) 117 118 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 118 132 (face font-lock-keyword-face fontified t) 132 137 (fontified t) 137 138 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 138 154 (face font-lock-keyword-face fontified t) 154 161 (fontified t) 161 162 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 162 165 (face font-lock-keyword-face fontified t) 165 166 (fontified t) 166 167 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 167 168 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 168 172 (fontified t) 172 173 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 173 175 (face font-lock-keyword-face fontified t) 175 176 (fontified t) 176 177 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 177 192 (fontified t) 192 193 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 193 194 (fontified t) 194 195 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 195 211 (fontified t) 211 212 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 212 213 (fontified t) 213 214 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 214 223 (fontified t) 223 224 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 224 225 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 225 226 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 226 239 (fontified t) 239 240 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 240 244 (fontified t) 244 245 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 245 247 (face font-lock-keyword-face fontified t) 247 248 (fontified t) 248 249 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 249 264 (fontified t) 264 265 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 265 266 (fontified t) 266 267 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 267 277 (fontified t) 277 278 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 278 279 (fontified t) 279 280 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 280 289 (fontified t) 289 290 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 290 291 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 291 292 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 292 293 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 293 294 (fontified t) 294 302 (fontified t) 302 303 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 303 316 (fontified t) 316 317 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 317 326 (fontified t) 326 327 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 327 332 (face font-lock-keyword-face fontified t) 332 333 (fontified t) 333 334 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 334 352 (fontified t) 352 354 (face font-lock-string-face fontified t) 354 356 (face (font-lock-regexp-grouping-backslash font-lock-string-face) fontified t) 356 357 (face (font-lock-regexp-grouping-construct font-lock-string-face) fontified t) 357 361 (face font-lock-string-face fontified t) 361 363 (face (font-lock-regexp-grouping-backslash font-lock-string-face) fontified t) 363 364 (face (font-lock-regexp-grouping-construct font-lock-string-face) fontified t) 364 369 (face font-lock-string-face fontified t) 369 375 (fontified t) 375 376 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 376 387 (fontified t) 387 388 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 388 402 (fontified t) 402 407 (face font-lock-string-face fontified t) 407 408 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 408 409 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 409 410 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 410 411 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 411 412 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 412 413 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 413 415 (fontified t)) #("(define-key global-map (kbd \"<f11> M\") 'hidden-mode-line-mode)" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 12 (fontified t symbol "f" document ac-symbol-documentation) 12 23 (fontified t document ac-symbol-documentation symbol "v") 23 24 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 24 28 (fontified t) 28 36 (face font-lock-string-face fontified t) 36 37 (face font-lock-string-face fontified t) 37 38 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 38 40 (fontified t) 40 61 (fontified t symbol "v" document ac-symbol-documentation) 61 62 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t)) #("util" 0 4 (face font-lock-constant-face fontified t)) #(";; hide mode line
;; from http://bzg.fr/emacs-hide-mode-line.html
(defvar-local hidden-mode-line-mode nil)
(define-minor-mode hidden-mode-line-mode
  \"Minor mode to hide the mode-line in the current buffer.\"
  :init-value nil
  :global t
  :variable hidden-mode-line-mode
  :group 'editing-basics
  (if hidden-mode-line-mode
      (setq hide-mode-line mode-line-format
            mode-line-format nil)
    (setq mode-line-format hide-mode-line
          hide-mode-line nil))
  (force-mode-line-update)
  ;; Apparently force-mode-line-update is not always enough to
  ;; redisplay the mode-line
  (redraw-display)
  (when (and (called-interactively-p 'interactive)
             hidden-mode-line-mode)
    (run-with-idle-timer
     0 nil 'message
     (concat \"Hidden Mode Line Mode enabled.  \"
             \"Use M-x hidden-mode-line-mode to make the mode-line appear.\"))))

" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 18 (face font-lock-comment-face fontified t) 18 21 (face font-lock-comment-delimiter-face fontified t) 21 66 (face font-lock-comment-face fontified t) 66 67 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face") 67 105 (fontified t) 105 106 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face") 106 107 (fontified t) 107 108 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face") 108 125 (face font-lock-keyword-face fontified t) 125 126 (fontified t) 126 147 (face font-lock-function-name-face fontified t) 147 150 (fontified t) 150 207 (face font-lock-doc-face fontified t) 207 210 (fontified t) 210 221 (face font-lock-builtin-face fontified t) 221 228 (fontified t) 228 235 (face font-lock-builtin-face fontified t) 235 240 (fontified t) 240 249 (face font-lock-builtin-face fontified t) 249 272 (fontified t) 272 274 (fontified t) 274 280 (face font-lock-builtin-face fontified t) 280 299 (fontified t) 299 300 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 300 302 (face font-lock-keyword-face fontified t) 302 325 (fontified t) 325 331 (fontified t) 331 332 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 332 401 (fontified t) 401 402 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 402 407 (fontified t) 407 408 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 408 473 (fontified t) 473 474 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 474 475 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 475 478 (fontified t) 478 479 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 479 501 (fontified t) 501 502 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 502 505 (fontified t) 505 508 (face font-lock-comment-delimiter-face fontified t) 508 566 (face font-lock-comment-face fontified t) 566 568 (fontified t) 568 571 (face font-lock-comment-delimiter-face fontified t) 571 595 (face font-lock-comment-face fontified t) 595 597 (fontified t) 597 598 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 598 612 (fontified t) 612 613 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 613 616 (fontified t) 616 617 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 617 621 (face font-lock-keyword-face fontified t) 621 622 (fontified t) 622 623 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 623 627 (fontified t) 627 628 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 628 663 (fontified t) 663 664 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 664 699 (fontified t) 699 700 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 700 705 (fontified t) 705 706 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 706 751 (fontified t) 751 752 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 752 759 (fontified t) 759 793 (face font-lock-string-face fontified t) 793 794 (fontified t) 794 807 (fontified t) 807 868 (face font-lock-string-face fontified t) 868 869 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 869 870 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 870 871 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 871 872 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 872 874 (fontified t)) " lines.
Omitting...
Omitted 2 lines.
Omitting...
Omitted 2 lines.
Omitting...
Omitted 2 lines.
Omitting...
Omitted 2 lines.
Omitting...
Omitted 2 lines.
Omitting...
Omitted 2 lines.
Mark saved where search started
Mark set
byte-code: End of buffer [3 times]
Mark set
byte-code: Beginning of buffer
Quit
*scratch*: EVALED
Wrote /Users/LooChao/Dropbox/.emacs.d/var/emacs-persistent-scratch
Quit [2 times]
*scratch*: EVALED
Quit [4 times]
Mark set
Quit
Omitting...
Omitted 2 lines.
Omitting...
Omitted 2 lines.
Listing files...
Listing /Users/LooChao/Dropbox/.emacs.dz/spacemacs/layers/+distribution/spacemacs-base/ ... [3 times]
Listing /Users/LooChao/Dropbox/.emacs.dz/spacemacs/layers/+distribution/spacemacs-base/local/helm-spacemacs/ ...
Listing /Users/LooChao/Dropbox/.emacs.dz/spacemacs/layers/+distribution/spacemacs-base/local/ ...
Listing /Users/LooChao/Dropbox/.emacs.dz/spacemacs/layers/+distribution/spacemacs-base/local/holy-mode/ ...
Listing /Users/LooChao/Dropbox/.emacs.dz/spacemacs/layers/+distribution/spacemacs-base/local/ ...
Listing /Users/LooChao/Dropbox/.emacs.dz/spacemacs/layers/+distribution/spacemacs-base/local/hybrid-mode/ ...
Listing /Users/LooChao/Dropbox/.emacs.dz/spacemacs/layers/+distribution/spacemacs-base/local/ ...
Listing /Users/LooChao/Dropbox/.emacs.dz/spacemacs/layers/+distribution/spacemacs-base/ ... [2 times]
Listing files done!
Searching 1/7 (0 matches) : config.el ...
Searching 2/7 (1 matches) : funcs.el ...
Searching 3/7 (5 matches) : keybindings.el ...
Searching 4/7 (7 matches) : local/helm-spacemacs/helm-spacemacs.el ...
Searching 5/7 (7 matches) : local/holy-mode/holy-mode.el ...
Searching 6/7 (7 matches) : local/hybrid-mode/hybrid-mode.el ...
Searching 7/7 (7 matches) : packages.el ...
Searching done!
8 matches
Mark set [2 times]
Quit
let: Wrong type argument: commandp, nil
Omitting...
Omitted 5 lines.
Omitting...
Omitted 4 lines.
Auto-saving...done
Omitting...
Omitted 5 lines.
[yas] snippet expanded.
[yas] Snippet 0 exited.
Saving file /Users/LooChao/Dropbox/.emacs.d/rc/lch-util.el...
Wrote /Users/LooChao/Dropbox/.emacs.d/rc/lch-util.el
Omitting...
Omitted 3 lines.
Quit
Mark set
Mark saved where search started
let: Wrong type argument: commandp, nil
Mark set
Auto-saving...done
Mark set
Omitting...
Omitted 4 lines.
Mark set
Saving file /Users/LooChao/Dropbox/.emacs.d/rc/lch-util.el...
Wrote /Users/LooChao/Dropbox/.emacs.d/rc/lch-util.el
Omitting...
Omitted 4 lines.
Mark set
Saving file /Users/LooChao/Dropbox/.emacs.d/rc/lch-evil.el...
Wrote /Users/LooChao/Dropbox/.emacs.d/rc/lch-evil.el
(No changes need to be saved) [2 times]
lch-evil.el: EVALED
Omitting...
Omitted 2 lines.
Quit
Omitting...
Omitted 3 lines.
Saving file /Users/LooChao/Dropbox/.emacs.d/rc/lch-evil.el...
Wrote /Users/LooChao/Dropbox/.emacs.d/rc/lch-evil.el
Omitting...
Omitted 2 lines.
(No changes need to be saved)
Listing files...
Listing /Users/LooChao/Dropbox/.emacs.d/rc/ ... [37 times]
Listing files done!
Searching 1/37 (0 matches) : color-theme-lazycat.el ...
Searching 2/37 (20 matches) : color-theme-loochao.el ...
Searching 3/37 (28 matches) : dotEmacs ...
Searching 4/37 (29 matches) : lch-aqua-custom.el ...
Searching 5/37 (29 matches) : lch-aquamacs.el ...
Searching 6/37 (29 matches) : lch-auto-complete.el ...
Searching 7/37 (29 matches) : lch-binding.el ...
Searching 8/37 (30 matches) : lch-bmk.el ...
Searching 9/37 (30 matches) : lch-coding.el ...
Searching 10/37 (30 matches) : lch-core.el ...
Searching 11/37 (30 matches) : lch-custom.el ...
Searching 12/37 (30 matches) : lch-dired.el ...
Searching 13/37 (31 matches) : lch-elisp.el ...
Searching 14/37 (37 matches) : lch-emms.el ...
Searching 15/37 (37 matches) : lch-env.el ...
Searching 16/37 (37 matches) : lch-evil.el ...
Searching 17/37 (37 matches) : lch-gnus.el ...
Searching 18/37 (37 matches) : lch-helm.el ...
Searching 19/37 (37 matches) : lch-hydra.el ...
Searching 20/37 (37 matches) : lch-ibuffer.el ...
Searching 21/37 (37 matches) : lch-inbox.el ...
Searching 22/37 (37 matches) : lch-init.el ...
Searching 23/37 (38 matches) : lch-lab.el ...
Searching 24/37 (38 matches) : lch-mac.el ...
Searching 25/37 (38 matches) : lch-network.el ...
Searching 26/37 (38 matches) : lch-one-key.el ...
Searching 27/37 (38 matches) : lch-org.el ...
Searching 28/37 (38 matches) : lch-ox.el ...
Searching 29/37 (39 matches) : lch-pgm.el ...
Searching 30/37 (46 matches) : lch-powerline-theme.el ...
Searching 31/37 (46 matches) : lch-startup-buffer.el ...
Searching 32/37 (46 matches) : lch-ui.el ...
Searching 33/37 (46 matches) : lch-util.el ...
Searching 34/37 (46 matches) : lch-var.el ...
Searching 35/37 (46 matches) : lch-viper.el ...
Searching 36/37 (46 matches) : lch-w32.el ...
Searching 37/37 (46 matches) : lch-web.el ...
Searching done!
46 matches
Mark set
Omitting...
Omitted 3 lines.
Quit
Saving file /Users/LooChao/Dropbox/.emacs.d/rc/lch-pgm.el...
Wrote /Users/LooChao/Dropbox/.emacs.d/rc/lch-pgm.el
Omitting...
Omitted 2 lines.
Quit
(No changes need to be saved)
Buffer \"*ansi-term*\" has a running process; kill it? (y or n)  y
Omitting...
Omitted 3 lines.
Omitting...
Omitted 5 lines.
Mark set
Saving file /Users/LooChao/Dropbox/.emacs.dz/spacemacs/layers/+distribution/spacemacs-base/funcs.el...
Wrote /Users/LooChao/Dropbox/.emacs.dz/spacemacs/layers/+distribution/spacemacs-base/funcs.el
Omitting...
Omitted 2 lines.
Omitting...
Omitted 5 lines.
Buffer \"*terminal<1>*\" has a running process; kill it? (y or n)  y
Mark set
Auto-saving...done
Omitting...
Omitted 4 lines.
Auto-saving...done
Auto-saving...done
Auto-saving...done
Quit
Auto-saving...done
Auto-saving...done
Mark set
let: Wrong type argument: commandp, nil [2 times]
Saving file /Users/LooChao/Dropbox/.emacs.d/rc/lch-pgm.el...
Wrote /Users/LooChao/Dropbox/.emacs.d/rc/lch-pgm.el
Omitting...
Omitted 3 lines.
Saving file /Users/LooChao/Dropbox/.emacs.d/rc/lch-pgm.el...
Wrote /Users/LooChao/Dropbox/.emacs.d/rc/lch-pgm.el
Omitting...
Omitted 2 lines.
Missing closing delimiter: )
Omitting...
Omitted 3 lines.
lch-highlight-special-keywords
Auto-saving...done
Omitting...
Omitted 4 lines.
Saving file /Users/LooChao/Dropbox/.emacs.d/rc/lch-pgm.el...
Wrote /Users/LooChao/Dropbox/.emacs.d/rc/lch-pgm.el
Entering debugger...
Omitting...
Omitted 2 lines.
Omitting...
Omitted 3 lines.
Saving file /Users/LooChao/Dropbox/.emacs.d/rc/lch-pgm.el...
Wrote /Users/LooChao/Dropbox/.emacs.d/rc/lch-pgm.el
Omitting...
Omitted 2 lines.
Mark set
Saving file /Users/LooChao/Dropbox/.emacs.d/rc/lch-pgm.el...
Wrote /Users/LooChao/Dropbox/.emacs.d/rc/lch-pgm.el
Omitting...
Omitted 2 lines.
Mark set
Quit
Listing files...
Listing /Users/LooChao/Dropbox/.emacs.d/rc/ ... [37 times]
Listing files done!
Searching 1/37 (0 matches) : color-theme-lazycat.el ...
Searching 2/37 (0 matches) : color-theme-loochao.el ...
Searching 3/37 (0 matches) : dotEmacs ...
Searching 4/37 (0 matches) : lch-aqua-custom.el ...
Searching 5/37 (0 matches) : lch-aquamacs.el ...
Searching 6/37 (0 matches) : lch-auto-complete.el ...
Searching 7/37 (0 matches) : lch-binding.el ...
Searching 8/37 (2 matches) : lch-bmk.el ...
Searching 9/37 (2 matches) : lch-coding.el ...
Searching 10/37 (2 matches) : lch-core.el ...
Searching 11/37 (2 matches) : lch-custom.el ...
Searching 12/37 (2 matches) : lch-dired.el ...
Searching 13/37 (2 matches) : lch-elisp.el ...
Searching 14/37 (2 matches) : lch-emms.el ...
Searching 15/37 (2 matches) : lch-env.el ...
Searching 16/37 (2 matches) : lch-evil.el ...
Searching 17/37 (2 matches) : lch-gnus.el ...
Searching 18/37 (2 matches) : lch-helm.el ...
Searching 19/37 (2 matches) : lch-hydra.el ...
Searching 20/37 (2 matches) : lch-ibuffer.el ...
Searching 21/37 (2 matches) : lch-inbox.el ...
Searching 22/37 (2 matches) : lch-init.el ...
Searching 23/37 (2 matches) : lch-lab.el ...
Searching 24/37 (2 matches) : lch-mac.el ...
Searching 25/37 (2 matches) : lch-network.el ...
Searching 26/37 (2 matches) : lch-one-key.el ...
Searching 27/37 (3 matches) : lch-org.el ...
Searching 28/37 (3 matches) : lch-ox.el ...
Searching 29/37 (3 matches) : lch-pgm.el ...
Searching 30/37 (3 matches) : lch-powerline-theme.el ...
Searching 31/37 (3 matches) : lch-startup-buffer.el ...
Searching 32/37 (3 matches) : lch-ui.el ...
Searching 33/37 (3 matches) : lch-util.el ...
Searching 34/37 (3 matches) : lch-var.el ...
Searching 35/37 (3 matches) : lch-viper.el ...
Searching 36/37 (3 matches) : lch-w32.el ...
Searching 37/37 (3 matches) : lch-web.el ...
Searching done!
6 matches
Listing files...
Listing /Users/LooChao/Dropbox/.emacs.d/rc/ ... [37 times]
Listing files done!
Searching 1/37 (0 matches) : color-theme-lazycat.el ...
Searching 2/37 (0 matches) : color-theme-loochao.el ...
Searching 3/37 (0 matches) : dotEmacs ...
Searching 4/37 (0 matches) : lch-aqua-custom.el ...
Searching 5/37 (0 matches) : lch-aquamacs.el ...
Searching 6/37 (2 matches) : lch-auto-complete.el ...
Searching 7/37 (4 matches) : lch-binding.el ...
Searching 8/37 (11 matches) : lch-bmk.el ...
Searching 9/37 (11 matches) : lch-coding.el ...
Searching 10/37 (11 matches) : lch-core.el ...
Searching 11/37 (11 matches) : lch-custom.el ...
Searching 12/37 (11 matches) : lch-dired.el ...
Searching 13/37 (17 matches) : lch-elisp.el ...
Searching 14/37 (33 matches) : lch-emms.el ...
Searching 15/37 (33 matches) : lch-env.el ...
Searching 16/37 (33 matches) : lch-evil.el ...
Searching 17/37 (33 matches) : lch-gnus.el ...
Searching 18/37 (33 matches) : lch-helm.el ...
Searching 19/37 (33 matches) : lch-hydra.el ...
Searching 20/37 (33 matches) : lch-ibuffer.el ...
Searching 21/37 (33 matches) : lch-inbox.el ...
Searching 22/37 (33 matches) : lch-init.el ...
Searching 23/37 (33 matches) : lch-lab.el ...
Searching 24/37 (33 matches) : lch-mac.el ...
Searching 25/37 (33 matches) : lch-network.el ...
Searching 26/37 (33 matches) : lch-one-key.el ...
Searching 27/37 (33 matches) : lch-org.el ...
Searching 28/37 (33 matches) : lch-ox.el ...
Searching 29/37 (34 matches) : lch-pgm.el ...
Searching 30/37 (34 matches) : lch-powerline-theme.el ...
Searching 31/37 (34 matches) : lch-startup-buffer.el ...
Searching 32/37 (34 matches) : lch-ui.el ...
Searching 33/37 (34 matches) : lch-util.el ...
Searching 34/37 (56 matches) : lch-var.el ...
Searching 35/37 (56 matches) : lch-viper.el ...
Searching 36/37 (56 matches) : lch-w32.el ...
Searching 37/37 (56 matches) : lch-web.el ...
Searching done!
59 matches
Mark set
Wrote /Users/LooChao/Dropbox/.emacs.d/var/emacs-persistent-scratch
Saving file /Users/LooChao/Dropbox/.emacs.d/var/emacs.recentf...
Wrote /Users/Loo" #("[1,
 2,
 3,
 4,
 5,
 6,
 7,
 8,
 9,
 10,
 11,
 12,
 13,
 14,
 15,
 16,
 17,
 18,
 19,
 20,
 21,
 22,
 23]" 0 1 (inhibit-line-move-field-capture t field output front-sticky (field inhibit-line-move-field-capture) rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 101 (inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky (field inhibit-line-move-field-capture) fontified t) 101 104 (inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky (field inhibit-line-move-field-capture) fontified t) 104 105 (inhibit-line-move-field-capture t field output front-sticky (field inhibit-line-move-field-capture) rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t)) "1 2 3 4 5 7 8 9" "6" "Stenosis2" "case" "Velocity 2 = Real 0.00" #("
" 0 1 (yank-handler (evil-yank-line-handler))) "! Velocity 1 = Real -0.01
" "66 67 68 69" "! External Pressure = 20
" "! Velocity 1 = Real 0.01
" "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65" #("Steady State Convergence Tolerance = 1.0e-4
" 0 44 (yank-handler (evil-yank-line-handler))) "6" "5" "Velocity 1 = 0.0" "Manifold_Mesh" "case" "1" "Velocity 1 = 0.0" #("
" 0 1 (yank-handler (evil-yank-line-handler))) "Normal-Tangential Velocity = True" "


" "


" "

" "yingzheh@princeton.edu" "dylrin1986@gmail.com" #("princebia10," 0 12 (fontified t org-category "iPrv")) "Velocity 1 = 0.0
Velocity 2 = 0.0  
" "





! symmetriy
Boundary Condition 3
  
Target Boundaries = 4  
Velocity 1 = 0.0
  
End

! Wall " "  
" "External Pressure = 50.0
  
" "
" "  
" "

" "  
" "  
" "  
" "  
" "  
" "  
" "  
" "  
" "  
" "  
" "  
" "  
" "  
" "



" "
" "
" "  
" "  
" "Material 1
   
Density = 1000.0
   
Viscosity = 0.004
   
End" "

" "Stenosis" "Coordinate System = Axi Symmetric
  
" "  
" "
" #("Constants

" 0 11 (yank-handler (evil-yank-line-handler))) #("
" 0 1 (yank-handler (evil-yank-line-handler))) #("
" 0 1 (yank-handler (evil-yank-line-handler))) #("
" 0 1 (yank-handler (evil-yank-line-handler))) "  
" #("Tube" 0 4 (face diredp-dir-priv fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) "Tube" #("Tube" 0 4 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) #("test5" 0 5 (face diredp-dir-priv fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) #("SimpleTube" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t)) #("test3_NSSolver/" 0 6 (fontified t) 6 15 (fontified t)) #("test5_SimpleChannel" 0 19 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) "Velocity 1 = 0.0
Velocity 2 = 0.0  
" "Velocity 1 = Real 0.0
Velocity 2 = Real 0.0
Velocity 3 = Real 0.0  " "





! symmetriy
Boundary Condition 3
  
Target Boundaries = 4  
Velocity 1 = 0.0
  
End
" #("
" 0 1 (yank-handler (evil-yank-line-handler))) #("
" 0 1 (yank-handler (evil-yank-line-handler))) #("
" 0 1 (yank-handler (evil-yank-line-handler))) #("External Pressure = 50.0
" 0 25 (yank-handler (evil-yank-line-handler))) "External Pressure = 13789.5" "

" "

" "  
" "  
" "  
" "  
" "  
" "  
" #("  
" 0 3 (yank-handler (evil-yank-line-handler))) #("  
" 0 3 (yank-handler (evil-yank-line-handler))) #("  
" 0 3 (yank-handler (evil-yank-line-handler))) #("  
" 0 3 (yank-handler (evil-yank-line-handler))) #("  
" 0 3 (yank-handler (evil-yank-line-handler))) #("  
" 0 3 (yank-handler (evil-yank-line-handler))) #("  
" 0 3 (yank-handler (evil-yank-line-handler))) #("Solver 1
  
" 0 12 (yank-handler (evil-yank-line-handler))) #("
" 0 1 (yank-handler (evil-yank-line-handler))) #("
" 0 1 (yank-handler (evil-yank-line-handler))) #("
" 0 1 (yank-handler (evil-yank-line-handler))) "Material 1

Name = \"Water (room temperature)\"
Viscosity = Real 1.002e-3
Density = Real 998.3 
   
End" "Coordinate System = Axi Symmetric
" "Coordinate System = Cartesian 3D  " #("*** ACTIVE Leecode                                                                    :#A:
" 0 2 (face org-hide fontified t org-category-position 646 org-category #("TODO-#A" 0 7 (face org-property-value fontified t org-category-position 646 org-category "iPrv"))) 2 4 (face org-level-3 fontified t org-category-position 646 org-category #("TODO-#A" 0 7 (face org-property-value fontified t org-category-position 646 org-category "iPrv"))) 4 10 (face (:foreground "Cyan" :weight bold) fontified t org-category-position 646 org-category #("TODO-#A" 0 7 (face org-property-value fontified t org-category-position 646 org-category "iPrv"))) 10 86 (face org-level-3 fontified t org-category-position 646 org-category #("TODO-#A" 0 7 (face org-property-value fontified t org-category-position 646 org-category "iPrv"))) 86 87 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t face (org-tag org-level-3) fontified t org-category-position 646 org-category #("TODO-#A" 0 7 (face org-property-value fontified t org-category-position 646 org-category "iPrv"))) 87 89 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t face (:foreground "OrangeRed" :weight bold) fontified t org-category-position 646 org-category #("TODO-#A" 0 7 (face org-property-value fontified t org-category-position 646 org-category "iPrv")) font-lock-fontified t) 89 90 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t face (org-tag org-level-3) fontified t org-category-position 646 org-category #("TODO-#A" 0 7 (face org-property-value fontified t org-category-position 646 org-category "iPrv")) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 90 91 (fontified t org-category-position 646 org-category #("TODO-#A" 0 7 (face org-property-value fontified t org-category-position 646 org-category "iPrv")))) #("*** ACTIVE Leecode                                                                    :#A:
" 0 2 (face org-hide fontified t org-category-position 646 org-category #("TODO-#A" 0 7 (face org-property-value fontified t org-category-position 646 org-category "iPrv"))) 2 4 (face org-level-3 fontified t org-category-position 646 org-category #("TODO-#A" 0 7 (face org-property-value fontified t org-category-position 646 org-category "iPrv"))) 4 10 (face (:foreground "Cyan" :weight bold) fontified t org-category-position 646 org-category #("TODO-#A" 0 7 (face org-property-value fontified t org-category-position 646 org-category "iPrv"))) 10 86 (face org-level-3 fontified t org-category-position 646 org-category #("TODO-#A" 0 7 (face org-property-value fontified t org-category-position 646 org-category "iPrv"))) 86 87 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t face (org-tag org-level-3) fontified t org-category-position 646 org-category #("TODO-#A" 0 7 (face org-property-value fontified t org-category-position 646 org-category "iPrv"))) 87 89 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t face (:foreground "OrangeRed" :weight bold) fontified t org-category-position 646 org-category #("TODO-#A" 0 7 (face org-property-value fontified t org-category-position 646 org-category "iPrv")) font-lock-fontified t) 89 90 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-no-flyspell t face (org-tag org-level-3) fontified t org-category-position 646 org-category #("TODO-#A" 0 7 (face org-property-value fontified t org-category-position 646 org-category "iPrv")) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 90 91 (fontified t org-category-position 646 org-category #("TODO-#A" 0 7 (face org-property-value fontified t org-category-position 646 org-category "iPrv")))) #("          (agenda \"Week Agenda\" ((org-agenda-ndays 6)
                                 (org-agenda-sorting-strategy
                                  (quote ((agenda time-up priority-down tag-up))))
                                 (org-deadline-warning-days 0)
                                 (org-agenda-overriding-header
                                  \"\\n;>--------AGENDA--------<;\")))
 
" 0 10 (fontified t) 10 11 (font-lock-face "rainbow-delimiters-depth-5-face" fontified t rear-nonsticky t) 11 18 (fontified t) 18 31 (face font-lock-string-face fontified t) 31 32 (fontified t) 32 33 (font-lock-face "rainbow-delimiters-depth-6-face" fontified t rear-nonsticky t) 33 34 (font-lock-face "rainbow-delimiters-depth-7-face" fontified t rear-nonsticky t) 34 52 (fontified t) 52 53 (font-lock-face "rainbow-delimiters-depth-7-face" fontified t rear-nonsticky t) 53 54 (fontified t) 54 87 (fontified t) 87 88 (rear-nonsticky t fontified t font-lock-face "rainbow-delimiters-depth-5-face") 88 115 (fontified t) 115 116 (fontified t) 116 150 (fontified t) 150 151 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 151 157 (fontified t) 157 158 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 158 159 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 159 194 (fontified t) 194 195 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 195 196 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 196 197 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 197 198 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 198 199 (fontified t) 199 232 (fontified t) 232 233 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 233 260 (fontified t) 260 261 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 261 262 (fontified t) 262 295 (fontified nil) 295 296 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 296 324 (fontified nil) 324 325 (fontified t) 325 359 (fontified t) 359 389 (fontified t face font-lock-string-face) 389 390 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 390 391 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 391 392 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 392 393 (fontified t) 393 394 (rear-nonsticky t fontified t) 394 395 (fontified t)) #("          (agenda \"Week Agenda\" ((org-agenda-ndays 12)
                                 (org-agenda-sorting-strategy
                                  (quote ((agenda time-up priority-down tag-up))))
                                 (org-deadline-warning-days 0)
                                 (org-agenda-overriding-header
                                  \"\\n;>--------AGENDA--------<;\")))
 " 0 10 (fontified t) 10 11 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 11 18 (fontified t) 18 31 (face font-lock-string-face fontified t) 31 32 (fontified t) 32 33 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 33 34 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 34 53 (fontified t) 53 54 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 54 88 (fontified t) 88 89 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 89 151 (fontified t) 151 152 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 152 158 (fontified t) 158 159 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 159 160 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 160 195 (fontified t) 195 196 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 196 197 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 197 198 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 198 199 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 199 233 (fontified t) 233 234 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 234 261 (fontified t) 261 262 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 262 296 (fontified t) 296 297 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 297 360 (fontified t) 360 390 (face font-lock-string-face fontified t) 390 391 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 391 392 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 392 393 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 393 395 (fontified t)) #("
" 0 1 (fontified t rear-nonsticky t)) #("spacemacs/" 0 10 (face font-lock-function-name-face fontified t)) #("(defun spacemacs/open-in-external-app ()
  \"Open current file in external application.\"
  (interactive)
  (let ((file-path (if (eq major-mode 'dired-mode)
                       (dired-get-file-for-visit)
                     (buffer-file-name))))
    (if file-path
        (cond
         ((spacemacs/system-is-mswindows) (w32-shell-execute \"open\" (replace-regexp-in-string \"/\" \"\\\\\\\\\" file-path)))
         ((spacemacs/system-is-mac) (shell-command (format \"open \\\"%s\\\"\" file-path)))
         ((spacemacs/system-is-linux) (let ((process-connection-type nil))
                              (start-process \"\" nil \"xdg-open\" file-path))))
      (message \"No file associated to this buffer.\"))))

" 0 1 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face") 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 37 (face font-lock-function-name-face fontified t) 37 38 (fontified t) 38 39 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 39 40 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 40 43 (fontified t) 43 87 (face font-lock-doc-face fontified t) 87 90 (fontified t) 90 91 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 91 102 (fontified t) 102 103 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 103 106 (fontified t) 106 107 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 107 110 (face font-lock-keyword-face fontified t) 110 111 (fontified t) 111 112 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face") 112 113 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 113 123 (fontified t) 123 124 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 124 126 (face font-lock-keyword-face fontified t) 126 127 (fontified t) 127 128 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 128 153 (fontified t) 153 154 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 154 178 (fontified t) 178 179 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 179 203 (fontified t) 203 204 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 204 226 (fontified t) 226 227 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 227 243 (fontified t) 243 244 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 244 245 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 245 246 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 246 247 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face") 247 252 (fontified t) 252 253 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face") 253 255 (face font-lock-keyword-face fontified t) 255 274 (fontified t) 274 275 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face") 275 279 (face font-lock-keyword-face fontified t) 279 289 (fontified t) 289 290 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 290 291 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 291 320 (fontified t) 320 321 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 321 322 (fontified t) 322 323 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 323 341 (fontified t) 341 347 (face font-lock-string-face fontified t) 347 348 (fontified t) 348 349 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face") 349 374 (fontified t) 374 377 (face font-lock-string-face fontified t) 377 378 (fontified t) 378 384 (face font-lock-string-face fontified t) 384 394 (fontified t) 394 395 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face") 395 396 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 396 397 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face") 397 398 (fontified t) 398 407 (fontified t) 407 408 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 408 409 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 409 432 (fontified t) 432 433 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 433 434 (fontified t) 434 435 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 435 449 (fontified t) 449 450 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 450 457 (fontified t) 457 470 (face font-lock-string-face fontified t) 470 480 (fontified t) 480 481 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 481 482 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 482 483 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 483 493 (fontified t) 493 494 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 494 495 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 495 520 (fontified t) 520 521 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 521 522 (fontified t) 522 523 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 523 526 (face font-lock-keyword-face fontified t) 526 527 (fontified t) 527 528 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 528 529 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 529 556 (fontified t) 556 557 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 557 558 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 558 589 (fontified t) 589 590 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 590 604 (fontified t) 604 606 (face font-lock-string-face fontified t) 606 611 (fontified t) 611 621 (face font-lock-string-face fontified t) 621 631 (fontified t) 631 632 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 632 633 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 633 634 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 634 635 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 635 636 (fontified t) 636 642 (fontified t) 642 643 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 643 651 (fontified t) 651 687 (face font-lock-string-face fontified t) 687 688 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 688 689 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 689 690 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 690 691 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 691 692 (fontified t) 692 693 (fontified t)) #("(defun spacemacs/highlight-TODO-words ()
  \"Highlight keywords for  \"
  (interactive)
  (font-lock-add-keywords
   nil '((\"\\\\<\\\\(\\\\(FIX\\\\(ME\\\\)?\\\\|TODO\\\\|OPTIMIZE\\\\|HACK\\\\|REFACTOR\\\\):\\\\)\"
          1 font-lock-warning-face t))))

" 0 1 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 37 (face font-lock-function-name-face fontified t) 37 38 (fontified t) 38 39 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 39 40 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 40 41 (fontified t) 41 43 (fontified t) 43 69 (fontified t face font-lock-string-face) 69 70 (fontified t) 70 72 (fontified t) 72 73 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 73 84 (fontified t) 84 85 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 85 86 (fontified t) 86 88 (fontified t) 88 89 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 89 111 (fontified t) 111 112 (fontified t) 112 120 (fontified t) 120 121 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 121 122 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 122 126 (fontified t face font-lock-string-face) 126 128 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 128 129 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 129 131 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 131 132 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 132 135 (fontified t face font-lock-string-face) 135 137 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 137 138 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 138 140 (fontified t face font-lock-string-face) 140 142 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 142 143 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 143 144 (fontified t face font-lock-string-face) 144 146 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 146 147 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 147 151 (fontified t face font-lock-string-face) 151 153 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 153 154 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 154 162 (fontified t face font-lock-string-face) 162 164 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 164 165 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 165 169 (fontified t face font-lock-string-face) 169 171 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 171 172 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 172 180 (fontified t face font-lock-string-face) 180 182 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 182 183 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 183 184 (fontified t face font-lock-string-face) 184 186 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 186 187 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 187 188 (fontified t face font-lock-string-face) 188 189 (fontified t) 189 225 (fontified t) 225 226 (rear-nonsticky t font-lock-face "rainbow-delimiters-unmatched-face" fontified t) 226 227 (rear-nonsticky t font-lock-face "rainbow-delimiters-unmatched-face" fontified t) 227 228 (rear-nonsticky t font-lock-face "rainbow-delimiters-unmatched-face" fontified t) 228 229 (rear-nonsticky t font-lock-face "rainbow-delimiters-unmatched-face" fontified t) 229 230 (fontified t) 230 231 (fontified t)) #("\"\\\\<\\\\(\\\\(FIX\\\\(ME\\\\)?\\\\|TODO\\\\|OPTIMIZE\\\\|HACK\\\\|REFACTOR\\\\):\\\\)\"
" 0 4 (face font-lock-string-face fontified t) 4 6 (face (font-lock-regexp-grouping-backslash font-lock-string-face) fontified t) 6 7 (face (font-lock-regexp-grouping-construct font-lock-string-face) fontified t) 7 9 (face (font-lock-regexp-grouping-backslash font-lock-string-face) fontified t) 9 10 (face (font-lock-regexp-grouping-construct font-lock-string-face) fontified t) 10 13 (face font-lock-string-face fontified t) 13 15 (face (font-lock-regexp-grouping-backslash font-lock-string-face) fontified t) 15 16 (face (font-lock-regexp-grouping-construct font-lock-string-face) fontified t) 16 18 (face font-lock-string-face fontified t) 18 20 (face (font-lock-regexp-grouping-backslash font-lock-string-face) fontified t) 20 21 (face (font-lock-regexp-grouping-construct font-lock-string-face) fontified t) 21 22 (face font-lock-string-face fontified t) 22 24 (face (font-lock-regexp-grouping-backslash font-lock-string-face) fontified t) 24 25 (face (font-lock-regexp-grouping-construct font-lock-string-face) fontified t) 25 29 (face font-lock-string-face fontified t) 29 31 (face (font-lock-regexp-grouping-backslash font-lock-string-face) fontified t) 31 32 (face (font-lock-regexp-grouping-construct font-lock-string-face) fontified t) 32 40 (face font-lock-string-face fontified t) 40 42 (face (font-lock-regexp-grouping-backslash font-lock-string-face) fontified t) 42 43 (face (font-lock-regexp-grouping-construct font-lock-string-face) fontified t) 43 47 (face font-lock-string-face fontified t) 47 49 (face (font-lock-regexp-grouping-backslash font-lock-string-face) fontified t) 49 50 (face (font-lock-regexp-grouping-construct font-lock-string-face) fontified t) 50 58 (face font-lock-string-face fontified t) 58 60 (face (font-lock-regexp-grouping-backslash font-lock-string-face) fontified t) 60 61 (face (font-lock-regexp-grouping-construct font-lock-string-face) fontified t) 61 62 (face font-lock-string-face fontified t) 62 64 (face (font-lock-regexp-grouping-backslash font-lock-string-face) fontified t) 64 65 (face (font-lock-regexp-grouping-construct font-lock-string-face) fontified t) 65 66 (face font-lock-string-face fontified t) 66 67 (fontified t)) #("\"\\\\<\\\\(FIXME\\\\)\" " 0 4 (face font-lock-string-face fontified t) 4 6 (face (font-lock-regexp-grouping-backslash font-lock-string-face) fontified t) 6 7 (face (font-lock-regexp-grouping-construct font-lock-string-face) fontified t) 7 12 (face font-lock-fixme-face fontified t) 12 14 (face (font-lock-regexp-grouping-backslash font-lock-string-face) fontified t) 14 15 (face (font-lock-regexp-grouping-construct font-lock-string-face) fontified t) 15 16 (face font-lock-string-face fontified t) 16 17 (fontified t)) #("
" 0 1 (fontified t)) #("(\"\\\\<\\\\(TODOs\\\\)\"  1 'font-lock-todo-face  t))" 0 1 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 1 5 (face font-lock-string-face fontified t) 5 7 (face (font-lock-regexp-grouping-backslash font-lock-string-face) fontified t) 7 8 (face (font-lock-regexp-grouping-construct font-lock-string-face) fontified t) 8 13 (face font-lock-todo-face fontified t) 13 15 (face (font-lock-regexp-grouping-backslash font-lock-string-face) fontified t) 15 16 (face (font-lock-regexp-grouping-construct font-lock-string-face) fontified t) 16 17 (face font-lock-string-face fontified t) 17 44 (fontified t) 44 45 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face") 45 46 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face")) #("(defun spacemacs/highlight-TODO-words ()
  \"Highlight keywords for  \"
  (interactive)
  (font-lock-add-keywords
   nil '((\"\\\\<\\\\(\\\\(FIX\\\\(ME\\\\)?\\\\|TODO\\\\|OPTIMIZE\\\\|HACK\\\\|REFACTOR\\\\):\\\\)\"
          1 font-lock-warning-face t))))" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 37 (face font-lock-function-name-face fontified t) 37 38 (fontified t) 38 39 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 39 40 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 40 41 (fontified t) 41 43 (fontified t) 43 69 (fontified t face font-lock-string-face) 69 70 (fontified t) 70 72 (fontified t) 72 73 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 73 84 (fontified t) 84 85 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 85 86 (fontified t) 86 88 (fontified t) 88 89 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 89 111 (fontified t) 111 112 (fontified t) 112 120 (fontified t) 120 121 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 121 122 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 122 126 (fontified t face font-lock-string-face) 126 128 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 128 129 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 129 131 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 131 132 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 132 135 (fontified t face font-lock-string-face) 135 137 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 137 138 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 138 140 (fontified t face font-lock-string-face) 140 142 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 142 143 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 143 144 (fontified t face font-lock-string-face) 144 146 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 146 147 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 147 151 (fontified t face font-lock-string-face) 151 153 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 153 154 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 154 162 (fontified t face font-lock-string-face) 162 164 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 164 165 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 165 169 (fontified t face font-lock-string-face) 169 171 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 171 172 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 172 180 (fontified t face font-lock-string-face) 180 182 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 182 183 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 183 184 (fontified t face font-lock-string-face) 184 186 (fontified t face (font-lock-regexp-grouping-backslash font-lock-string-face)) 186 187 (fontified t face (font-lock-regexp-grouping-construct font-lock-string-face)) 187 188 (fontified t face font-lock-string-face) 188 189 (fontified t) 189 225 (fontified t) 225 226 (fontified t font-lock-face "rainbow-delimiters-unmatched-face" rear-nonsticky t) 226 227 (fontified t font-lock-face "rainbow-delimiters-unmatched-face" rear-nonsticky t) 227 228 (fontified t font-lock-face "rainbow-delimiters-unmatched-face" rear-nonsticky t) 228 229 (fontified t font-lock-face "rainbow-delimiters-unmatched-face" rear-nonsticky t)) #("spacemacs/alternate-buffer ()" 0 26 (face font-lock-function-name-face fontified t) 26 27 (fontified t) 27 28 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 28 29 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t)) #("shell-command" 0 6 (fontified t) 6 13 (fontified t)) #("(evil-leader/set-key \"!\" 'shell-command)" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 21 (fontified t) 21 24 (face font-lock-string-face fontified t) 24 39 (fontified t) 39 40 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t)) #("(defun spacemacs/alternate-buffer ()
  \"Switch back and forth between current and last buffer in the
current window.\"
  (interactive)
  (if (evil-alternate-buffer)
      (switch-to-buffer (car (evil-alternate-buffer)))
    (switch-to-buffer (other-buffer (current-buffer) t))))

" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 33 (face font-lock-function-name-face fontified t) 33 34 (fontified t) 34 35 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 35 36 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 36 39 (fontified t) 39 117 (face font-lock-doc-face fontified t) 117 120 (fontified t) 120 121 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 121 132 (fontified t) 132 133 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 133 136 (fontified t) 136 137 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 137 139 (face font-lock-keyword-face fontified t) 139 140 (fontified t) 140 141 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 141 162 (fontified t) 162 163 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 163 170 (fontified t) 170 171 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 171 188 (fontified t) 188 189 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 189 193 (fontified t) 193 194 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 194 215 (fontified t) 215 216 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 216 217 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 217 218 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 218 223 (fontified t) 223 224 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 224 241 (fontified t) 241 242 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 242 255 (fontified t) 255 256 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 256 270 (fontified t) 270 271 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 271 273 (fontified t) 273 274 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 274 275 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 275 276 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 276 277 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 277 279 (fontified t)) #(";;; funcs.el --- Spacemacs Base Layer functions File
;;
;; Copyright (c) 2012-2014 Sylvain Benner
;; Copyright (c) 2014-2015 Sylvain Benner & Contributors
;;
;; Author: Sylvain Benner <sylvain.benner@gmail.com>
;; URL: https://github.com/syl20bnr/spacemacs
;;
;; This file is not part of GNU Emacs.
;;
;;; License: GPLv3

;; add emacs binary helper functions
(defun spacemacs/emacsbin-path ()
  (interactive)
  (concat exec-directory (if (spacemacs/system-is-mswindows) \"bin/\") \"emacs\"))

(defun spacemacs/emacs-start ()
  (interactive)
  (call-process (spacemacs/emacsbin-path) nil 0 nil)
  (message \"Started 'emacs' - it will be ready soon ...\"))

(defun spacemacs/emacs-debug-init ()
  (interactive)
  (call-process (spacemacs/emacsbin-path) nil 0 nil \"--debug-init\")
  (message \"Started 'emacs --debug-init' - it will be ready soon ...\"))

(defun spacemacs/emacs-reload ()
  (interactive)
  (load-file user-init-file)
  (message \".emacs reloaded successfully\"))

(defun spacemacs/emacs-Q ()
  (interactive)
  (call-process (spacemacs/emacsbin-path) nil 0 nil \"-Q\")
  (message \"Started 'emacs -Q' - it will be ready soon ...\"))

;; from https://github.com/cofi/dotfiles/blob/master/emacs.d/config/cofi-util.el#L38
(defun spacemacs/add-to-hooks (fun hooks)
  \"Add function to hooks\"
  (dolist (hook hooks)
    (add-hook hook fun)))

(defun spacemacs/add-all-to-hook (hook &rest funs)
  \"Add functions to hook.\"
  (spacemacs/add-to-hook hook funs))

(defun spacemacs/add-to-hook (hook funs)
  \"Add list of functions to hook.\"
  (dolist (fun funs)
    (add-hook hook fun)))

(defun spacemacs/echo (msg &rest args)
  \"Display MSG in echo-area without logging it in *Messages* buffer.\"
  (interactive)
  (let ((message-log-max nil))
    (apply 'message msg args)))

(defun spacemacs/system-is-mac ()
  (string-equal system-type \"darwin\"))
(defun spacemacs/system-is-linux ()
  (string-equal system-type \"gnu/linux\"))
(defun spacemacs/system-is-mswindows ()
  (string-equal system-type \"windows-nt\"))

(defun spacemacs/jump-in-buffer ()
  (interactive)
  (cond
   ((eq major-mode 'org-mode)
    (call-interactively 'helm-org-in-buffer-headings))
   (t
    (call-interactively 'helm-semantic-or-imenu))))

(defun spacemacs/split-and-new-line ()
  \"Split a quoted string or s-expression and insert a new line with
auto-indent.\"
  (interactive)
  (sp-split-sexp 1)
  (sp-newline))

(defun spacemacs/push-mark-and-goto-beginning-of-line ()
  \"Push a mark at current location and go to the beginnign of the line.\"
  (interactive)
  (push-mark (point))
  (evil-beginning-of-line))

(defun spacemacs/push-mark-and-goto-end-of-line ()
  \"Push a mark at current location and go to the end of the line.\"
  (interactive)
  (push-mark (point))
  (evil-end-of-line))

;; insert one or several line below without changing current evil state
(defun spacemacs/evil-insert-line-below (count)
  \"Insert one of several lines below the current point's line without changing
the current state and point position.\"
  (interactive \"p\")
  (save-excursion
    (evil-save-state (evil-open-below count))))

;; insert one or several line above without changing current evil state
(defun spacemacs/evil-insert-line-above (count)
  \"Insert one of several lines above the current point's line without changing
the current state and point position.\"
  (interactive \"p\")
  (save-excursion
    (evil-save-state (evil-open-above count))))

(defun spacemacs/evil-goto-next-line-and-indent (&optional count)
  (interactive \"p\")
  (let ((counter (or count 1)))
    (while (> counter 0)
      (join-line 1)
      (sp-newline)
      (setq counter (1- counter)))))

;; from Prelude
;; TODO: dispatch these in the layers
(defvar spacemacs-indent-sensitive-modes
  '(coffee-mode
    python-mode
    slim-mode
    haml-mode
    yaml-mode
    makefile-mode
    makefile-gmake-mode
    makefile-imake-mode
    makefile-bsdmake-mode)
  \"Modes for which auto-indenting is suppressed.\")

(defcustom spacemacs-yank-indent-threshold 1000
  \"Threshold (# chars) over which indentation does not automatically occur.\"
  :type 'number
  :group 'spacemacs)

(defun spacemacs/indent-region-or-buffer ()
  \"Indent a region if selected, otherwise the whole buffer.\"
  (interactive)
  (unless (member major-mode spacemacs-indent-sensitive-modes)
    (save-excursion
      (if (region-active-p)
          (progn
            (indent-region (region-beginning) (region-end))
            (message \"Indented selected region.\"))
        (progn
          (evil-indent (point-min) (point-max))
          (message \"Indented buffer.\")))
      (whitespace-cleanup))))

;; idea from http://www.reddit.com/r/emacs/comments/312ge1/i_created_this_function_because_i_was_tired_of/
(defun spacemacs/eval-current-form ()
  \"Looks for the current def* or set* command then evaluates, unlike `eval-defun', does not go to topmost function\"
  (interactive)
  (save-excursion
    (search-backward-regexp \"(def\\\\|(set\")
    (forward-list)
    (call-interactively 'eval-last-sexp)))

;; from magnars
(defun spacemacs/eval-and-replace ()
  \"Replace the preceding sexp with its value.\"
  (interactive)
  (backward-kill-sexp)
  (condition-case nil
      (prin1 (eval (read (current-kill 0)))
             (current-buffer))
    (error (message \"Invalid expression\")
           (insert (current-kill 0)))))

;; from https://gist.github.com/3402786
(defun spacemacs/toggle-maximize-buffer ()
  \"Maximize buffer\"
  (interactive)
  (if (and (= 1 (length (window-list)))
           (assoc'_ register-alist))
      (jump-to-register '_)
    (progn
      (window-configuration-to-register '_)
      (delete-other-windows))))

;; A small minor mode to use a big fringe
;; from http://bzg.fr/emacs-strip-tease.html
(defvar bzg-big-fringe-mode nil)
(define-minor-mode bzg-big-fringe-mode
  \"Minor mode to use big fringe in the current buffer.\"
  :init-value nil
  :global t
  :variable bzg-big-fringe-mode
  :group 'editing-basics
  (if (not bzg-big-fringe-mode)
      (set-fringe-style nil)
    (set-fringe-mode
     (/ (- (frame-pixel-width)
           (* 100 (frame-char-width)))
        2))))

(defun spacemacs/toggle-maximize-centered-buffer ()
  \"Maximize buffer and center it on the screen\"
  (interactive)
  (if (= 1 (length (window-list)))
      (progn  (bzg-big-fringe-mode 0)
              (jump-to-register '_))
    (progn
      (set-register '_ (list (current-window-configuration)))
      (delete-other-windows)
      (bzg-big-fringe-mode 1))))

(defun spacemacs/useless-buffer-p (buffer)
  \"Determines if a buffer is useful.\"
  (let ((buf-paren-major-mode (get (with-current-buffer buffer
                                     major-mode)
                                   'derived-mode-parent))
        (buf-name (buffer-name buffer)))
    ;; first find if useful buffer exists, if so returns nil and don't check for
    ;; useless buffers. If no useful buffer is found, check for useless buffers.
    (unless (cl-loop for regexp in spacemacs-useful-buffers-regexp do
                     (when (or (eq buf-paren-major-mode 'comint-mode)
                               (string-match regexp buf-name))
                       (return t)))
      (cl-loop for regexp in spacemacs-useless-buffers-regexp do
               (when (string-match regexp buf-name)
                 (return t))))))

;; from magnars modified by ffevotte for dedicated windows support
(defun spacemacs/rotate-windows (count)
  \"Rotate your windows.
Dedicated windows are left untouched. Giving a negative prefix
argument takes the kindows rotate backwards.\"
  (interactive \"p\")
  (let* ((non-dedicated-windows (remove-if 'window-dedicated-p (window-list)))
         (num-windows (length non-dedicated-windows))
         (i 0)
         (step (+ num-windows count)))
    (cond ((not (> num-windows 1))
           (message \"You can't rotate a single window!\"))
          (t
           (dotimes (counter (- num-windows 1))
             (let* ((next-i (% (+ step i) num-windows))

                    (w1 (elt non-dedicated-windows i))
                    (w2 (elt non-dedicated-windows next-i))

                    (b1 (window-buffer w1))
                    (b2 (window-buffer w2))

                    (s1 (window-start w1))
                    (s2 (window-start w2)))
               (set-window-buffer w1 b2)
               (set-window-buffer w2 b1)
               (set-window-start w1 s2)
               (set-window-start w2 s1)
               (setq i next-i)))))))

(defun spacemacs/rotate-windows-backward (count)
  \"Rotate your windows backward.\"
  (interactive \"p\")
  (spacemacs/rotate-windows (* -1 count)))

(defun spacemacs/next-useful-buffer ()
  \"Switch to the next buffer and avoid special buffers.\"
  (interactive)
  (let ((start-buffer (current-buffer)))
    (next-buffer)
    (while (and (spacemacs/useless-buffer-p (current-buffer))
                (not (eq (current-buffer) start-buffer)))
      (next-buffer))))

(defun spacemacs/previous-useful-buffer ()
  \"Switch to the previous buffer and avoid special buffers.\"
  (interactive)
  (let ((start-buffer (current-buffer)))
    (previous-buffer)
    (while (and (spacemacs/useless-buffer-p (current-buffer))
                (not (eq (current-buffer) start-buffer)))
      (previous-buffer))))

;; from magnars
(defun spacemacs/rename-current-buffer-file ()
  \"Renames current buffer and file it is visiting.\"
  (interactive)
  (let ((name (buffer-name))
        (filename (buffer-file-name)))
    (if (not (and filename (file-exists-p filename)))
        (error \"Buffer '%s' is not visiting a file!\" name)
      (let ((new-name (read-file-name \"New name: \" filename)))
        (cond ((get-buffer new-name)
               (error \"A buffer named '%s' already exists!\" new-name))
              (t
               (let ((dir (file-name-directory new-name)))
                 (when (and (not (file-exists-p dir)) (yes-or-no-p (format \"Create directory '%s'?\" dir)))
                   (make-directory dir t)))
               (rename-file filename new-name 1)
               (rename-buffer new-name)
               (set-visited-file-name new-name)
               (set-buffer-modified-p nil)
               (message \"File '%s' successfully renamed to '%s'\" name (file-name-nondirectory new-name))))))))

;; from magnars
(defun spacemacs/delete-current-buffer-file ()
  \"Removes file connected to current buffer and kills buffer.\"
  (interactive)
  (let ((filename (buffer-file-name))
        (buffer (current-buffer))
        (name (buffer-name)))
    (if (not (and filename (file-exists-p filename)))
        (ido-kill-buffer)
      (when (yes-or-no-p \"Are you sure you want to delete this file? \")
        (delete-file filename t)
        (kill-buffer buffer)
        (message \"File '%s' successfully removed\" filename)))))

;; from magnars
(defun spacemacs/sudo-edit (&optional arg)
  (interactive \"p\")
  (if (or arg (not buffer-file-name))
      (find-file (concat \"/sudo:root@localhost:\" (ido-read-file-name \"File: \")))
    (find-alternate-file (concat \"/sudo:root@localhost:\" buffer-file-name))))

;; found at http://emacswiki.org/emacs/KillingBuffers
(defun spacemacs/kill-other-buffers ()
  \"Kill all other buffers.\"
  (interactive)
  (let (name (buffer-name))
    (when (yes-or-no-p (format \"Killing all buffers except \\\"%s\\\" ? \" buffer-file-name))
      (mapc 'kill-buffer (delq (current-buffer) (buffer-list)))
      (message \"Buffers deleted!\"))))

;; from http://dfan.org/blog/2009/02/19/emacs-dedicated-windows/
(defun spacemacs/toggle-current-window-dedication ()
  \"Toggle dedication state of a window.\"
 (interactive)
 (let* ((window    (selected-window))
        (dedicated (window-dedicated-p window)))
   (set-window-dedicated-p window (not dedicated))
   (message \"Window %sdedicated to %s\"
            (if dedicated \"no longer \" \"\")
            (buffer-name))))

;; http://camdez.com/blog/2013/11/14/emacs-show-buffer-file-name/
(defun spacemacs/show-and-copy-buffer-filename ()
  \"Show the full path to the current file in the minibuffer.\"
  (interactive)
  (let ((file-name (buffer-file-name)))
    (if file-name
        (progn
          (message file-name)
          (kill-new file-name))
      (error \"Buffer not visiting a file\"))))

;; adapted from bozhidar
;; http://emacsredux.com/blog/2013/05/18/instant-access-to-init-dot-el/
(defun spacemacs/find-user-init-file ()
  \"Edit the `user-init-file', in the current window.\"
  (interactive)
  (find-file-existing user-init-file))

(defun spacemacs/find-dotfile ()
  \"Edit the `dotfile', in the current window.\"
  (interactive)
  (find-file-existing (dotspacemacs/location)))

(defun spacemacs/ediff-dotfile-and-template ()
  \"ediff the current `dotfile' with the template\"
  (interactive)
  (ediff-files (dotspacemacs/location)
               (concat dotspacemacs-template-directory \".spacemacs.template\")))

(defun spacemacs/new-empty-buffer ()
  \"Create a new buffer called untitled(<n>)\"
  (interactive)
  (let ((newbuf (generate-new-buffer-name \"untitled\")))
    (switch-to-buffer newbuf)))

(defun spacemacs/layout-triple-columns ()
  \" Set the layout to triple columns. \"
  (interactive)
  (golden-ratio-mode 0)
  (delete-other-windows)
  (dotimes (i 2) (split-window-right))
  (balance-windows))

(defun spacemacs/layout-double-columns ()
  \" Set the layout to double columns. \"
  (interactive)
  (golden-ratio-mode 1)
  (delete-other-windows)
  (split-window-right))

(defun spacemacs/home ()
  \"Go to home Spacemacs buffer\"
  (interactive)
  (switch-to-buffer \"*spacemacs*\"))

(defun spacemacs/insert-line-above-no-indent (count)
  (interactive \"p\")
  (let ((p (+ (point) count)))
    (save-excursion
       (if (eq (line-number-at-pos) 1)
          (evil-move-beginning-of-line)
        (progn
          (evil-previous-line)
          (evil-move-end-of-line)))
      (while (> count 0)
        (insert \"\\n\")
        (setq count (1- count))))
    (goto-char p)))

(defun spacemacs/insert-line-below-no-indent (count)
  \"Insert a new line below with no identation.\"
  (interactive \"p\")
  (save-excursion
    (evil-move-end-of-line)
    (while (> count 0)
      (insert \"\\n\")
      (setq count (1- count)))))

;; from https://github.com/gempesaw/dotemacs/blob/emacs/dg-defun.el
(defun spacemacs/kill-matching-buffers-rudely (regexp &optional internal-too)
  \"Kill buffers whose name matches the specified REGEXP. This
function, unlike the built-in `kill-matching-buffers` does so
WITHOUT ASKING. The optional second argument indicates whether to
kill internal buffers too.\"
  (interactive \"sKill buffers matching this regular expression: \\nP\")
  (dolist (buffer (buffer-list))
    (let ((name (buffer-name buffer)))
      (when (and name (not (string-equal name \"\"))
                 (or internal-too (/= (aref name 0) ?\\s))
                 (string-match regexp name))
        (kill-buffer buffer)))))

;; advise to prevent server from closing

(defvar spacemacs-really-kill-emacs nil
  \"prevent window manager close from closing instance.\")

(defun spacemacs/persistent-server-running-p ()
  \"Requires spacemacs-really-kill-emacs to be toggled and
dotspacemacs-persistent-server to be t\"
  (and (fboundp 'server-running-p)
       (server-running-p)
       dotspacemacs-persistent-server))

(defadvice kill-emacs (around spacemacs-really-exit activate)
  \"Only kill emacs if a prefix is set\"
  (if (and (not spacemacs-really-kill-emacs)
           (spacemacs/persistent-server-running-p))
      (spacemacs/frame-killer)
    ad-do-it))

(defadvice save-buffers-kill-emacs (around spacemacs-really-exit activate)
  \"Only kill emacs if a prefix is set\"
  (if (or spacemacs-really-kill-emacs (not dotspacemacs-persistent-server))
      ad-do-it
    (spacemacs/frame-killer)))

(defun spacemacs/save-buffers-kill-emacs ()
  \"Save all changed buffers and exit Spacemacs\"
  (interactive)
  (setq spacemacs-really-kill-emacs t)
  (save-buffers-kill-emacs))

(defun spacemacs/kill-emacs ()
  \"Lose all changes and exit Spacemacs\"
  (interactive)
  (setq spacemacs-really-kill-emacs t)
  (kill-emacs))

(defun spacemacs/prompt-kill-emacs ()
  \"Prompt to save changed buffers and exit Spacemacs\"
  (interactive)
  (setq spacemacs-really-kill-emacs t)
  (save-some-buffers)
  (kill-emacs))

(defun spacemacs/frame-killer ()
  \"Kill server buffer and hide the main Emacs window\"
  (interactive)
  (server-kill-buffer)
  (condition-case nil
      (delete-frame nil 1)
      (error
       (make-frame-invisible nil 1))))

(defun spacemacs/toggle-frame-fullscreen ()
  \"Respect the `dotspacemacs-fullscreen-use-non-native' variable when
toggling fullscreen.\"
  (interactive)
  (if dotspacemacs-fullscreen-use-non-native
      (spacemacs/toggle-frame-fullscreen-non-native)
    (toggle-frame-fullscreen)))

(defun spacemacs/toggle-fullscreen ()
  \"Toggle full screen on X11 and Carbon\"
  (interactive)
  (cond
   ((eq window-system 'x)
    (set-frame-parameter nil 'fullscreen
                         (when (not (frame-parameter nil 'fullscreen))
                           'fullboth)))
   ((eq window-system 'mac)
    (set-frame-parameter
     nil 'fullscreen
     (when (not (frame-parameter nil 'fullscreen)) 'fullscreen)))))

(defun spacemacs/toggle-frame-fullscreen-non-native ()
  \"Toggle full screen non-natively. Uses the `fullboth' frame paramerter
   rather than `fullscreen'. Useful to fullscreen on OSX w/o animations.\"
  (interactive)
  (modify-frame-parameters
   nil
   `((maximized
      . ,(unless (memq (frame-parameter nil 'fullscreen) '(fullscreen fullboth))
	   (frame-parameter nil 'fullscreen)))
     (fullscreen
      . ,(if (memq (frame-parameter nil 'fullscreen) '(fullscreen fullboth))
	     (if (eq (frame-parameter nil 'maximized) 'maximized)
		 'maximized)
	   'fullboth)))))

;; taken from Prelude: https://github.com/bbatsov/prelude
(defmacro spacemacs|advise-commands (advice-name commands class &rest body)
  \"Apply advice named ADVICE-NAME to multiple COMMANDS.
The body of the advice is in BODY.\"
  `(progn
     ,@(mapcar (lambda (command)
                 `(defadvice ,command
                      (,class ,(intern (format \"%S-%s\" command advice-name))
                              activate)
                    ,@body))
               commands)))

(defun spacemacs/safe-revert-buffer ()
  \"Prompt before reverting the file.\"
  (interactive)
  (revert-buffer nil nil))

(defun spacemacs/safe-erase-buffer ()
  \"Prompt before erasing the content of the file.\"
  (interactive)
  (if (y-or-n-p (format \"Erase content of buffer %s ? \" (current-buffer)))
      (erase-buffer)))

(defun spacemacs/ert-run-tests-buffer ()
  \"Run all the tests in the current buffer.\"
  (interactive)
  (save-buffer)
  (load-file (buffer-file-name))
  (ert t))

" 0 4 (face font-lock-comment-delimiter-face fontified t) 4 53 (face font-lock-comment-face fontified t) 53 55 (face font-lock-comment-delimiter-face fontified t) 55 56 (face font-lock-comment-face fontified t) 56 59 (face font-lock-comment-delimiter-face fontified t) 59 98 (face font-lock-comment-face fontified t) 98 101 (face font-lock-comment-delimiter-face fontified t) 101 155 (face font-lock-comment-face fontified t) 155 157 (face font-lock-comment-delimiter-face fontified t) 157 158 (face font-lock-comment-face fontified t) 158 161 (face font-lock-comment-delimiter-face fontified t) 161 211 (face font-lock-comment-face fontified t) 211 214 (face font-lock-comment-delimiter-face fontified t) 214 257 (face font-lock-comment-face fontified t) 257 259 (face font-lock-comment-delimiter-face fontified t) 259 260 (face font-lock-comment-face fontified t) 260 263 (face font-lock-comment-delimiter-face fontified t) 263 299 (face font-lock-comment-face fontified t) 299 301 (face font-lock-comment-delimiter-face fontified t) 301 302 (face font-lock-comment-face fontified t) 302 306 (face font-lock-comment-delimiter-face fontified t) 306 321 (face font-lock-comment-face fontified t) 321 322 (fontified t) 322 325 (face font-lock-comment-delimiter-face fontified t) 325 359 (face font-lock-comment-face fontified t) 359 360 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 360 365 (face font-lock-keyword-face fontified t) 365 366 (fontified t) 366 389 (face font-lock-function-name-face fontified t) 389 390 (fontified t) 390 391 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 391 392 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 392 395 (fontified t) 395 396 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 396 407 (fontified t) 407 408 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 408 411 (fontified t) 411 412 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 412 434 (fontified t) 434 435 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 435 437 (face font-lock-keyword-face fontified t) 437 438 (fontified t) 438 439 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 439 468 (fontified t) 468 469 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 469 470 (fontified t) 470 476 (face font-lock-string-face fontified t) 476 477 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 477 478 (fontified t) 478 485 (face font-lock-string-face fontified t) 485 486 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 486 487 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 487 489 (fontified t) 489 490 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 490 495 (face font-lock-keyword-face fontified t) 495 496 (fontified t) 496 517 (face font-lock-function-name-face fontified t) 517 518 (fontified t) 518 519 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 519 520 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 520 521 (fontified t) 521 649 (fontified nil) 649 650 (fontified t) 650 651 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 651 656 (face font-lock-keyword-face fontified t) 656 657 (fontified t) 657 683 (face font-lock-function-name-face fontified t) 683 684 (fontified t) 684 685 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 685 686 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 686 689 (fontified t) 689 690 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 690 701 (fontified t) 701 702 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 702 705 (fontified t) 705 706 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 706 719 (fontified t) 719 720 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 720 743 (fontified t) 743 744 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 744 755 (fontified t) 755 769 (face font-lock-string-face fontified t) 769 770 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 770 773 (fontified t) 773 774 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 774 782 (fontified t) 782 840 (face font-lock-string-face fontified t) 840 841 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 841 842 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 842 844 (fontified t) 844 845 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 845 850 (face font-lock-keyword-face fontified t) 850 851 (fontified t) 851 873 (face font-lock-function-name-face fontified t) 873 874 (fontified t) 874 875 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 875 876 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 876 879 (fontified t) 879 880 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 880 891 (fontified t) 891 892 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 892 895 (fontified t) 895 896 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 896 920 (fontified t) 920 921 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 921 924 (fontified t) 924 925 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 925 933 (fontified t) 933 963 (face font-lock-string-face fontified t) 963 964 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 964 965 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 965 967 (fontified t) 967 968 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 968 973 (face font-lock-keyword-face fontified t) 973 974 (fontified t) 974 991 (face font-lock-function-name-face fontified t) 991 992 (fontified t) 992 993 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 993 994 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 994 997 (fontified t) 997 998 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 998 1009 (fontified t) 1009 1010 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1010 1013 (fontified t) 1013 1014 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1014 1027 (fontified t) 1027 1028 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 1028 1051 (fontified t) 1051 1052 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 1052 1063 (fontified t) 1063 1067 (face font-lock-string-face fontified t) 1067 1068 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1068 1071 (fontified t) 1071 1072 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1072 1080 (fontified t) 1080 1128 (face font-lock-string-face fontified t) 1128 1129 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1129 1130 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1130 1132 (fontified t) 1132 1135 (face font-lock-comment-delimiter-face fontified t) 1135 1217 (face font-lock-comment-face fontified t) 1217 1218 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1218 1223 (face font-lock-keyword-face fontified t) 1223 1224 (fontified t) 1224 1246 (face font-lock-function-name-face fontified t) 1246 1247 (fontified t) 1247 1248 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1248 1257 (fontified t) 1257 1258 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1258 1261 (fontified t) 1261 1284 (face font-lock-doc-face fontified t) 1284 1287 (fontified t) 1287 1288 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1288 1294 (face font-lock-keyword-face fontified t) 1294 1295 (fontified t) 1295 1296 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 1296 1306 (fontified t) 1306 1307 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 1307 1312 (fontified t) 1312 1313 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 1313 1330 (fontified t) 1330 1331 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 1331 1332 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1332 1333 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1333 1335 (fontified t) 1335 1336 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1336 1341 (face font-lock-keyword-face fontified t) 1341 1342 (fontified t) 1342 1367 (face font-lock-function-name-face fontified t) 1367 1368 (fontified t) 1368 1369 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1369 1374 (fontified t) 1374 1379 (face font-lock-type-face fontified t) 1379 1384 (fontified t) 1384 1385 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1385 1388 (fontified t) 1388 1412 (face font-lock-doc-face fontified t) 1412 1415 (fontified t) 1415 1416 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1416 1447 (fontified t) 1447 1448 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1448 1449 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1449 1451 (fontified t) 1451 1452 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1452 1457 (face font-lock-keyword-face fontified t) 1457 1458 (fontified t) 1458 1479 (face font-lock-function-name-face fontified t) 1479 1480 (fontified t) 1480 1481 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1481 1490 (fontified t) 1490 1491 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1491 1494 (fontified t) 1494 1526 (face font-lock-doc-face fontified t) 1526 1529 (fontified t) 1529 1530 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1530 1536 (face font-lock-keyword-face fontified t) 1536 1537 (fontified t) 1537 1538 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 1538 1546 (fontified t) 1546 1547 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 1547 1552 (fontified t) 1552 1553 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 1553 1570 (fontified t) 1570 1571 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 1571 1572 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1572 1573 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1573 1575 (fontified t) 1575 1576 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1576 1581 (face font-lock-keyword-face fontified t) 1581 1582 (fontified t) 1582 1596 (face font-lock-function-name-face fontified t) 1596 1597 (fontified t) 1597 1598 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1598 1602 (fontified t) 1602 1607 (face font-lock-type-face fontified t) 1607 1612 (fontified t) 1612 1613 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1613 1616 (fontified t) 1616 1683 (face font-lock-doc-face fontified t) 1683 1686 (fontified t) 1686 1687 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1687 1698 (fontified t) 1698 1699 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1699 1702 (fontified t) 1702 1703 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1703 1706 (face font-lock-keyword-face fontified t) 1706 1707 (fontified t) 1707 1708 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 1708 1709 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 1709 1728 (fontified t) 1728 1729 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 1729 1730 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 1730 1731 (fontified t) 1731 1763 (fontified nil) 1763 1764 (fontified t) 1764 1765 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1765 1770 (face font-lock-keyword-face fontified t) 1770 1771 (fontified t) 1771 1794 (face font-lock-function-name-face fontified t) 1794 1795 (fontified t) 1795 1796 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1796 1797 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1797 1800 (fontified t) 1800 1801 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1801 1826 (fontified t) 1826 1834 (face font-lock-string-face fontified t) 1834 1835 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1835 1836 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1836 1837 (fontified t) 1837 1838 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1838 1843 (face font-lock-keyword-face fontified t) 1843 1844 (fontified t) 1844 1869 (face font-lock-function-name-face fontified t) 1869 1870 (fontified t) 1870 1871 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1871 1872 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1872 1875 (fontified t) 1875 1876 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1876 1901 (fontified t) 1901 1912 (face font-lock-string-face fontified t) 1912 1913 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1913 1914 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1914 1915 (fontified t) 1915 1916 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1916 1921 (face font-lock-keyword-face fontified t) 1921 1922 (fontified t) 1922 1951 (face font-lock-function-name-face fontified t) 1951 1952 (fontified t) 1952 1953 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1953 1954 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1954 1957 (fontified t) 1957 1958 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1958 1983 (fontified t) 1983 1995 (face font-lock-string-face fontified t) 1995 1996 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1996 1997 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1997 1999 (fontified t) 1999 2000 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 2000 2005 (face font-lock-keyword-face fontified t) 2005 2006 (fontified t) 2006 2030 (face font-lock-function-name-face fontified t) 2030 2031 (fontified t) 2031 2032 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 2032 2033 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 2033 2036 (fontified t) 2036 2037 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 2037 2048 (fontified t) 2048 2049 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 2049 2052 (fontified t) 2052 2053 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 2053 2057 (face font-lock-keyword-face fontified t) 2057 2061 (fontified t) 2061 2062 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 2062 2063 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 2063 2086 (fontified t) 2086 2087 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 2087 2092 (fontified t) 2092 2093 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 2093 2140 (fontified t) 2140 2141 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 2141 2142 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 2142 2146 (fontified t) 2146 2147 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 2147 2153 (fontified t) 2153 2154 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 2154 2196 (fontified t) 2196 2197 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 2197 2198 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 2198 2199 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 2199 2200 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 2200 2202 (fontified t) 2202 2203 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 2203 2208 (face font-lock-keyword-face fontified t) 2208 2209 (fontified t) 2209 2237 (face font-lock-function-name-face fontified t) 2237 2238 (fontified t) 2238 2239 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 2239 2240 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 2240 2243 (fontified t) 2243 2309 (face font-lock-doc-face fontified t) 2309 16434 (fontified nil) 16434 16435 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 16435 16440 (face font-lock-keyword-face fontified t) 16440 16441 (fontified t) 16441 16474 (face font-lock-function-name-face fontified t) 16474 16475 (fontified t) 16475 16476 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 16476 16477 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 16477 16480 (fontified t) 16480 16494 (face font-lock-doc-face fontified t) 16494 16532 (face (font-lock-constant-face font-lock-doc-face) fontified t) 16532 16569 (face font-lock-doc-face fontified t) 16569 16572 (fontified t) 16572 16573 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 16573 16584 (fontified t) 16584 16585 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 16585 16588 (fontified t) 16588 16589 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 16589 16591 (face font-lock-keyword-face fontified t) 16591 16637 (fontified t) 16637 16638 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 16638 16682 (fontified t) 16682 16683 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 16683 16688 (fontified t) 16688 16689 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 16689 16712 (fontified t) 16712 16713 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 16713 16714 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 16714 16715 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 16715 16717 (fontified t) 16717 16718 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 16718 16723 (face font-lock-keyword-face fontified t) 16723 16724 (fontified t) 16724 16751 (face font-lock-function-name-face fontified t) 16751 16752 (fontified t) 16752 16753 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 16753 16754 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 16754 16757 (fontified t) 16757 16795 (face font-lock-doc-face fontified t) 16795 16798 (fontified t) 16798 16799 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 16799 16810 (fontified t) 16810 16811 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 16811 16814 (fontified t) 16814 16815 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 16815 16819 (face font-lock-keyword-face fontified t) 16819 16823 (fontified t) 16823 16824 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 16824 16825 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 16825 16844 (fontified t) 16844 16845 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 16845 16850 (fontified t) 16850 16851 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 16851 16912 (fontified t) 16912 16913 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 16913 16917 (face font-lock-keyword-face fontified t) 16917 16918 (fontified t) 16918 16919 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 16919 16923 (fontified t) 16923 16924 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 16924 16955 (fontified t) 16955 16956 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 16956 16957 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 16957 16958 (fontified t) 16958 16994 (fontified t) 16994 16995 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 16995 16996 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 16996 16997 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 16997 17001 (fontified t) 17001 17002 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 17002 17003 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17003 17024 (fontified t) 17024 17025 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17025 17030 (fontified t) 17030 17031 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17031 17077 (fontified t) 17077 17078 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 17078 17082 (face font-lock-keyword-face fontified t) 17082 17083 (fontified t) 17083 17084 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 17084 17088 (fontified t) 17088 17089 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 17089 17120 (fontified t) 17120 17121 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 17121 17122 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 17122 17134 (fontified t) 17134 17135 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 17135 17136 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17136 17137 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 17137 17138 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 17138 17139 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 17139 17140 (fontified t) 17140 17141 (fontified t) 17141 17142 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 17142 17147 (face font-lock-keyword-face fontified t) 17147 17148 (fontified t) 17148 17192 (face font-lock-function-name-face fontified t) 17192 17193 (fontified t) 17193 17194 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 17194 17195 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 17195 17198 (fontified t) 17198 17242 (face font-lock-doc-face fontified t) 17242 17250 (face (font-lock-constant-face font-lock-doc-face) fontified t) 17250 17285 (face font-lock-doc-face fontified t) 17285 17295 (face (font-lock-constant-face font-lock-doc-face) fontified t) 17295 17342 (face font-lock-doc-face fontified t) 17342 17345 (fontified t) 17345 17346 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 17346 17357 (fontified t) 17357 17358 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 17358 17361 (fontified t) 17361 17362 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 17362 17397 (fontified t) 17397 17398 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 17398 17399 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17399 17418 (fontified t) 17418 17419 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 17419 17425 (face font-lock-keyword-face fontified t) 17425 17426 (fontified t) 17426 17427 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 17427 17432 (fontified t) 17432 17433 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 17433 17464 (fontified t) 17464 17465 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 17465 17467 (fontified t) 17467 17468 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 17468 17487 (fontified t) 17487 17488 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 17488 17489 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 17489 17494 (fontified t) 17494 17495 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 17495 17526 (fontified t) 17526 17527 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 17527 17528 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 17528 17529 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17529 17535 (fontified t) 17535 17536 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17536 17556 (fontified t) 17556 17557 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 17557 17559 (face font-lock-keyword-face fontified t) 17559 17560 (fontified t) 17560 17561 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 17561 17566 (fontified t) 17566 17567 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 17567 17598 (fontified t) 17598 17599 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 17599 17601 (fontified t) 17601 17602 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 17602 17621 (fontified t) 17621 17622 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 17622 17623 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 17623 17630 (fontified t) 17630 17631 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 17631 17633 (face font-lock-keyword-face fontified t) 17633 17634 (fontified t) 17634 17635 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 17635 17638 (fontified t) 17638 17639 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 17639 17669 (fontified t) 17669 17670 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 17670 17681 (fontified t) 17681 17682 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 17682 17683 (fontified t) 17683 17696 (fontified t) 17696 17697 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 17697 17711 (fontified t) 17711 17712 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 17712 17713 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17713 17714 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 17714 17715 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 17715 17716 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 17716 17718 (fontified t) 17718 17721 (face font-lock-comment-delimiter-face fontified t) 17721 17776 (face font-lock-comment-face fontified t) 17776 17777 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 17777 17785 (face font-lock-keyword-face fontified t) 17785 17786 (fontified t) 17786 17795 (face font-lock-function-name-face fontified t) 17795 17812 (fontified t) 17812 17813 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 17813 17840 (fontified t) 17840 17845 (face font-lock-type-face fontified t) 17845 17850 (fontified t) 17850 17851 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 17851 17854 (fontified t) 17854 17943 (face font-lock-doc-face fontified t) 17943 17947 (fontified t) 17947 17948 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 17948 17953 (face font-lock-keyword-face fontified t) 17953 17961 (fontified t) 17961 17962 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 17962 17969 (fontified t) 17969 17970 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17970 17976 (face font-lock-keyword-face fontified t) 17976 17977 (fontified t) 17977 17978 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 17978 17985 (fontified t) 17985 17986 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 17986 18005 (fontified t) 18005 18006 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 18006 18015 (face font-lock-keyword-face fontified t) 18015 18047 (fontified t) 18047 18048 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 18048 18056 (fontified t) 18056 18057 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 18057 18064 (fontified t) 18064 18065 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 18065 18072 (fontified t) 18072 18079 (face font-lock-string-face fontified t) 18079 18099 (fontified t) 18099 18100 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 18100 18101 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 18101 18140 (fontified t) 18140 18141 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 18141 18168 (fontified t) 18168 18169 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 18169 18170 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 18170 18194 (fontified t) 18194 18195 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 18195 18196 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18196 18197 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 18197 18199 (fontified t) 18199 18200 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 18200 18205 (face font-lock-keyword-face fontified t) 18205 18206 (fontified t) 18206 18234 (face font-lock-function-name-face fontified t) 18234 18235 (fontified t) 18235 18236 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18236 18237 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18237 18240 (fontified t) 18240 18275 (face font-lock-doc-face fontified t) 18275 18276 (fontified t) 18276 18278 (fontified t) 18278 18279 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18279 18290 (fontified t) 18290 18291 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18291 18294 (fontified t) 18294 18295 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18295 18316 (fontified t) 18316 18317 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18317 18318 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 18318 18319 (fontified t) 18319 18320 (fontified t) 18320 18321 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 18321 18326 (face font-lock-keyword-face fontified t) 18326 18327 (fontified t) 18327 18354 (face font-lock-function-name-face fontified t) 18354 18355 (fontified t) 18355 18356 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18356 18357 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18357 18360 (fontified t) 18360 18408 (face font-lock-doc-face fontified t) 18408 18411 (fontified t) 18411 18412 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18412 18423 (fontified t) 18423 18424 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18424 18427 (fontified t) 18427 18428 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18428 18430 (face font-lock-keyword-face fontified t) 18430 18431 (fontified t) 18431 18432 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 18432 18441 (fontified t) 18441 18442 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 18442 18449 (fontified t) 18449 18480 (face font-lock-string-face fontified t) 18480 18481 (fontified t) 18481 18482 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 18482 18496 (fontified t) 18496 18497 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 18497 18498 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 18498 18499 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 18499 18506 (fontified t) 18506 18507 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 18507 18519 (fontified t) 18519 18520 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 18520 18521 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18521 18522 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 18522 18524 (fontified t) 18524 18525 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 18525 18530 (face font-lock-keyword-face fontified t) 18530 18531 (fontified t) 18531 18561 (face font-lock-function-name-face fontified t) 18561 18562 (fontified t) 18562 18563 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18563 18564 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18564 18567 (fontified t) 18567 18609 (face font-lock-doc-face fontified t) 18609 18612 (fontified t) 18612 18613 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18613 18624 (fontified t) 18624 18625 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18625 18628 (fontified t) 18628 18629 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18629 18640 (fontified t) 18640 18641 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18641 18644 (fontified t) 18644 18645 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18645 18655 (fontified t) 18655 18656 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 18656 18672 (fontified t) 18672 18673 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 18673 18674 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18674 18677 (fontified t) 18677 18678 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18678 18683 (fontified t) 18683 18684 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18684 18685 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 18685 18687 (fontified t)) #("(defvar github-top-repos
  '(
    (\"python\" . \"https://github.com/search?utf8=%E2%9C%93&q=language%3A%22Python%22+stars%3A%3E500&type=Repositories&ref=searchresults\")
    (\"java\" . \"java\")
    )
  )
(assoc \"python\" github-top-repos)
(car github-top-repos)
(firefox-browse-url (c))

(evil-alternate-buffer)


" 0 1 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 24 (fontified t face font-lock-variable-name-face) 24 28 (fontified t) 28 29 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 29 34 (fontified t) 34 35 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 35 43 (fontified t face font-lock-string-face) 43 46 (fontified t) 46 165 (fontified t face font-lock-string-face) 165 166 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 166 171 (fontified t) 171 172 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 172 178 (fontified t face font-lock-string-face) 178 181 (fontified t) 181 187 (fontified t face font-lock-string-face) 187 188 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 188 193 (fontified t) 193 194 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 194 197 (fontified t) 197 198 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 198 199 (fontified t) 199 200 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 200 206 (fontified t) 206 214 (face font-lock-string-face fontified t) 214 231 (fontified t) 231 232 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 232 233 (fontified t) 233 234 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 234 254 (fontified t) 254 255 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 255 256 (fontified t) 256 257 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 257 276 (fontified t) 276 277 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 277 278 (fontified t) 278 279 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 279 280 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 280 281 (fontified t) 281 282 (fontified t) 282 283 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 283 304 (fontified t) 304 305 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 305 306 (fontified t) 306 307 (fontified t) 307 308 (fontified t)) #("(defun spacemacs/init-zoom-frm ()
  (use-package zoom-frm
    :commands (zoom-frm-unzoom
               zoom-frm-out
               zoom-frm-in)
    :init
    (progn
      (spacemacs|define-micro-state zoom-frm
        :doc \"[+] zoom frame in [-] zoom frame out [=] reset zoom\"
        :evil-leader \"zf\"
        :use-minibuffer t
        :bindings
        (\"+\" spacemacs/zoom-frm-in :post (spacemacs//zoom-frm-powerline-reset))
        (\"-\" spacemacs/zoom-frm-out :post (spacemacs//zoom-frm-powerline-reset))
        (\"=\" spacemacs/zoom-frm-unzoom :post (spacemacs//zoom-frm-powerline-reset)))

      (defun spacemacs//zoom-frm-powerline-reset ()
        (when (fboundp 'powerline-reset)
          (setq-default powerline-height (spacemacs/compute-powerline-height))
          (powerline-reset)))

      (defun spacemacs//zoom-frm-do (arg)
        \"Perform a zoom action depending on ARG value.\"
        (let ((zoom-action (cond ((eq arg 0) 'zoom-frm-unzoom)
                                 ((< arg 0) 'zoom-frm-out)
                                 ((> arg 0) 'zoom-frm-in)))
              (fm (cdr (assoc 'fullscreen (frame-parameters))))
              (fwp (* (frame-char-width) (frame-width)))
              (fhp (* (frame-char-height) (frame-height))))
          (when (equal fm 'maximized)
            (toggle-frame-maximized))
          (funcall zoom-action)
          (set-frame-size nil fwp fhp t)
          (when (equal fm 'maximized)
            (toggle-frame-maximized))))

      (defun spacemacs/zoom-frm-in ()
        \"zoom in frame, but keep the same pixel size\"
        (interactive)
        (spacemacs//zoom-frm-do 1))

      (defun spacemacs/zoom-frm-out ()
        \"zoom out frame, but keep the same pixel size\"
        (interactive)
        (spacemacs//zoom-frm-do -1))

      (defun spacemacs/zoom-frm-unzoom ()
        \"Unzoom current frame, keeping the same pixel size\"
        (interactive)
        (spacemacs//zoom-frm-do 0))

      ;; Font size, either with ctrl + mouse wheel
      (global-set-key (kbd \"<C-wheel-up>\") 'spacemacs/zoom-frm-in)
      (global-set-key (kbd \"<C-wheel-down>\") 'spacemacs/zoom-frm-out))))
" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 30 (face font-lock-function-name-face fontified t) 30 31 (fontified t) 31 32 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 32 33 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 33 36 (fontified t) 36 37 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 37 62 (fontified t) 62 71 (face font-lock-builtin-face fontified t) 71 72 (fontified t) 72 73 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 73 143 (fontified t) 143 144 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 144 149 (fontified t) 149 154 (face font-lock-builtin-face fontified t) 154 159 (fontified t) 159 160 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 160 165 (face font-lock-keyword-face fontified t) 165 166 (fontified t) 166 172 (fontified t) 172 173 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 173 219 (fontified t) 219 223 (face font-lock-builtin-face fontified t) 223 224 (fontified t) 224 277 (face font-lock-string-face fontified t) 277 286 (fontified t) 286 298 (face font-lock-builtin-face fontified t) 298 299 (fontified t) 299 303 (face font-lock-string-face fontified t) 303 312 (fontified t) 312 327 (face font-lock-builtin-face fontified t) 327 338 (fontified t) 338 347 (face font-lock-builtin-face fontified t) 347 356 (fontified t) 356 357 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 357 360 (face font-lock-string-face fontified t) 360 383 (fontified t) 383 388 (face font-lock-builtin-face fontified t) 388 389 (fontified t) 389 390 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 390 425 (fontified t) 425 426 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 426 427 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 427 436 (fontified t) 436 437 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 437 440 (face font-lock-string-face fontified t) 440 464 (fontified t) 464 469 (face font-lock-builtin-face fontified t) 469 470 (fontified t) 470 471 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 471 506 (fontified t) 506 507 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 507 508 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 508 517 (fontified t) 517 518 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 518 521 (face font-lock-string-face fontified t) 521 548 (fontified t) 548 553 (face font-lock-builtin-face fontified t) 553 554 (fontified t) 554 555 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 555 590 (fontified t) 590 591 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 591 592 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 592 593 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 593 601 (fontified t) 601 602 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 602 607 (face font-lock-keyword-face fontified t) 607 608 (fontified t) 608 643 (face font-lock-function-name-face fontified t) 643 644 (fontified t) 644 645 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 645 646 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 646 655 (fontified t) 655 656 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 656 660 (face font-lock-keyword-face fontified t) 660 661 (fontified t) 661 662 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 662 686 (fontified t) 686 687 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 687 698 (fontified t) 698 699 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 699 729 (fontified t) 729 730 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 730 764 (fontified t) 764 765 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 765 766 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 766 767 (fontified t) 767 777 (fontified t) 777 778 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 778 793 (fontified t) 793 794 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 794 795 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 795 796 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 796 804 (fontified t) 804 805 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 805 810 (face font-lock-keyword-face fontified t) 810 811 (fontified t) 811 833 (face font-lock-function-name-face fontified t) 833 834 (fontified t) 834 835 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 835 838 (fontified t) 838 839 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 839 848 (fontified t) 848 895 (face font-lock-doc-face fontified t) 895 904 (fontified t) 904 905 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 905 908 (face font-lock-keyword-face fontified t) 908 909 (fontified t) 909 910 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 910 911 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 911 923 (fontified t) 923 924 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 924 928 (face font-lock-keyword-face fontified t) 928 929 (fontified t) 929 930 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 930 931 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 931 939 (fontified t) 939 940 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 940 957 (fontified t) 957 958 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 958 992 (fontified t) 992 993 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 993 994 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 994 1001 (fontified t) 1001 1002 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1002 1016 (fontified t) 1016 1017 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 1017 1051 (fontified t) 1051 1052 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 1052 1053 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1053 1060 (fontified t) 1060 1061 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1061 1074 (fontified t) 1074 1075 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 1075 1076 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 1076 1077 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 1077 1092 (fontified t) 1092 1093 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 1093 1096 (fontified t) 1096 1097 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 1097 1101 (fontified t) 1101 1102 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 1102 1120 (fontified t) 1120 1121 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1121 1137 (fontified t) 1137 1138 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1138 1139 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 1139 1140 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 1140 1141 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 1141 1156 (fontified t) 1156 1157 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 1157 1161 (fontified t) 1161 1162 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 1162 1164 (fontified t) 1164 1165 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 1165 1181 (fontified t) 1181 1182 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 1182 1183 (fontified t) 1183 1184 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 1184 1195 (fontified t) 1195 1196 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 1196 1197 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 1197 1198 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 1198 1213 (fontified t) 1213 1214 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 1214 1218 (fontified t) 1218 1219 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 1219 1221 (fontified t) 1221 1222 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 1222 1239 (fontified t) 1239 1240 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 1240 1241 (fontified t) 1241 1242 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 1242 1254 (fontified t) 1254 1255 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 1255 1256 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 1256 1257 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 1257 1258 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 1258 1269 (fontified t) 1269 1270 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 1270 1274 (face font-lock-keyword-face fontified t) 1274 1275 (fontified t) 1275 1276 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 1276 1295 (fontified t) 1295 1296 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 1296 1297 (fontified t) 1297 1309 (fontified t) 1309 1310 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 1310 1332 (fontified t) 1332 1333 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 1333 1334 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 1334 1345 (fontified t) 1345 1346 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 1346 1365 (fontified t) 1365 1366 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 1366 1377 (fontified t) 1377 1378 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 1378 1406 (fontified t) 1406 1407 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 1407 1418 (fontified t) 1418 1419 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 1419 1423 (face font-lock-keyword-face fontified t) 1423 1424 (fontified t) 1424 1425 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 1425 1444 (fontified t) 1444 1445 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 1445 1458 (fontified t) 1458 1459 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 1459 1481 (fontified t) 1481 1482 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 1482 1483 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 1483 1484 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1484 1485 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 1485 1493 (fontified t) 1493 1494 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 1494 1499 (face font-lock-keyword-face fontified t) 1499 1500 (fontified t) 1500 1521 (face font-lock-function-name-face fontified t) 1521 1522 (fontified t) 1522 1523 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1523 1524 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1524 1533 (fontified t) 1533 1578 (face font-lock-doc-face fontified t) 1578 1587 (fontified t) 1587 1588 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1588 1599 (fontified t) 1599 1600 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1600 1609 (fontified t) 1609 1610 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1610 1634 (fontified t) 1634 1635 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1635 1636 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 1636 1644 (fontified t) 1644 1645 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 1645 1650 (face font-lock-keyword-face fontified t) 1650 1651 (fontified t) 1651 1673 (face font-lock-function-name-face fontified t) 1673 1674 (fontified t) 1674 1675 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1675 1676 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1676 1685 (fontified t) 1685 1731 (face font-lock-doc-face fontified t) 1731 1740 (fontified t) 1740 1741 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1741 1752 (fontified t) 1752 1753 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1753 1762 (fontified t) 1762 1763 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1763 1788 (fontified t) 1788 1789 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1789 1790 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 1790 1798 (fontified t) 1798 1799 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 1799 1804 (face font-lock-keyword-face fontified t) 1804 1805 (fontified t) 1805 1830 (face font-lock-function-name-face fontified t) 1830 1831 (fontified t) 1831 1832 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1832 1833 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1833 1834 (fontified t) 1834 1842 (fontified t) 1842 1893 (face font-lock-doc-face fontified t) 1893 1902 (fontified t) 1902 1903 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1903 1914 (fontified t) 1914 1915 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1915 1924 (fontified t) 1924 1925 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1925 1949 (fontified t) 1949 1950 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1950 1951 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 1951 1959 (fontified t) 1959 1962 (face font-lock-comment-delimiter-face fontified t) 1962 2004 (face font-lock-comment-face fontified t) 2004 2010 (fontified t) 2010 2011 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 2011 2026 (fontified t) 2026 2027 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 2027 2031 (fontified t) 2031 2045 (face font-lock-string-face fontified t) 2045 2046 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 2046 2069 (fontified t) 2069 2070 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 2070 2077 (fontified t) 2077 2078 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 2078 2093 (fontified t) 2093 2094 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 2094 2098 (fontified t) 2098 2114 (face font-lock-string-face fontified t) 2114 2115 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 2115 2139 (fontified t) 2139 2140 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 2140 2141 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 2141 2142 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 2142 2143 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 2143 2144 (fontified t)) #("lch" 0 3 (fontified t)) #("directory " 0 10 (fontified t)) #("-" 0 1 (fontified t)) #("cache" 0 5 (fontified t)) #("core-spacemacs-buffer.el --- Spacemacs Core File" 0 48 (face font-lock-comment-face fontified t)) #("Author: Sylvain Benner <sylvain.benner@gmail.com>" 0 49 (face font-lock-comment-face fontified t)) #("URL: https://github.com/syl20bnr/spacemacs" 0 42 (face font-lock-comment-face fontified t)) #(";; Copyright (c) 2012-2014 Sylvain Benner
;; Copyright (c) 2014-2015 Sylvain Benner & Contributors
;;
" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 41 (fontified t face font-lock-comment-face) 41 42 (fontified t) 42 45 (face font-lock-comment-delimiter-face fontified t) 45 98 (face font-lock-comment-face fontified t) 98 99 (fontified t) 99 101 (face font-lock-comment-delimiter-face fontified t) 101 102 (fontified t)) #("buffer" 0 6 (face font-lock-constant-face fontified t)) #(")" 0 1 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face")) #("buffer" 0 6 (face font-lock-constant-face fontified t)) #("core-" 0 5 (face font-lock-constant-face fontified t)) #(";;; core-spacemacs-buffer.el --- Spacemacs Core File
;;
;; Copyright (c) 2012-2014 Sylvain Benner
;; Copyright (c) 2014-2015 Sylvain Benner & Contributors
;;
;; Author: Sylvain Benner <sylvain.benner@gmail.com>
;; URL: https://github.com/syl20bnr/spacemacs
;;
;; This file is not part of GNU Emacs.
;;
;;; License: GPLv3
(defconst spacemacs-buffer-name \"*spacemacs*\"
  \"The name of the spacemacs buffer.\")

(defconst spacemacs-buffer--banner-length 75
  \"Width of a banner.\")

(defconst spacemacs-buffer--cache-file
  (expand-file-name (concat spacemacs-cache-directory \"spacemacs-buffer.el\"))
  \"Cache file for various persistent data for the spacemacs startup buffer\")

(defvar spacemacs-buffer--release-note-version nil
  \"If nil the release note is displayed. If non nil it contains
a version number, if the version number is lesser than the current
version the release note it displayed\")

(defvar spacemacs-buffer--note-widgets nil
  \"List of widgets used to display the release note.\")

(defvar spacemacs-buffer--previous-insert-type nil
  \"Previous type of note inserted.\")

(defun spacemacs-buffer/insert-banner-and-buttons ()
  \"Choose a banner according to `dotspacemacs-startup-banner'and insert it
in spacemacs buffer along with quick buttons underneath.

Easter egg:
Doge special text banner can be reachable via `999', `doge' or `random*'.
`random' ignore special banners whereas `random*' does not.\"
  (let ((banner (spacemacs-buffer//choose-banner))
        (buffer-read-only nil))
    (progn
      (when banner
        (spacemacs-buffer/message (format \"Banner: %s\" banner))
        (if (image-type-available-p (intern (file-name-extension banner)))
            (spacemacs-buffer//insert-image-banner banner)
          (insert-file-contents banner))
        (spacemacs-buffer//inject-version))
      (spacemacs-buffer//insert-buttons)
      (if (file-exists-p spacemacs-buffer--cache-file)
          (load spacemacs-buffer--cache-file)
        (unless (file-exists-p dotspacemacs-filepath)
          ;; fresh install of spacemacs, the release notes are not displayed
          (setq spacemacs-buffer--release-note-version spacemacs-version)
          (spacemacs/dump-vars-to-file
           '(spacemacs-buffer--release-note-version) spacemacs-buffer--cache-file)))
      ;; if there is an installed dotfile we check the variable
      ;; spacemacs-buffer--release-note-version to decide whether
      ;; we show the release note
      (when (and (file-exists-p dotspacemacs-filepath)
                 (or (not spacemacs-buffer--release-note-version)
                     (version< spacemacs-buffer--release-note-version
                               spacemacs-version)))
        (spacemacs-buffer/toggle-note (concat spacemacs-release-notes-directory \"0.104.txt\")
                                      'release-note))
      (spacemacs//redisplay))))

(defun spacemacs-buffer//choose-banner ()
  \"Return the full path of a banner based on the dotfile value.\"
  (when dotspacemacs-startup-banner
    (cond ((eq 'official dotspacemacs-startup-banner)
           (if (and (display-graphic-p) (image-type-available-p 'png))
               spacemacs-banner-official-png
             (spacemacs-buffer//get-banner-path 1)))
          ((eq 'random dotspacemacs-startup-banner)
           (spacemacs-buffer//choose-random-text-banner))
          ((eq 'random* dotspacemacs-startup-banner)
           (spacemacs-buffer//choose-random-text-banner t))
          ((eq 'doge dotspacemacs-startup-banner)
           (spacemacs-buffer//get-banner-path 999))
          ((integerp dotspacemacs-startup-banner)
           (spacemacs-buffer//get-banner-path dotspacemacs-startup-banner))
          ((and dotspacemacs-startup-banner
                (image-type-available-p (intern (file-name-extension
                                                 dotspacemacs-startup-banner)))
                (display-graphic-p))
           (if (file-exists-p dotspacemacs-startup-banner)
               dotspacemacs-startup-banner
             (spacemacs-buffer/warning (format \"could not find banner %s\"
                                               dotspacemacs-startup-banner))
             (spacemacs-buffer//get-banner-path 1)))
          (t (spacemacs-buffer//get-banner-path 1)))))

(defun spacemacs-buffer//choose-random-text-banner (&optional all)
  \"Return the full path of a banner chosen randomly.

If ALL is non-nil then truly all banners can be selected.\"
  (let* ((files (directory-files spacemacs-banner-directory t))
         (count (length files))
         ;; -2 then +2 to remove `.' and `..'
         (choice (+ 2 (random (- count (if all 2 3))))))
    (nth choice files)))

(defun spacemacs-buffer//get-banner-path (index)
  \"Return the full path to banner with index INDEX.\"
  (concat spacemacs-banner-directory (format \"%03d-banner.txt\" index)))

(defun spacemacs-buffer//insert-image-banner (banner)
  \"Display an image banner.\"
  (when (file-exists-p banner)
    (let* ((title \"[S P A C E M A C S]\")
           (spec (create-image banner))
           (size (image-size spec))
           (width (car size))
           (left-margin (floor (- spacemacs-buffer--banner-length width) 2)))
      (beginning-of-buffer)
      (insert \"\\n\")
      (insert (make-string (- left-margin 1) ?\\ ))
      (insert-image spec)
      (insert \"\\n\\n\")
      (insert (make-string (+ left-margin
                              (floor (/ (- width (length title)) 2))) ?\\ ))
      (insert (format \"%s\\n\\n\" title)))))

(defun spacemacs-buffer//inject-version (&optional insert-distro)
  \"Inject the current version of spacemacs in the first line of the
buffer, right justified.\"
  (with-current-buffer (get-buffer-create \"*spacemacs*\")
    (save-excursion
      (let* ((maxcol spacemacs-buffer--banner-length)
             (injected (if insert-distro
                           (format \"(%s-%s)\"
                                   dotspacemacs-distribution
                                   spacemacs-version)
                         (format \"(%s)\" spacemacs-version)))
             (pos (- maxcol (length injected)))
             (buffer-read-only nil))
        ;; reset first line
        (beginning-of-buffer)
        (let ((buffer-read-only nil))
          (end-of-line)
          (kill-line (- maxcol)))
        (beginning-of-buffer)
        ;; fill the first line with spaces if required
        (when (< (line-end-position) maxcol)
          (end-of-line)
          (insert-char ?\\s (- maxcol (line-end-position))))
        (goto-char pos)
        (delete-char (length injected))
        (insert injected)))))

(defun spacemacs-buffer//insert-note (file caption &optional additional-widgets)
  \"Insert the release note just under the banner.

FILE is the file that contains the content to show.
CAPTION is the title of the note.
TAG-STRING is the label of the button for additional action.
HELP-STRING is the help message of the button for additional action.\"
  (save-excursion
    (beginning-of-buffer)
    (search-forward \"Spacemacs\\]\")
    (next-line)
    (let* ((note (concat \"\\n\" (spacemacs//render-framed-text file
                                                             spacemacs-buffer--banner-length
                                                             caption))))
      (add-to-list 'spacemacs-buffer--note-widgets (widget-create 'text note))
      (funcall additional-widgets))))

(defun spacemacs-buffer//insert-note-p (type)
  \"Decicde if whether to insert note widget or not based on current note TYPE.

If note TYPE is `quickhelp' or `release-note' and is equal to
previous insert type in `spacemacs-buffer--previous-insert-type',
which means previous note widget of the same type already
inserted. In this case, we simply delete the widgets but don't insert.

Otherwise, delete and allow insert note of TYPE.\"
  (if (not (eq spacemacs-buffer--previous-insert-type type))
      type
    (setq spacemacs-buffer--previous-insert-type nil)))

(defun spacemacs-buffer/toggle-note (file type)
  \"Toggle the note in FILE for the buffer based on TYPE.

If TYPE is nil, just remove widgets.\"
  (interactive)
  (spacemacs-buffer//remove-existing-widget-if-exist)
  (cond
   ((eq type 'quickhelp)
    (spacemacs-buffer//insert-quickhelp-widget file))
   ((eq type 'release-note)
    (spacemacs-buffer//insert-release-note-widget file))
   (t)))

(defun spacemacs-buffer//remove-existing-widget-if-exist ()
  \"Remove existing note widgets if exists.\"
  (when spacemacs-buffer--note-widgets
    (spacemacs-buffer//remove-note-widgets)))

(defun spacemacs-buffer//insert-quickhelp-widget (file)
  \"Insert quickhelp with content from FILE.\"
  (spacemacs-buffer//remove-existing-widget-if-exist)
  (let ((widget-func (lambda ()
                       (add-to-list 'spacemacs-buffer--note-widgets
                                    (widget-create 'push-button
                                                   :tag (propertize \"Evil Tutorial\" 'face 'font-lock-keyword-face)
                                                   :help-echo \"Teach you how to use Vim basics.\"
                                                   :action (lambda (&rest ignore) (call-interactively #'evil-tutor-start))
                                                   :mouse-face 'highlight
                                                   :follow-link \"\\C-m\"))
                       (widget-insert \" \")
                       (add-to-list 'spacemacs-buffer--note-widgets
                                    (widget-create 'push-button
                                                   :tag (propertize \"Emacs Tutorial\" 'face 'font-lock-keyword-face)
                                                   :help-echo \"Teach you how to use Emacs basics.\"
                                                   :action (lambda (&rest ignore) (call-interactively #'help-with-tutorial))
                                                   :mouse-face 'highlight
                                                   :follow-link \"\\C-m\"))
                       (widget-insert \" \")
                       (add-to-list 'spacemacs-buffer--note-widgets
                                    (widget-create 'push-button
                                                   :tag (propertize \"Vim Migration Guide\" 'face 'font-lock-keyword-face)
                                                   :help-echo \"Documentation for former vim users.\"
                                                   :action (lambda (&rest ignore) (spacemacs/view-org-file (concat spacemacs-docs-directory \"VIMUSERS.org\") \"^\" 'all))
                                                   :mouse-face 'highlight
                                                   :follow-link \"\\C-m\")))))
    (spacemacs-buffer//insert-note file \"Quick Help\" widget-func))
  (setq spacemacs-buffer--previous-insert-type 'quickhelp))

(defun spacemacs-buffer//insert-release-note-widget (file)
  \"Insert release note with content from FILE.\"
  (spacemacs-buffer//remove-existing-widget-if-exist)
  (let ((widget-func (lambda ()
                       (add-to-list 'spacemacs-buffer--note-widgets
                                    (widget-create 'push-button
                                                   :tag (propertize \"Click here for full change log\" 'face 'font-lock-warning-face)
                                                   :help-echo \"Open the full change log.\"
                                                   :action (lambda (&rest ignore)
                                                             (funcall 'spacemacs/view-org-file
                                                                      (concat user-emacs-directory \"CHANGELOG.org\")
                                                                      \"Release 0.104.x\"
                                                                      'subtree))
                                                   :mouse-face 'highlight
                                                   :follow-link \"\\C-m\")))))
    (spacemacs-buffer//insert-note file
                                   \" Important Notes (Release 0.104.x) \"
                                   widget-func))

  (setq spacemacs-buffer--release-note-version nil)
  (spacemacs/dump-vars-to-file
   '(spacemacs-buffer--release-note-version) spacemacs-buffer--cache-file)
  (setq spacemacs-buffer--previous-insert-type 'release-note))

(defun spacemacs-buffer//remove-note-widgets ()
  (mapc 'widget-delete spacemacs-buffer--note-widgets)
  (setq spacemacs-buffer--note-widgets nil)
  (setq spacemacs-buffer--release-note-version spacemacs-version)
  (spacemacs/dump-vars-to-file
   '(spacemacs-buffer--release-note-version) spacemacs-buffer--cache-file))

(defun spacemacs-buffer/set-mode-line (format)
  \"Set mode-line format for spacemacs buffer.\"
  (with-current-buffer (get-buffer-create \"*spacemacs*\")
    (setq mode-line-format format)))

(defun spacemacs-buffer/message (msg &rest args)
  \"Display MSG in message prepended with '(Spacemacs)'.
The message is displayed only if `dotspacemacs-verbose-loading' is non nil.\"
  (when dotspacemacs-verbose-loading
    (message \"(Spacemacs) %s\" (apply 'format msg args))))

(defun spacemacs-buffer/warning (msg &rest args)
  \"Display MSG as a warning message but in buffer `*Messages*'.
The message is always displayed. \"
  (message \"(Spacemacs) Warning: %s\" (apply 'format msg args)))

(defun spacemacs-buffer/insert-page-break ()
  \"Insert a page break line in spacemacs buffer.\"
  (spacemacs-buffer/append \"\\n\\n\\n\"))

(defun spacemacs-buffer/append (msg &optional messagebuf)
  \"Append MSG to spacemacs buffer. If MESSAGEBUF is not nil then MSG is
 also written in message buffer.\"
  (with-current-buffer (get-buffer-create \"*spacemacs*\")
    (goto-char (point-max))
    (let ((buffer-read-only nil))
      (insert msg)
      (if messagebuf (message \"(Spacemacs) %s\" msg)))
    (spacemacs-buffer/set-mode-line \"\")))

(defun spacemacs-buffer/replace-last-line (msg &optional messagebuf)
  \"Replace the last line of the spacemacs buffer with MSG. If MESSAGEBUF is
 not nil then MSG is also written in message buffer.\"
  (with-current-buffer (get-buffer-create \"*spacemacs*\")
    (goto-char (point-max))
    (let ((buffer-read-only nil))
      (delete-region (line-beginning-position) (point-max))
      (insert msg)
      (if messagebuf (message \"(Spacemacs) %s\" msg)))
    (spacemacs-buffer/set-mode-line \"\")))

(defun spacemacs-buffer/insert-framed-text
    (msg &optional caption hpadding)
  \"Insert MSG in spacemacs buffer within a frame of width FILL-COLUMN.

See `spacemacs//render-framed-text' for documentation of the other
parameters.\"
  (with-current-buffer (get-buffer-create \"*spacemacs*\")
    (let ((buffer-read-only nil))
      (insert (spacemacs//render-framed-text msg spacemacs-buffer--banner-length
                                             caption hpadding)))))

(defun spacemacs-buffer/insert-framed-text-from-file
    (filepath &optional caption hpadding)
  \"Insert at point the content of FILENAME file in spacemacs buffer in a
frame.

If FILEPATH does not exists the function returns nil.

See `spacemacs//render-framed-text' for documentation of the other
parameters.\"
  (when (file-exists-p filepath)
    (with-current-buffer (get-buffer-create \"*spacemacs*\")
      (let ((buffer-read-only nil))
        (insert (spacemacs//render-framed-text filepath spacemacs-buffer--banner-length
                                               caption hpadding))))))

(defun spacemacs//render-framed-text (content &optional width caption hpadding)
  \"Return a formated string framed with plained lines of width FILL-COLUMN.

CONTENT can be a text or a filepath.

WIDTH set the `fill-column' variable.

If CAPTION is non nil string then it is included in at the top of the frame.
If CAPTION length is greater than FILL-COLUMN minus 5 the function returns
nil.

HPADDING is the horizontal spacing between the text and the frame.
The vertical spacing is always one line.\"
  (with-temp-buffer
    (if (not (file-exists-p content))
        (insert content)
      (insert-file-contents content)
      ;; remove additional newline at eof
      (goto-char (point-max))
      (delete-char -1))
    (let* ((hpadding (or hpadding 1))
           (fill-column (if width
                            (- width (+ 2 (* 2 hpadding)))
                          fill-column))
           (sentence-end-double-space nil)
           (caption-len (length caption)))
      (fill-region (point-min) (point-max) 'justify 'nosqueeze)
      (concat
       ;; top
       \"╭─\"
       (if caption
           (concat caption
                   (make-string (+ (- fill-column caption-len 1)
                                   hpadding) ?─))
         (make-string fill-column ?─))
       (make-string hpadding ?─) \"╮\\n\"
       ;; content
       (spacemacs//render-framed-line \"\" hpadding)
       (mapconcat (lambda (x)
                    (spacemacs//render-framed-line x hpadding))
                  (split-string (buffer-string) \"\\n\" nil) \"\")
       (spacemacs//render-framed-line \"\" hpadding)
       ;; bottom
       \"╰\" (make-string hpadding ?─)
       (make-string fill-column ?─)
       (make-string hpadding ?─) \"╯\"))))

(defun spacemacs//render-framed-line (line hpadding)
  \"Return a formated LINE with borders of a frame on each side and
with width FILL-COLUMN.

If length of LINE is bigger than FILL-COLUMN it returns nil.

HPADDING is the horizontal spacing betwee the content line and the frame border.\"
  (let* ((len (length line))
         (fill (- fill-column len)))
    (when (>= fill 0)
      (concat \"│\" (make-string hpadding ?\\s)
              line (make-string fill ?\\s)
              (make-string hpadding ?\\s) \"│\\n\"))))

(defun spacemacs-buffer/loading-animation ()
  \"Display the progress bar by chunk of size `spacemacs--loading-dots-chunk-threshold'.\"
  (when dotspacemacs-loading-progress-bar
    (setq spacemacs-loading-counter (1+ spacemacs-loading-counter))
    (when (>= spacemacs-loading-counter spacemacs-loading-dots-chunk-threshold)
      (setq spacemacs-loading-counter 0)
      (setq spacemacs-loading-string
            (concat spacemacs-loading-string
                    (make-string spacemacs-loading-dots-chunk-size
                                 spacemacs-loading-char)))
      (spacemacs-buffer/set-mode-line spacemacs-loading-string)
      (spacemacs//redisplay))))

(defmacro spacemacs//insert--shortcut (shortcut-char search-label &optional no-next-line)
  `(define-key spacemacs-mode-map ,shortcut-char (lambda ()
                                                   (interactive)
                                                   (unless (search-forward ,search-label (point-max) t)
                                                     (search-backward ,search-label (point-min) t))
                                                   ,@(unless no-next-line
                                                       '((forward-line 1)))
                                                   (back-to-indentation))))

(defun spacemacs-buffer//insert-buttons ()
  (goto-char (point-max))
  (insert \"     \")
  (spacemacs//insert--shortcut \"m\" \"[?]\" t)
  (widget-create 'url-link
                 :tag (propertize \"?\" 'face 'font-lock-doc-face)
                 :help-echo \"Open the quickhelp.\"
                 :action (lambda (&rest ignore)
                           (spacemacs-buffer/toggle-note (concat spacemacs-info-directory \"quickhelp.txt\")
                                                         ;; if nil is returned, just delete the current note widgets
                                                         (spacemacs-buffer//insert-note-p 'quickhelp)))
                 :mouse-face 'highlight
                 :follow-link \"\\C-m\"
                 )
  (insert \" \")
  (widget-create 'url-link
                 :tag (propertize \"Homepage\" 'face 'font-lock-keyword-face)
                 :help-echo \"Open the Spacemacs Github page in your browser.\"
                 :mouse-face 'highlight
                 :follow-link \"\\C-m\"
                 \"https://github.com/syl20bnr/spacemacs\")
  (insert \" \")
  (widget-create 'url-link
                 :tag (propertize \"Documentation\" 'face 'font-lock-keyword-face)
                 :help-echo \"Open the Spacemacs documentation in your browser.\"
                 :mouse-face 'highlight
                 :follow-link \"\\C-m\"
                 \"https://github.com/syl20bnr/spacemacs/blob/master/doc/DOCUMENTATION.org\")
  (insert \" \")
  (widget-create 'url-link
                 :tag (propertize \"Gitter Chat\" 'face 'font-lock-keyword-face)
                 :help-echo \"Ask questions and chat with fellow users in our chat room.\"
                 :mouse-face 'highlight
                 :follow-link \"\\C-m\"
                 \"https://gitter.im/syl20bnr/spacemacs\")
  (insert \" \")
  (widget-create 'push-button
                 :help-echo \"Update all ELPA packages to the latest versions.\"
                 :action (lambda (&rest ignore) (configuration-layer/update-packages))
                 :mouse-face 'highlight
                 :follow-link \"\\C-m\"
                 (propertize \"Update\" 'face 'font-lock-keyword-face))
  (insert \" \")
  (widget-create 'push-button
                 :help-echo \"Rollback ELPA package upgrades if something got borked.\"
                 :action (lambda (&rest ignore) (call-interactively 'configuration-layer/rollback))
                 :mouse-face 'highlight
                 :follow-link \"\\C-m\"
                 (propertize \"Rollback\" 'face 'font-lock-keyword-face))
  (insert \"\\n\")
  (insert \"                  \")
  (widget-create 'push-button
                 :tag (propertize \"Release Notes\" 'face 'font-lock-preprocessor-face)
                 :help-echo \"Hide or show the Changelog\"
                 :action (lambda (&rest ignore)
                           (spacemacs-buffer/toggle-note (concat spacemacs-release-notes-directory \"0.104.txt\")
                                                         ;; if nil is returned, just delete the current note widgets
                                                         (spacemacs-buffer//insert-note-p 'release-note)))
                 :mouse-face 'highlight
                 :follow-link \"\\C-m\"
                 )
  (insert \" \")
  (widget-create 'url-link
                 :tag (propertize \"Search in Spacemacs\" 'face 'font-lock-function-name-face)
                 :help-echo \"Find Spacemacs package and layer configs using helm-spacemacs.\"
                 :action (lambda (&rest ignore) (call-interactively 'helm-spacemacs))
                 :mouse-face 'highlight
                 :follow-link \"\\C-m\")
  (insert \"\\n\\n\"))

(defun spacemacs-buffer//insert-file-list (list-display-name list)
  (when (car list)
    (insert list-display-name)
    (mapc (lambda (el)
            (insert \"\\n    \")
            (widget-create 'push-button
                           :action `(lambda (&rest ignore) (find-file-existing ,el))
                           :mouse-face 'highlight
                           :follow-link \"\\C-m\"
                           :button-prefix \"\"
                           :button-suffix \"\"
                           :format \"%[%t%]\"
                           (abbreviate-file-name el)))
          list)))

(defun spacemacs-buffer//insert-bookmark-list (list-display-name list)
  (when (car list)
    (insert list-display-name)
    (mapc (lambda (el)
            (insert \"\\n    \")
            (widget-create 'push-button
                           :action `(lambda (&rest ignore) (bookmark-jump ,el))
                           :mouse-face 'highlight
                           :follow-link \"\\C-m\"
                           :button-prefix \"\"
                           :button-suffix \"\"
                           :format \"%[%t%]\"
                           (format \"%s - %s\" el (abbreviate-file-name
                                                 (bookmark-get-filename el)))))
          list)))

(defun spacemacs-buffer/insert-startupify-lists ()
  (interactive)
  (with-current-buffer (get-buffer-create \"*spacemacs*\")
    (let ((buffer-read-only nil)
          (list-separator \"\\n\\n\"))
      (goto-char (point-max))
      (page-break-lines-mode)
      (spacemacs-buffer/insert-page-break)
      (mapc (lambda (el)
              (cond
               ((eq el 'recents)
                (recentf-mode)
                (when (spacemacs-buffer//insert-file-list \"Recent Files:\" (recentf-elements 5))
                  (spacemacs//insert--shortcut \"r\" \"Recent Files:\")
                  (insert list-separator)))
               ((eq el 'bookmarks)
                (helm-mode)
                (when (spacemacs-buffer//insert-bookmark-list \"Bookmarks:\" (bookmark-all-names))
                  (spacemacs//insert--shortcut \"m\" \"Bookmarks:\")
                  (insert list-separator)))
               ((eq el 'projects)
                (projectile-mode)
                (when (spacemacs-buffer//insert-file-list \"Projects:\" (projectile-relevant-known-projects))
                  (spacemacs//insert--shortcut \"p\" \"Projects:\")
                  (insert list-separator))))) dotspacemacs-startup-lists))))

(defun spacemacs-buffer/goto-link-line ()
  \"Move the point to the beginning of the link line.\"
  (interactive)
  (with-current-buffer spacemacs-buffer-name
    (goto-char (point-min))
    (re-search-forward \"Homepage\")
    (beginning-of-line)
    (widget-forward 1)))

(provide 'core-spacemacs-buffer)
" 0 4 (face font-lock-comment-delimiter-face fontified t) 4 53 (face font-lock-comment-face fontified t) 53 55 (face font-lock-comment-delimiter-face fontified t) 55 56 (face font-lock-comment-face fontified t) 56 59 (face font-lock-comment-delimiter-face fontified t) 59 98 (face font-lock-comment-face fontified t) 98 101 (face font-lock-comment-delimiter-face fontified t) 101 155 (face font-lock-comment-face fontified t) 155 157 (face font-lock-comment-delimiter-face fontified t) 157 158 (face font-lock-comment-face fontified t) 158 161 (face font-lock-comment-delimiter-face fontified t) 161 211 (face font-lock-comment-face fontified t) 211 214 (face font-lock-comment-delimiter-face fontified t) 214 257 (face font-lock-comment-face fontified t) 257 259 (face font-lock-comment-delimiter-face fontified t) 259 260 (face font-lock-comment-face fontified t) 260 263 (face font-lock-comment-delimiter-face fontified t) 263 299 (face font-lock-comment-face fontified t) 299 301 (face font-lock-comment-delimiter-face fontified t) 301 302 (face font-lock-comment-face fontified t) 302 306 (face font-lock-comment-delimiter-face fontified t) 306 321 (face font-lock-comment-face fontified t) 321 322 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 322 330 (face font-lock-keyword-face fontified t) 330 331 (fontified t) 331 352 (face font-lock-variable-name-face fontified t) 352 353 (fontified t) 353 366 (face font-lock-string-face fontified t) 366 369 (fontified t) 369 404 (face font-lock-doc-face fontified t) 404 405 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 405 407 (fontified t) 407 408 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 408 416 (face font-lock-keyword-face fontified t) 416 417 (fontified t) 417 448 (face font-lock-variable-name-face fontified t) 448 454 (fontified t) 454 474 (face font-lock-doc-face fontified t) 474 475 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 475 477 (fontified t) 477 478 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 478 486 (face font-lock-keyword-face fontified t) 486 487 (fontified t) 487 515 (face font-lock-variable-name-face fontified t) 515 516 (fontified t) 516 518 (fontified t) 518 519 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 519 536 (fontified t) 536 537 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 537 570 (fontified t) 570 591 (face font-lock-string-face fontified t) 591 592 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 592 593 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 593 596 (fontified t) 596 669 (face font-lock-doc-face fontified t) 669 670 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 670 671 (fontified t) 671 672 (fontified t) 672 673 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 673 679 (face font-lock-keyword-face fontified t) 679 680 (fontified t) 680 718 (face font-lock-variable-name-face fontified t) 718 725 (fontified t) 725 892 (face font-lock-doc-face fontified t) 892 893 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 893 895 (fontified t) 895 896 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 896 902 (face font-lock-keyword-face fontified t) 902 903 (fontified t) 903 933 (face font-lock-variable-name-face fontified t) 933 940 (fontified t) 940 991 (face font-lock-doc-face fontified t) 991 992 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 992 994 (fontified t) 994 995 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 995 1001 (face font-lock-keyword-face fontified t) 1001 1002 (fontified t) 1002 1040 (face font-lock-variable-name-face fontified t) 1040 1045 (fontified t) 1045 1047 (fontified t) 1047 1080 (face font-lock-doc-face fontified t) 1080 1081 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1081 1083 (fontified t) 1083 1084 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1084 1089 (face font-lock-keyword-face fontified t) 1089 1090 (fontified t) 1090 1132 (face font-lock-function-name-face fontified t) 1132 1133 (fontified t) 1133 1134 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1134 1135 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1135 1138 (fontified t) 1138 1169 (face font-lock-doc-face fontified t) 1169 1196 (face (font-lock-constant-face font-lock-doc-face) fontified t) 1196 1211 (face font-lock-doc-face fontified t) 1211 1328 (face font-lock-doc-face fontified t) 1328 1331 (face (font-lock-constant-face font-lock-doc-face) fontified t) 1331 1335 (face font-lock-doc-face fontified t) 1335 1339 (face (font-lock-constant-face font-lock-doc-face) fontified t) 1339 1345 (face font-lock-doc-face fontified t) 1345 1352 (face (font-lock-constant-face font-lock-doc-face) fontified t) 1352 1356 (face font-lock-doc-face fontified t) 1356 1362 (face (font-lock-constant-face font-lock-doc-face) fontified t) 1362 1396 (face font-lock-doc-face fontified t) 1396 1403 (face (font-lock-constant-face font-lock-doc-face) fontified t) 1403 1415 (face font-lock-doc-face fontified t) 1415 1418 (fontified t) 1418 1419 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1419 1422 (face font-lock-keyword-face fontified t) 1422 1423 (fontified t) 1423 1424 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 1424 1425 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 1425 1432 (fontified t) 1432 1433 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1433 1464 (fontified t) 1464 1465 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1465 1466 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 1466 1475 (fontified t) 1475 1476 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 1476 1496 (fontified t) 1496 1497 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 1497 1498 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 1498 1503 (fontified t) 1503 1504 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 1504 1509 (face font-lock-keyword-face fontified t) 1509 1516 (fontified t) 1516 1517 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 1517 1521 (face font-lock-keyword-face fontified t) 1521 1537 (fontified t) 1537 1538 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1538 1563 (fontified t) 1563 1564 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 1564 1571 (fontified t) 1571 1583 (face font-lock-string-face fontified t) 1583 1590 (fontified t) 1590 1591 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 1591 1592 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 1592 1593 (fontified t) 1593 2869 (fontified nil) 2869 2870 (fontified nil) 2870 2871 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 2871 2876 (face font-lock-keyword-face fontified nil) 2876 2877 (fontified nil) 2877 2908 (face font-lock-function-name-face fontified nil) 2908 2909 (fontified nil) 2909 2910 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 2910 2911 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 2911 2914 (fontified nil) 2914 2976 (face font-lock-doc-face fontified nil) 2976 2979 (fontified nil) 2979 2980 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 2980 2984 (face font-lock-keyword-face fontified nil) 2984 3017 (fontified nil) 3017 3018 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 3018 3022 (face font-lock-keyword-face fontified nil) 3022 3023 (fontified nil) 3023 3024 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 3024 3025 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 3025 3065 (fontified nil) 3065 3066 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 3066 3078 (fontified nil) 3078 3079 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 3079 3081 (face font-lock-keyword-face fontified nil) 3081 3082 (fontified nil) 3082 3083 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 3083 3087 (fontified nil) 3087 3088 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified nil) 3088 3105 (fontified nil) 3105 3106 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified nil) 3106 3107 (fontified nil) 3107 3108 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified nil) 3108 3135 (fontified nil) 3135 3136 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified nil) 3136 3137 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 3137 3196 (fontified nil) 3196 3197 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 3197 3232 (fontified nil) 3232 3233 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 3233 3234 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 3234 3235 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 3235 3246 (fontified nil) 3246 3247 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 3247 3248 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 3248 3286 (fontified nil) 3286 3287 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 3287 3299 (fontified nil) 3299 3300 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 3300 3343 (fontified nil) 3343 3344 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 3344 3345 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 3345 3356 (fontified nil) 3356 3357 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 3357 3358 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 3358 3397 (fontified nil) 3397 3398 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 3398 3399 (fontified nil) 3399 4278 (fontified nil) 4278 4279 (fontified nil) 4279 4280 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 4280 4285 (face font-lock-keyword-face fontified nil) 4285 4286 (fontified nil) 4286 4329 (face font-lock-function-name-face fontified nil) 4329 4330 (fontified nil) 4330 4331 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 4331 4340 (face font-lock-type-face fontified nil) 4340 4344 (fontified nil) 4344 4345 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 4345 4348 (fontified nil) 4348 4458 (face font-lock-doc-face fontified nil) 4458 4461 (fontified nil) 4461 4462 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 4462 4466 (face font-lock-keyword-face fontified nil) 4466 4467 (fontified nil) 4467 4468 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 4468 4469 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 4469 4475 (fontified nil) 4475 4476 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 4476 4520 (fontified nil) 4520 4521 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 4521 4522 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 4522 4532 (fontified nil) 4532 4533 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 4533 4539 (fontified nil) 4539 4540 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 4540 4552 (fontified nil) 4552 4553 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 4553 4554 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 4554 4564 (fontified nil) 4564 4567 (face font-lock-comment-delimiter-face fontified nil) 4567 4597 (face font-lock-comment-face fontified nil) 4597 4599 (face (font-lock-constant-face font-lock-comment-face) fontified nil) 4599 4601 (face font-lock-comment-face fontified nil) 4601 4610 (fontified nil) 4610 4611 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 4611 4618 (fontified nil) 4618 4619 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 4619 4623 (fontified nil) 4623 4624 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 4624 4631 (fontified nil) 4631 4632 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified nil) 4632 4640 (fontified nil) 4640 4641 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified nil) 4641 4643 (face font-lock-keyword-face fontified nil) 4643 4651 (fontified nil) 4651 4652 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified nil) 4652 4653 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified nil) 4653 4654 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 4654 4655 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 4655 4656 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 4656 4657 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 4657 4662 (fontified nil) 4662 4663 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 4663 4679 (fontified nil) 4679 4680 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 4680 4681 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 4681 4682 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 4682 4684 (fontified nil) 4684 4685 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 4685 4690 (face font-lock-keyword-face fontified nil) 4690 4691 (fontified nil) 4691 4724 (face font-lock-function-name-face fontified nil) 4724 4725 (fontified nil) 4725 4726 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 4726 4731 (fontified nil) 4731 4732 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 4732 4735 (fontified nil) 4735 4785 (face font-lock-doc-face fontified nil) 4785 4786 (fontified nil) 4786 4858 (fontified nil) 4858 4859 (fontified nil) 4859 4860 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 4860 4865 (face font-lock-keyword-face fontified nil) 4865 4866 (fontified nil) 4866 4903 (face font-lock-function-name-face fontified nil) 4903 4904 (fontified nil) 4904 4905 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 4905 4911 (fontified nil) 4911 4912 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 4912 4915 (fontified nil) 4915 4941 (face font-lock-doc-face fontified nil) 4941 4944 (fontified nil) 4944 4945 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 4945 4949 (face font-lock-keyword-face fontified nil) 4949 4950 (fontified nil) 4950 4951 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 4951 4971 (fontified nil) 4971 4972 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 4972 4977 (fontified nil) 4977 4978 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 4978 4982 (face font-lock-keyword-face fontified nil) 4982 4983 (fontified nil) 4983 4984 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 4984 4985 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 4985 4991 (fontified nil) 4991 5012 (face font-lock-string-face fontified nil) 5012 5013 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 5013 5025 (fontified nil) 5025 5026 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 5026 5031 (fontified nil) 5031 5032 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 5032 5051 (fontified nil) 5051 5052 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 5052 5053 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 5053 5065 (fontified nil) 5065 5066 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 5066 5071 (fontified nil) 5071 5072 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 5072 5087 (fontified nil) 5087 5088 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 5088 5089 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 5089 5101 (fontified nil) 5101 5102 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 5102 5108 (fontified nil) 5108 5109 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 5109 5117 (fontified nil) 5117 5118 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 5118 5119 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 5119 5131 (fontified nil) 5131 5132 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 5132 5144 (fontified nil) 5144 5145 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 5145 5151 (fontified nil) 5151 5152 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified nil) 5152 5191 (fontified nil) 5191 5192 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified nil) 5192 5194 (fontified nil) 5194 5195 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 5195 5196 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 5196 5197 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 5197 5204 (fontified nil) 5204 5205 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 5205 5224 (fontified nil) 5224 5225 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 5225 5232 (fontified nil) 5232 5233 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 5233 5240 (fontified nil) 5240 5244 (face font-lock-string-face fontified nil) 5244 5245 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 5245 5252 (fontified nil) 5252 5253 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 5253 5260 (fontified nil) 5260 5261 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 5261 5273 (fontified nil) 5273 5274 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 5274 5289 (fontified nil) 5289 5290 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 5290 5294 (fontified nil) 5294 5295 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 5295 5296 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 5296 5303 (fontified nil) 5303 5304 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 5304 5321 (fontified nil) 5321 5322 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 5322 5329 (fontified nil) 5329 5330 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 5330 5337 (fontified nil) 5337 5343 (face font-lock-string-face fontified nil) 5343 5344 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 5344 5351 (fontified nil) 5351 5352 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 5352 5359 (fontified nil) 5359 5360 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 5360 5372 (fontified nil) 5372 5373 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 5373 5387 (fontified nil) 5387 5505 (fontified nil) 5505 5506 (fontified nil) 5506 5507 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 5507 5512 (face font-lock-keyword-face fontified nil) 5512 5513 (fontified nil) 5513 5545 (face font-lock-function-name-face fontified nil) 5545 5546 (fontified nil) 5546 5547 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 5547 5556 (face font-lock-type-face fontified nil) 5556 5570 (fontified nil) 5570 5571 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 5571 5574 (fontified nil) 5574 5665 (face font-lock-doc-face fontified nil) 5665 5668 (fontified nil) 5668 5669 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 5669 5688 (face font-lock-keyword-face fontified nil) 5688 5689 (fontified nil) 5689 5690 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 5690 5708 (fontified nil) 5708 5721 (face font-lock-string-face fontified nil) 5721 5722 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 5722 5727 (fontified nil) 5727 5728 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 5728 5742 (face font-lock-keyword-face fontified nil) 5742 5749 (fontified nil) 5749 5750 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 5750 5754 (face font-lock-keyword-face fontified nil) 5754 5755 (fontified nil) 5755 5756 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 5756 5757 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 5757 5795 (fontified nil) 5795 5796 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 5796 5810 (fontified nil) 5810 5811 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 5811 5820 (fontified nil) 5820 5821 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified nil) 5821 5823 (face font-lock-keyword-face fontified nil) 5823 5865 (fontified nil) 5865 5866 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified nil) 5866 5873 (fontified nil) 5873 5882 (face font-lock-string-face fontified nil) 5882 5996 (fontified nil) 5996 5997 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified nil) 5997 6023 (fontified nil) 6023 6024 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified nil) 6024 6031 (fontified nil) 6031 6037 (face font-lock-string-face fontified nil) 6037 6055 (fontified nil) 6055 6056 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified nil) 6056 6057 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified nil) 6057 6058 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 6058 6059 (fontified nil) 6059 6606 (fontified nil) 6606 6607 (fontified nil) 6607 6608 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 6608 6613 (face font-lock-keyword-face fontified nil) 6613 6614 (fontified nil) 6614 6643 (face font-lock-function-name-face fontified nil) 6643 6644 (fontified nil) 6644 6645 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 6645 6658 (fontified nil) 6658 6667 (face font-lock-type-face fontified nil) 6667 6686 (fontified nil) 6686 6687 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 6687 6690 (fontified nil) 6690 6955 (face font-lock-doc-face fontified nil) 6955 6958 (fontified nil) 6958 6959 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 6959 6973 (face font-lock-keyword-face fontified nil) 6973 6978 (fontified nil) 6978 6979 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 6979 6998 (fontified nil) 6998 6999 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 6999 7004 (fontified nil) 7004 7005 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 7005 7020 (fontified nil) 7020 7033 (face font-lock-string-face fontified nil) 7033 7034 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 7034 7039 (fontified nil) 7039 7040 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 7040 7049 (fontified nil) 7049 7050 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 7050 7055 (fontified nil) 7055 7056 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 7056 7060 (face font-lock-keyword-face fontified nil) 7060 7061 (fontified nil) 7061 7062 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 7062 7063 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 7063 7068 (fontified nil) 7068 7069 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 7069 7076 (fontified nil) 7076 7080 (face font-lock-string-face fontified nil) 7080 7081 (fontified nil) 7081 7082 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified nil) 7082 7117 (fontified nil) 7117 7400 (fontified nil) 7400 7401 (fontified nil) 7401 7402 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 7402 7407 (face font-lock-keyword-face fontified nil) 7407 7408 (fontified nil) 7408 7439 (face font-lock-function-name-face fontified nil) 7439 7440 (fontified nil) 7440 7441 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 7441 7445 (fontified nil) 7445 7446 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 7446 7449 (fontified nil) 7449 7544 (face font-lock-doc-face fontified nil) 7544 7553 (face (font-lock-constant-face font-lock-doc-face) fontified nil) 7553 7559 (face font-lock-doc-face fontified nil) 7559 7571 (face (font-lock-constant-face font-lock-doc-face) fontified nil) 7571 7614 (face font-lock-doc-face fontified nil) 7614 7652 (face (font-lock-constant-face font-lock-doc-face) fontified nil) 7652 7834 (face font-lock-doc-face fontified nil) 7834 7837 (fontified nil) 7837 7838 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 7838 7840 (face font-lock-keyword-face fontified nil) 7840 7841 (fontified nil) 7841 7842 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 7842 7846 (fontified nil) 7846 7847 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 7847 7893 (fontified nil) 7893 7894 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 7894 7895 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 7895 7907 (fontified nil) 7907 7963 (fontified nil) 7963 7964 (fontified nil) 7964 7965 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 7965 7970 (face font-lock-keyword-face fontified nil) 7970 7971 (fontified nil) 7971 7999 (face font-lock-function-name-face fontified nil) 7999 8000 (fontified nil) 8000 8001 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 8001 8010 (fontified nil) 8010 8011 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 8011 8014 (fontified nil) 8014 8107 (face font-lock-doc-face fontified nil) 8107 8110 (fontified nil) 8110 8111 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 8111 8122 (fontified nil) 8122 8123 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 8123 8126 (fontified nil) 8126 8127 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 8127 8176 (fontified nil) 8176 8177 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 8177 8180 (fontified nil) 8180 8181 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 8181 8185 (face font-lock-keyword-face fontified nil) 8185 8189 (fontified nil) 8189 8190 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 8190 8191 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 8191 8209 (fontified nil) 8209 8210 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 8210 8215 (fontified nil) 8215 8216 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 8216 8262 (fontified nil) 8262 8263 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 8263 8264 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 8264 8268 (fontified nil) 8268 8269 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 8269 8270 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 8270 8291 (fontified nil) 8291 8292 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 8292 8297 (fontified nil) 8297 8298 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 8298 8347 (fontified nil) 8347 8348 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 8348 8349 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 8349 8353 (fontified nil) 8353 8354 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 8354 8355 (fontified nil) 8355 8356 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 8356 8357 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 8357 8358 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 8358 8360 (fontified nil) 8360 8361 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 8361 8366 (face font-lock-keyword-face fontified nil) 8366 8367 (fontified nil) 8367 8416 (face font-lock-function-name-face fontified nil) 8416 8417 (fontified nil) 8417 8418 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 8418 8419 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 8419 8422 (fontified nil) 8422 8463 (face font-lock-doc-face fontified nil) 8463 8464 (fontified nil) 8464 8549 (fontified nil) 8549 8550 (fontified nil) 8550 8551 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 8551 8556 (face font-lock-keyword-face fontified nil) 8556 8557 (fontified nil) 8557 8598 (face font-lock-function-name-face fontified nil) 8598 8599 (fontified nil) 8599 8600 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 8600 8604 (fontified nil) 8604 8605 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 8605 8608 (fontified nil) 8608 8650 (face font-lock-doc-face fontified nil) 8650 8653 (fontified nil) 8653 8654 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 8654 8703 (fontified nil) 8703 8704 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 8704 8707 (fontified nil) 8707 8708 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 8708 8711 (face font-lock-keyword-face fontified nil) 8711 8712 (fontified nil) 8712 8713 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 8713 8714 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 8714 8726 (fontified nil) 8726 8727 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 8727 8733 (face font-lock-keyword-face fontified nil) 8733 8734 (fontified nil) 8734 8735 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 8735 8736 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 8736 8760 (fontified nil) 8760 8761 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 8761 8841 (fontified nil) 8841 8842 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified nil) 8842 8920 (fontified nil) 8920 8924 (face font-lock-builtin-face fontified nil) 8924 8925 (fontified nil) 8925 8926 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified nil) 8926 8937 (fontified nil) 8937 8952 (face font-lock-string-face fontified nil) 8952 8982 (fontified nil) 8982 8983 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified nil) 8983 9035 (fontified nil) 9035 9045 (face font-lock-builtin-face fontified nil) 9045 9046 (fontified nil) 9046 9080 (face font-lock-string-face fontified nil) 9080 9081 (fontified nil) 9081 10853 (fontified nil) 10853 10854 (fontified nil) 10854 10855 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 10855 10860 (face font-lock-keyword-face fontified nil) 10860 10861 (fontified nil) 10861 10905 (face font-lock-function-name-face fontified nil) 10905 10906 (fontified nil) 10906 10907 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 10907 10911 (fontified nil) 10911 10912 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 10912 10915 (fontified nil) 10915 10960 (face font-lock-doc-face fontified nil) 10960 10963 (fontified nil) 10963 10964 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 10964 11013 (fontified nil) 11013 11014 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 11014 11017 (fontified nil) 11017 11018 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 11018 11021 (face font-lock-keyword-face fontified nil) 11021 11022 (fontified nil) 11022 11023 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 11023 11024 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 11024 11036 (fontified nil) 11036 11037 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified nil) 11037 11043 (face font-lock-keyword-face fontified nil) 11043 11044 (fontified nil) 11044 11045 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 11045 11046 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 11046 11070 (fontified nil) 11070 11071 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified nil) 11071 11151 (fontified nil) 11151 11152 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified nil) 11152 11230 (fontified nil) 11230 11234 (face font-lock-builtin-face fontified nil) 11234 11235 (fontified nil) 11235 11236 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified nil) 11236 11247 (fontified nil) 11247 11279 (face font-lock-string-face fontified nil) 11279 11309 (fontified nil) 11309 11310 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified nil) 11310 11362 (fontified nil) 11362 11372 (face font-lock-builtin-face fontified nil) 11372 11373 (fontified nil) 11373 11400 (face font-lock-string-face fontified nil) 11400 11401 (fontified nil) 11401 12397 (fontified nil) 12397 12398 (fontified nil) 12398 12399 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 12399 12404 (face font-lock-keyword-face fontified nil) 12404 12405 (fontified nil) 12405 12442 (face font-lock-function-name-face fontified nil) 12442 12443 (fontified nil) 12443 12444 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 12444 12445 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 12445 12448 (fontified nil) 12448 12449 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 12449 12499 (fontified nil) 12499 12500 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 12500 12503 (fontified nil) 12503 12504 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 12504 12543 (fontified nil) 12543 12544 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 12544 12547 (fontified nil) 12547 12548 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 12548 12609 (fontified nil) 12609 12610 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 12610 12613 (fontified nil) 12613 12614 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 12614 12646 (fontified nil) 12646 12647 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 12647 12685 (fontified nil) 12685 12686 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 12686 12715 (fontified nil) 12715 12716 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 12716 12717 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 12717 12719 (fontified nil) 12719 12720 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 12720 12725 (face font-lock-keyword-face fontified nil) 12725 12726 (fontified nil) 12726 12756 (face font-lock-function-name-face fontified nil) 12756 12757 (fontified nil) 12757 12758 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 12758 12764 (fontified nil) 12764 12765 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 12765 12768 (fontified nil) 12768 12812 (face font-lock-doc-face fontified nil) 12812 12815 (fontified nil) 12815 12816 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 12816 12835 (face font-lock-keyword-face fontified nil) 12835 12836 (fontified nil) 12836 12837 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 12837 12855 (fontified nil) 12855 12868 (face font-lock-string-face fontified nil) 12868 12869 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 12869 12874 (fontified nil) 12874 12875 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 12875 12903 (fontified nil) 12903 12904 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 12904 12905 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 12905 12906 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 12906 12907 (fontified nil) 12907 12908 (fontified nil) 12908 12909 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 12909 12914 (face font-lock-keyword-face fontified nil) 12914 12915 (fontified nil) 12915 12939 (face font-lock-function-name-face fontified nil) 12939 12940 (fontified nil) 12940 12941 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 12941 12945 (fontified nil) 12945 12950 (face font-lock-type-face fontified nil) 12950 12955 (fontified nil) 12955 12956 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 12956 12959 (fontified nil) 12959 13047 (face font-lock-doc-face fontified nil) 13047 13075 (face (font-lock-constant-face font-lock-doc-face) fontified nil) 13075 13089 (face font-lock-doc-face fontified nil) 13089 13092 (fontified nil) 13092 13093 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 13093 13097 (face font-lock-keyword-face fontified nil) 13097 13131 (fontified nil) 13131 13132 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 13132 13140 (fontified nil) 13140 13156 (face font-lock-string-face fontified nil) 13156 13157 (fontified nil) 13157 13158 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 13158 13180 (fontified nil) 13180 13181 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified nil) 13181 13182 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 13182 13183 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 13183 13184 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 13184 13186 (fontified nil) 13186 13187 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 13187 13192 (face font-lock-keyword-face fontified nil) 13192 13193 (fontified nil) 13193 13217 (face font-lock-function-name-face fontified nil) 13217 13218 (fontified nil) 13218 13219 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 13219 13223 (fontified nil) 13223 13228 (face font-lock-type-face fontified nil) 13228 13233 (fontified nil) 13233 13234 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 13234 13237 (fontified nil) 13237 13286 (face font-lock-doc-face fontified nil) 13286 13296 (face (font-lock-constant-face font-lock-doc-face) fontified nil) 13296 13333 (face font-lock-doc-face fontified nil) 13333 13336 (fontified nil) 13336 13337 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 13337 13345 (fontified nil) 13345 13370 (face font-lock-string-face fontified nil) 13370 13371 (fontified nil) 13371 13372 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 13372 13394 (fontified nil) 13394 13395 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified nil) 13395 13396 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified nil) 13396 13397 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified nil) 13397 13399 (fontified nil) 13399 13400 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 13400 13405 (face font-lock-keyword-face fontified t) 13405 13406 (fontified t) 13406 13440 (face font-lock-function-name-face fontified t) 13440 13441 (fontified t) 13441 13442 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 13442 13443 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 13443 13444 (fontified t) 13444 13446 (fontified t) 13446 13493 (face font-lock-doc-face fontified t) 13493 13496 (fontified t) 13496 13497 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 13497 13521 (fontified t) 13521 13530 (face font-lock-string-face fontified t) 13530 13531 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 13531 13532 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 13532 13533 (fontified t) 13533 13534 (fontified t) 13534 13535 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 13535 13540 (face font-lock-keyword-face fontified t) 13540 13541 (fontified t) 13541 13564 (face font-lock-function-name-face fontified t) 13564 13565 (fontified t) 13565 13566 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 13566 13570 (fontified t) 13570 13579 (face font-lock-type-face fontified t) 13579 13590 (fontified t) 13590 13591 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 13591 13594 (fontified t) 13594 13697 (face font-lock-doc-face fontified t) 13697 13700 (fontified t) 13700 13701 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 13701 13720 (face font-lock-keyword-face fontified t) 13720 13721 (fontified t) 13721 13722 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 13722 13740 (fontified t) 13740 13753 (face font-lock-string-face fontified t) 13753 13754 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 13754 13759 (fontified t) 13759 13760 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 13760 13770 (fontified t) 13770 13771 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 13771 13780 (fontified t) 13780 13781 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 13781 13782 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 13782 13787 (fontified t) 13787 13788 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 13788 13791 (face font-lock-keyword-face fontified t) 13791 13792 (fontified t) 13792 13793 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 13793 13794 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 13794 13814 (fontified t) 13814 13815 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 13815 13816 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 13816 13823 (fontified t) 13823 13824 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 13824 13834 (fontified t) 13834 13835 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 13835 13842 (fontified t) 13842 13843 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 13843 13845 (face font-lock-keyword-face fontified t) 13845 13857 (fontified t) 13857 13858 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 13858 13866 (fontified t) 13866 13882 (face font-lock-string-face fontified t) 13882 13886 (fontified t) 13886 13887 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 13887 13888 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 13888 13889 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 13889 13894 (fontified t) 13894 13895 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 13895 13926 (fontified t) 13926 13928 (face font-lock-string-face fontified t) 13928 13929 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 13929 13930 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 13930 13931 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 13931 13932 (fontified t) 13932 13933 (fontified t) 13933 13934 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 13934 13939 (face font-lock-keyword-face fontified t) 13939 13940 (fontified t) 13940 13974 (face font-lock-function-name-face fontified t) 13974 13975 (fontified t) 13975 13976 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 13976 13980 (fontified t) 13980 13989 (face font-lock-type-face fontified t) 13989 14000 (fontified t) 14000 14001 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 14001 14004 (fontified t) 14004 14078 (face font-lock-doc-face fontified t) 14078 14131 (face font-lock-doc-face fontified t) 14131 14134 (fontified t) 14134 14135 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 14135 14154 (face font-lock-keyword-face fontified t) 14154 14155 (fontified t) 14155 14156 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 14156 14174 (fontified t) 14174 14187 (face font-lock-string-face fontified t) 14187 14188 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 14188 14193 (fontified t) 14193 14194 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 14194 14204 (fontified t) 14204 14205 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 14205 14214 (fontified t) 14214 14215 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 14215 14216 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 14216 14221 (fontified t) 14221 14222 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 14222 14225 (face font-lock-keyword-face fontified t) 14225 14226 (fontified t) 14226 14227 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 14227 14228 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 14228 14248 (fontified t) 14248 14249 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 14249 14250 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 14250 14257 (fontified t) 14257 14258 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 14258 14272 (fontified t) 14272 14273 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 14273 14296 (fontified t) 14296 14297 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 14297 14298 (fontified t) 14298 14299 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 14299 14308 (fontified t) 14308 14309 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 14309 14310 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 14310 14317 (fontified t) 14317 14318 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 14318 14328 (fontified t) 14328 14329 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 14329 14336 (fontified t) 14336 14337 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 14337 14339 (face font-lock-keyword-face fontified t) 14339 14351 (fontified t) 14351 14352 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 14352 14360 (fontified t) 14360 14376 (face font-lock-string-face fontified t) 14376 14380 (fontified t) 14380 14381 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 14381 14382 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 14382 14383 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 14383 14388 (fontified t) 14388 14389 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 14389 14420 (fontified t) 14420 14422 (face font-lock-string-face fontified t) 14422 14423 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 14423 14424 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 14424 14425 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 14425 14426 (fontified t) 14426 14427 (fontified t) 14427 14428 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 14428 14433 (face font-lock-keyword-face fontified t) 14433 14434 (fontified t) 14434 14469 (face font-lock-function-name-face fontified t) 14469 14470 (fontified t) 14470 14474 (fontified t) 14474 14475 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 14475 14479 (fontified t) 14479 14488 (face font-lock-type-face fontified t) 14488 14505 (fontified t) 14505 14506 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 14506 14509 (fontified t) 14509 14584 (face font-lock-doc-face fontified t) 14584 14613 (face (font-lock-constant-face font-lock-doc-face) fontified t) 14613 14658 (face font-lock-doc-face fontified t) 14658 14661 (fontified t) 14661 14662 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 14662 14681 (face font-lock-keyword-face fontified t) 14681 14682 (fontified t) 14682 14683 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 14683 14701 (fontified t) 14701 14714 (face font-lock-string-face fontified t) 14714 14715 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 14715 14720 (fontified t) 14720 14721 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 14721 14724 (face font-lock-keyword-face fontified t) 14724 14725 (fontified t) 14725 14726 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 14726 14727 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 14727 14747 (fontified t) 14747 14748 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 14748 14749 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 14749 14756 (fontified t) 14756 14757 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 14757 14764 (fontified t) 14764 14765 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 14765 14892 (fontified t) 14892 14893 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 14893 14894 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 14894 14895 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 14895 14896 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 14896 14897 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 14897 14898 (fontified t) 14898 14899 (fontified t) 14899 14900 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 14900 14905 (face font-lock-keyword-face fontified t) 14905 14906 (fontified t) 14906 14951 (face font-lock-function-name-face fontified t) 14951 14952 (fontified t) 14952 14956 (fontified t) 14956 14957 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 14957 14966 (fontified t) 14966 14975 (face font-lock-type-face fontified t) 14975 14992 (fontified t) 14992 14993 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 14993 14996 (fontified t) 14996 15135 (face font-lock-doc-face fontified t) 15135 15164 (face (font-lock-constant-face font-lock-doc-face) fontified t) 15164 15209 (face font-lock-doc-face fontified t) 15209 15212 (fontified t) 15212 15213 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 15213 15217 (face font-lock-keyword-face fontified t) 15217 15218 (fontified t) 15218 15219 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 15219 15241 (fontified t) 15241 15242 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 15242 15247 (fontified t) 15247 15248 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 15248 15267 (face font-lock-keyword-face fontified t) 15267 15268 (fontified t) 15268 15269 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 15269 15287 (fontified t) 15287 15300 (face font-lock-string-face fontified t) 15300 15301 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 15301 15308 (fontified t) 15308 15309 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 15309 15312 (face font-lock-keyword-face fontified t) 15312 15313 (fontified t) 15313 15314 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 15314 15315 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 15315 15335 (fontified t) 15335 15336 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 15336 15337 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 15337 15346 (fontified t) 15346 15347 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 15347 15354 (fontified t) 15354 15355 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 15355 15426 (fontified t) 15426 15496 (fontified nil) 15496 15497 (fontified t) 15497 15498 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 15498 15503 (face font-lock-keyword-face fontified t) 15503 15504 (fontified t) 15504 15533 (face font-lock-function-name-face fontified t) 15533 15534 (fontified t) 15534 15535 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 15535 15543 (fontified t) 15543 15552 (face font-lock-type-face fontified t) 15552 15575 (fontified t) 15575 15576 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 15576 15579 (fontified t) 15579 15707 (face font-lock-doc-face fontified t) 15707 15718 (face (font-lock-constant-face font-lock-doc-face) fontified t) 15718 15997 (face font-lock-doc-face fontified t) 15997 15998 (fontified t) 15998 17221 (fontified nil) 17221 17222 (fontified t) 17222 17223 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 17223 17228 (face font-lock-keyword-face fontified t) 17228 17229 (fontified t) 17229 17258 (face font-lock-function-name-face fontified t) 17258 17259 (fontified t) 17259 17260 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 17260 17273 (fontified t) 17273 17274 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 17274 17277 (fontified t) 17277 17510 (face font-lock-doc-face fontified t) 17510 17513 (fontified t) 17513 17514 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 17514 17518 (face font-lock-keyword-face fontified t) 17518 17519 (fontified t) 17519 17520 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 17520 17521 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17521 17525 (fontified t) 17525 17526 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 17526 17537 (fontified t) 17537 17538 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 17538 17539 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17539 17549 (fontified t) 17549 17550 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17550 17555 (fontified t) 17555 17556 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 17556 17573 (fontified t) 17573 17574 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 17574 17575 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17575 17576 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 17576 17581 (fontified t) 17581 17582 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 17582 17586 (face font-lock-keyword-face fontified t) 17586 17587 (fontified t) 17587 17588 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17588 17597 (fontified t) 17597 17598 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17598 17605 (fontified t) 17605 17606 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17606 17613 (fontified t) 17613 17616 (face font-lock-string-face fontified t) 17616 17617 (fontified t) 17617 17618 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 17618 17642 (fontified t) 17642 17643 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 17643 17663 (fontified t) 17663 17664 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 17664 17684 (fontified t) 17684 17685 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 17685 17700 (fontified t) 17700 17701 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 17701 17725 (fontified t) 17725 17726 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 17726 17727 (fontified t) 17727 17732 (face font-lock-string-face fontified t) 17732 17733 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17733 17734 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 17734 17735 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 17735 17736 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 17736 17737 (fontified t) 17737 17738 (fontified t) 17738 17739 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 17739 17744 (face font-lock-keyword-face fontified t) 17744 17745 (fontified t) 17745 17779 (face font-lock-function-name-face fontified t) 17779 17780 (fontified t) 17780 17781 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 17781 17782 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 17782 17785 (fontified t) 17785 17829 (face font-lock-doc-face fontified t) 17829 17868 (face (font-lock-constant-face font-lock-doc-face) fontified t) 17868 17871 (face font-lock-doc-face fontified t) 17871 17874 (fontified t) 17874 17875 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 17875 17879 (face font-lock-keyword-face fontified t) 17879 17918 (fontified t) 17918 17919 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 17919 17950 (fontified t) 17950 17951 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17951 17979 (fontified t) 17979 17980 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17980 17981 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 17981 17986 (fontified t) 17986 17987 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 17987 17991 (face font-lock-keyword-face fontified t) 17991 17992 (fontified t) 17992 17993 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 17993 18060 (fontified t) 18060 18061 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 18061 18068 (fontified t) 18068 18069 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 18069 18101 (fontified t) 18101 18102 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 18102 18109 (fontified t) 18109 18110 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 18110 18152 (fontified t) 18152 18153 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 18153 18205 (fontified t) 18205 18206 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 18206 18252 (fontified t) 18252 18407 (fontified nil) 18407 18408 (fontified t) 18408 18409 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 18409 18417 (face font-lock-keyword-face fontified t) 18417 18418 (fontified t) 18418 18445 (face font-lock-function-name-face fontified t) 18445 18446 (fontified t) 18446 18447 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18447 18474 (fontified t) 18474 18483 (face font-lock-type-face fontified t) 18483 18496 (fontified t) 18496 18497 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18497 18501 (fontified t) 18501 18502 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 18502 18547 (fontified t) 18547 18548 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 18548 18554 (face font-lock-keyword-face fontified t) 18554 18555 (fontified t) 18555 18556 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 18556 18557 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 18557 18609 (fontified t) 18609 18610 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 18610 18621 (fontified t) 18621 18622 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 18622 18674 (fontified t) 18674 18675 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 18675 18681 (face font-lock-keyword-face fontified t) 18681 18682 (fontified t) 18682 18683 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 18683 18712 (fontified t) 18712 18713 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 18713 18722 (fontified t) 18722 18723 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 18723 18725 (fontified t) 18725 18726 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 18726 18780 (fontified t) 18780 18781 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 18781 18811 (fontified t) 18811 18812 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 18812 18821 (fontified t) 18821 18822 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 18822 18824 (fontified t) 18824 18825 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 18825 18826 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 18826 18880 (fontified t) 18880 18881 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 18881 18887 (face font-lock-keyword-face fontified t) 18887 18957 (fontified t) 18957 18958 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 18958 18959 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 18959 18973 (fontified t) 18973 18974 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 18974 18975 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 18975 18976 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 18976 18977 (fontified t) 18977 19053 (fontified nil) 19053 19054 (fontified t) 19054 19055 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 19055 19060 (face font-lock-keyword-face fontified t) 19060 19061 (fontified t) 19061 19093 (face font-lock-function-name-face fontified t) 19093 19094 (fontified t) 19094 19095 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 19095 19096 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 19096 19099 (fontified t) 19099 19100 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 19100 19110 (fontified t) 19110 19111 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 19111 19120 (fontified t) 19120 19121 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 19121 19122 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 19122 19125 (fontified t) 19125 19126 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 19126 19133 (fontified t) 19133 19140 (face font-lock-string-face fontified t) 19140 19141 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 19141 19144 (fontified t) 19144 19145 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 19145 19173 (fontified t) 19173 19176 (face font-lock-string-face fontified t) 19176 19177 (fontified t) 19177 19182 (face font-lock-string-face fontified t) 19182 19184 (fontified t) 19184 19185 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 19185 19188 (fontified t) 19188 19189 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 19189 19230 (fontified t) 19230 19234 (face font-lock-builtin-face fontified t) 19234 19235 (fontified t) 19235 19236 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 19236 19247 (fontified t) 19247 19250 (face font-lock-string-face fontified t) 19250 19276 (fontified t) 19276 19277 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 19277 19295 (fontified t) 19295 19305 (face font-lock-builtin-face fontified t) 19305 19306 (fontified t) 19306 19327 (face font-lock-string-face fontified t) 19327 19345 (fontified t) 19345 19352 (face font-lock-builtin-face fontified t) 19352 19353 (fontified t) 19353 19354 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 19354 19360 (face font-lock-keyword-face fontified t) 19360 19361 (fontified t) 19361 19362 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 19362 19367 (face font-lock-type-face fontified t) 19367 19374 (fontified t) 19374 19375 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 19375 19403 (fontified t) 19403 19404 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 19404 19433 (fontified t) 19433 19434 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 19434 19466 (fontified t) 19466 19481 (face font-lock-string-face fontified t) 19481 19482 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 19482 19540 (fontified t) 19540 19543 (face font-lock-comment-delimiter-face fontified t) 19543 19600 (face font-lock-comment-face fontified t) 19600 22697 (fontified nil) 22697 22698 (fontified t) 22698 22699 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 22699 22704 (face font-lock-keyword-face fontified t) 22704 22705 (fontified t) 22705 22739 (face font-lock-function-name-face fontified t) 22739 22740 (fontified t) 22740 22741 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 22741 22763 (fontified t) 22763 22764 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 22764 22767 (fontified t) 22767 22768 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 22768 22772 (face font-lock-keyword-face fontified t) 22772 22773 (fontified t) 22773 22774 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 22774 22782 (fontified t) 22782 22783 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 22783 22788 (fontified t) 22788 22789 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 22789 22813 (fontified t) 22813 22814 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 22814 22819 (fontified t) 22819 22820 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 22820 22825 (fontified t) 22825 22826 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 22826 22832 (face font-lock-keyword-face fontified t) 22832 22833 (fontified t) 22833 22834 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 22834 22836 (fontified t) 22836 22837 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 22837 22850 (fontified t) 22850 22851 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 22851 22858 (fontified t) 22858 22866 (face font-lock-string-face fontified t) 22866 22867 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 22867 22880 (fontified t) 22880 22881 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 22881 22935 (fontified t) 22935 22942 (face font-lock-builtin-face fontified t) 22942 22944 (fontified t) 22944 22945 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 22945 22951 (face font-lock-keyword-face fontified t) 22951 22952 (fontified t) 22952 22953 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 22953 22958 (face font-lock-type-face fontified t) 22958 22965 (fontified t) 22965 22966 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 22966 22967 (fontified t) 22967 22968 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 22968 22990 (fontified t) 22990 22991 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 22991 22992 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 22992 23020 (fontified t) 23020 23031 (face font-lock-builtin-face fontified t) 23031 23070 (fontified t) 23070 23082 (face font-lock-builtin-face fontified t) 23082 23083 (fontified t) 23083 23089 (face font-lock-string-face fontified t) 23089 23117 (fontified t) 23117 23131 (face font-lock-builtin-face fontified t) 23131 23132 (fontified t) 23132 23134 (face font-lock-string-face fontified t) 23134 23162 (fontified t) 23162 23176 (face font-lock-builtin-face fontified t) 23176 23177 (fontified t) 23177 23179 (face font-lock-string-face fontified t) 23179 23207 (fontified t) 23207 23214 (face font-lock-builtin-face fontified t) 23214 23215 (fontified t) 23215 23223 (face font-lock-string-face fontified t) 23223 23224 (fontified t) 23224 23297 (fontified nil) 23297 23298 (fontified t) 23298 23299 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 23299 23304 (face font-lock-keyword-face fontified t) 23304 23305 (fontified t) 23305 23343 (face font-lock-function-name-face fontified t) 23343 23344 (fontified t) 23344 23345 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 23345 23367 (fontified t) 23367 23368 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 23368 23371 (fontified t) 23371 23372 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 23372 23376 (face font-lock-keyword-face fontified t) 23376 23377 (fontified t) 23377 23378 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 23378 23386 (fontified t) 23386 23387 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 23387 23392 (fontified t) 23392 23393 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 23393 23417 (fontified t) 23417 23418 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 23418 23423 (fontified t) 23423 23424 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 23424 23429 (fontified t) 23429 23430 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 23430 23436 (face font-lock-keyword-face fontified t) 23436 23437 (fontified t) 23437 23438 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 23438 23440 (fontified t) 23440 23441 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 23441 23454 (fontified t) 23454 23455 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 23455 23462 (fontified t) 23462 23470 (face font-lock-string-face fontified t) 23470 23471 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 23471 23484 (fontified t) 23484 23485 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 23485 23539 (fontified t) 23539 23546 (face font-lock-builtin-face fontified t) 23546 23548 (fontified t) 23548 23549 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 23549 23555 (face font-lock-keyword-face fontified t) 23555 23556 (fontified t) 23556 23557 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 23557 23562 (face font-lock-type-face fontified t) 23562 23569 (fontified t) 23569 23570 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 23570 23571 (fontified t) 23571 23572 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 23572 23589 (fontified t) 23589 23590 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 23590 23591 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 23591 23619 (fontified t) 23619 23630 (face font-lock-builtin-face fontified t) 23630 23669 (fontified t) 23669 23681 (face font-lock-builtin-face fontified t) 23681 23682 (fontified t) 23682 23688 (face font-lock-string-face fontified t) 23688 23716 (fontified t) 23716 23730 (face font-lock-builtin-face fontified t) 23730 23731 (fontified t) 23731 23733 (face font-lock-string-face fontified t) 23733 23761 (fontified t) 23761 23775 (face font-lock-builtin-face fontified t) 23775 23776 (fontified t) 23776 23778 (face font-lock-string-face fontified t) 23778 23806 (fontified t) 23806 23813 (face font-lock-builtin-face fontified t) 23813 23814 (fontified t) 23814 23822 (face font-lock-string-face fontified t) 23822 23823 (fontified t) 23823 23991 (fontified nil) 23991 23992 (fontified t) 23992 23993 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 23993 23998 (face font-lock-keyword-face fontified t) 23998 23999 (fontified t) 23999 24039 (face font-lock-function-name-face fontified t) 24039 24040 (fontified t) 24040 24041 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 24041 24042 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 24042 24045 (fontified t) 24045 24046 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 24046 24057 (fontified t) 24057 24058 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 24058 24061 (fontified t) 24061 24062 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 24062 24081 (face font-lock-keyword-face fontified t) 24081 24082 (fontified t) 24082 24083 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 24083 24101 (fontified t) 24101 24114 (face font-lock-string-face fontified t) 24114 24115 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 24115 24120 (fontified t) 24120 24121 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 24121 24124 (face font-lock-keyword-face fontified t) 24124 24125 (fontified t) 24125 24126 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 24126 24127 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 24127 24147 (fontified t) 24147 24148 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 24148 24159 (fontified t) 24159 24160 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 24160 24175 (fontified t) 24175 24181 (face font-lock-string-face fontified t) 24181 24182 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 24182 24183 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 24183 24190 (fontified t) 24190 24191 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 24191 24201 (fontified t) 24201 24202 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 24202 24211 (fontified t) 24211 24212 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 24212 24213 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 24213 24220 (fontified t) 24220 24221 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 24221 24242 (fontified t) 24242 24243 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 24243 24250 (fontified t) 24250 24251 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 24251 24285 (fontified t) 24285 24286 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 24286 24293 (fontified t) 24293 24294 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 24294 24299 (fontified t) 24299 24300 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 24300 24306 (face font-lock-keyword-face fontified t) 24306 24307 (fontified t) 24307 24308 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 24308 24310 (fontified t) 24310 24311 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 24311 24326 (fontified t) 24326 24327 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 24327 24331 (face font-lock-keyword-face fontified t) 24331 24347 (fontified t) 24347 24348 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 24348 24349 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 24349 24363 (fontified t) 24363 24364 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 24364 24381 (fontified t) 24381 24382 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 24382 24394 (fontified t) 24394 24395 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 24395 24412 (fontified t) 24412 24413 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 24413 24417 (face font-lock-keyword-face fontified t) 24417 24418 (fontified t) 24418 24419 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 24419 24454 (fontified t) 24454 24469 (face font-lock-string-face fontified t) 24469 24470 (fontified t) 24470 24471 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 24471 24489 (fontified t) 24489 24490 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 24490 24491 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 24491 24492 (fontified t) 24492 24510 (fontified t) 24510 24511 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 24511 24539 (fontified t) 24539 24542 (face font-lock-string-face fontified t) 24542 24543 (fontified t) 24543 24558 (face font-lock-string-face fontified t) 24558 24559 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 24559 24578 (fontified t) 24578 24579 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 24579 24600 (fontified t) 24600 24601 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 24601 24602 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 24602 24603 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 24603 24619 (fontified t) 24619 24620 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 24620 24621 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 24621 24637 (fontified t) 24637 24638 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 24638 24655 (fontified t) 24655 24656 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 24656 24665 (fontified t) 24665 24666 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 24666 24683 (fontified t) 24683 24684 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 24684 24688 (face font-lock-keyword-face fontified t) 24688 24689 (fontified t) 24689 24690 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 24690 24729 (fontified t) 24729 24741 (face font-lock-string-face fontified t) 24741 24742 (fontified t) 24742 24743 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 24743 24761 (fontified t) 24761 24762 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 24762 24763 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 24763 24782 (fontified t) 24782 24783 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 24783 24811 (fontified t) 24811 24814 (face font-lock-string-face fontified t) 24814 24815 (fontified t) 24815 24827 (face font-lock-string-face fontified t) 24827 24828 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 24828 24847 (fontified t) 24847 24848 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 24848 24869 (fontified t) 24869 24870 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 24870 24871 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 24871 24872 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 24872 24888 (fontified t) 24888 24889 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 24889 24890 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 24890 24905 (fontified t) 24905 24906 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 24906 24923 (fontified t) 24923 24924 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 24924 24939 (fontified t) 24939 24940 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 24940 24957 (fontified t) 24957 24958 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 24958 24962 (face font-lock-keyword-face fontified t) 24962 24963 (fontified t) 24963 24964 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 24964 24999 (fontified t) 24999 25010 (face font-lock-string-face fontified t) 25010 25011 (fontified t) 25011 25012 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 25012 25046 (fontified t) 25046 25047 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 25047 25048 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 25048 25049 (fontified t) 25049 25067 (fontified t) 25067 25068 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 25068 25096 (fontified t) 25096 25099 (face font-lock-string-face fontified t) 25099 25100 (fontified t) 25100 25111 (face font-lock-string-face fontified t) 25111 25112 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 25112 25131 (fontified t) 25131 25132 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 25132 25153 (fontified t) 25153 25154 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-9-face" fontified t) 25154 25155 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-8-face" fontified t) 25155 25156 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-7-face" fontified t) 25156 25157 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-6-face" fontified t) 25157 25158 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-5-face" fontified t) 25158 25185 (fontified t) 25185 25186 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 25186 25187 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 25187 25188 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 25188 25189 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 25189 25190 (fontified t) 25190 25191 (fontified t) 25191 25192 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 25192 25197 (face font-lock-keyword-face fontified t) 25197 25198 (fontified t) 25198 25229 (face font-lock-function-name-face fontified t) 25229 25230 (fontified t) 25230 25231 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 25231 25232 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 25232 25235 (fontified t) 25235 25286 (face font-lock-doc-face fontified t) 25286 25289 (fontified t) 25289 25290 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 25290 25301 (fontified t) 25301 25302 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 25302 25305 (fontified t) 25305 25306 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 25306 25325 (face font-lock-keyword-face fontified t) 25325 25352 (fontified t) 25352 25353 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 25353 25363 (fontified t) 25363 25364 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 25364 25373 (fontified t) 25373 25374 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 25374 25375 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 25375 25380 (fontified t) 25380 25381 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 25381 25399 (fontified t) 25399 25409 (face font-lock-string-face fontified t) 25409 25410 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 25410 25415 (fontified t) 25415 25416 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 25416 25433 (fontified t) 25433 25434 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 25434 25439 (fontified t) 25439 25440 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 25440 25456 (fontified t) 25456 25457 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-3-face" fontified t) 25457 25458 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 25458 25459 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 25459 25461 (fontified t) 25461 25462 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 25462 25469 (face font-lock-keyword-face fontified t) 25469 25471 (fontified t) 25471 25492 (face font-lock-constant-face fontified t) 25492 25493 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 25493 25494 (fontified t)) "elpa/
" #("setq" 0 4 (fontified t)) #("storage area for persistent files\"" 0 34 (fontified t face font-lock-doc-face)) #("lch-emacs banners directory.\"" 0 4 (face font-lock-doc-face fontified t) 4 10 (fontified t face font-lock-doc-face) 10 18 (face font-lock-doc-face fontified t) 18 29 (face font-lock-doc-face fontified t)) #("expand-file-name " 0 7 (fontified t) 7 12 (fontified t) 12 17 (fontified t)) #("spacemacs-core-directory " 0 10 (fontified t) 10 15 (fontified t) 15 25 (fontified t)) #("emacs-lib-dir" 0 13 (fontified t face font-lock-variable-name-face)) #("directory" 0 9 (fontified t face font-lock-variable-name-face)) #("spac" 0 4 (fontified t face font-lock-variable-name-face)) #("(defconst spacemacs-banner-directory
  (expand-file-name (concat spacemacs-core-directory \"banners/\"))
  \"Spacemacs banners directory.\")
(" 0 1 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 1 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 36 (fontified t face font-lock-variable-name-face) 36 39 (fontified t) 39 40 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 40 57 (fontified t) 57 58 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 58 90 (fontified t) 90 100 (fontified t face font-lock-string-face) 100 101 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 101 102 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 102 105 (fontified t) 105 135 (fontified t face font-lock-doc-face) 135 136 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 136 137 (fontified t) 137 138 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t)) #("conf" 0 4 (face font-lock-constant-face fontified t)) #("conf" 0 4 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) #("Author (C) " 0 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 11 (fontified t face font-lock-comment-face)) #("Copyright" 0 9 (face font-lock-comment-face fontified t)) #("
" 0 1 (rear-nonsticky t fontified t)) #(";; Inspired by spacemacs, deepin-emacs, and a lot of .emacs.d online.

" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 3 (face font-lock-comment-delimiter-face fontified t) 3 15 (face font-lock-comment-face fontified t) 15 69 (face font-lock-comment-face fontified t) 69 70 (fontified t) 70 71 (fontified t)) #("
" 0 1 (fontified t)) #("(evil-leader/set-key \"!\" 'shell-command)" 0 1 (font-lock-face "rainbow-delimiters-depth-1-face" fontified t rear-nonsticky t) 1 21 (fontified t) 21 24 (face font-lock-string-face fontified t) 24 39 (fontified t) 39 40 (font-lock-face "rainbow-delimiters-depth-1-face" fontified t rear-nonsticky t)) #("(evil-leader/set-key \"!\" 'shell-command)" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 21 (fontified t) 21 24 (face font-lock-string-face fontified t) 24 39 (fontified t) 39 40 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t)) #(" ============================================================================================" 0 93 (fontified t)) #(";; Also auto refresh dired, but be quiet about it
(setq global-auto-revert-non-file-buffers t
      auto-revert-verbose nil)" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 49 (face font-lock-comment-face fontified t) 49 50 (fontified t) 50 51 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 51 93 (fontified t) 93 94 (fontified t) 94 123 (fontified t) 123 124 (fontified t font-lock-face "rainbow-delimiters-unmatched-face" rear-nonsticky t)) #("layers/+distribution/spacemacs-base/" 0 8 (fontified t) 8 21 (fontified t) 21 31 (fontified t) 31 36 (fontified t)) "(defun spacemacs/alternate-buffer ()
  \"Switch back and forth between current and last buffer in the
current window.\"
  (interactive)
  (if (evil-alternate-buffer)
      (switch-to-buffer (car (evil-alternate-buffer)))
    (switch-to-buffer (other-buffer (current-buffer) t))))
" "locate libc.a" #("\"https://github.com/search?utf8=%E2%9C%93&q=language%3A%22Python%22+stars%3A%3E500&type=Repositories&ref=searchresults\")" 0 1 (fontified t face font-lock-doc-face) 1 117 (fontified t face font-lock-doc-face) 117 118 (rear-nonsticky t fontified t face font-lock-doc-face) 118 119 (fontified t rear-nonsticky t face font-lock-doc-face) 119 120 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t)) #("(python . )" 0 1 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 1 10 (fontified t) 10 11 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t)) #("python-" 0 7 (fontified t face font-lock-variable-name-face)) #("\"https://github.com/search?utf8=%E2%9C%93&q=language%3A%22Python%22+stars%3A%3E500&type=Repositories&ref=searchresults\"" 0 1 (fontified t face font-lock-string-face) 1 117 (fontified t face font-lock-string-face) 117 118 (rear-nonsticky t fontified t face font-lock-string-face) 118 119 (fontified t face font-lock-string-face)) #("  Nonlinear System Convergence Tolerance = 1.0e-4
  Nonlinear System Max Iterations = 15
  Nonlinear System Newton After Iterations = 10
  Nonlinear System Newton After Tolerance = 1.0e-3
  Nonlinear System Relaxation Factor = 1
  Linear System Solver = Iterative
  Linear System Iterative Method = BiCGStab
  Linear System Max Iterations = 500
  Linear System Convergence Tolerance = 1.0e-4
  Linear System Preconditioning = ILU2
  Linear System Residual Output = 1
(setq Linum-format \"%7i     \")
" 0 49 (fontified t) 49 50 (fontified t) 50 88 (fontified t) 88 89 (fontified t) 89 136 (fontified t) 136 137 (fontified t) 137 187 (fontified t) 187 188 (fontified t) 188 228 (fontified t) 228 229 (fontified t) 229 263 (fontified t) 263 264 (fontified t) 264 307 (fontified t) 307 308 (fontified t) 308 344 (fontified t) 344 345 (fontified t) 345 391 (fontified t) 391 392 (fontified t) 392 430 (fontified t) 430 431 (fontified t) 431 466 (fontified t) 466 467 (fontified t) 467 468 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 468 486 (fontified t) 486 496 (fontified t face font-lock-string-face) 496 497 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 497 498 (fontified t)) #("firefox" 0 7 (symbol "f" document ac-symbol-documentation fontified t)) #("https://github.com/search?utf8=%E2%9C%93&q=language%3A%22Python%22+stars%3A%3E500&type=Repositories&ref=searchresults)" 0 116 (fontified t) 116 117 (rear-nonsticky t fontified t) 117 118 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t)) #("open" 0 4 (fontified t)) "https://github.com/search?utf8=%E2%9C%93&q=language%3A%22Python%22+stars%3A%3E500&type=Repositories&ref=searchresults" #("
﻿

" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) #("字数7732 阅读46184 评论948 喜欢2432

" 0 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t)) "其实也可以，先结婚再恋爱
字数7732 阅读46184 评论948 喜欢2432

顾青  苏瑾

﻿

1

人家说，一个男人智商没有200就不要想着出轨了。可顾青智商可能连20都没到，居然也出轨了。

我当时准备跟顾青结婚的时候，身边朋友劝过我，说还是要跟很爱自己的人结婚，不然太容易出轨了。

我特别不能理解，我说这个理论怎么可能成立？很爱我就不会出轨了吗？那些曾经爱得死去活来的不是照样离婚？再说了，他没那个智商出轨。

朋友听完撇了撇嘴，又叹了口气，最后没再说什么。

其实我心里想的是，大家都看得出来他不爱我吗？

我跟他是相亲认识的。我从大学毕业开始就在相亲，遇过各种极品，都是奇葩类的。多数为歪瓜裂枣，比我大上很多岁。好男人要么已经娶了，要么喜欢男人去了。反正我遇不到。

顾青是里面长得最周正的，所以他后来成了我丈夫。

听他名字觉得很年轻，看到他长相的时候甚至觉得他比我还像刚毕业的，可其实他大我四岁，我们相亲那阵他已经28了。

相亲的地点是个咖啡馆，装修得很文艺，价格更是文艺中的文艺。我几乎每次都选这个地方，因为在这里总让我觉得自己很年轻，即使做相亲这样的事，我依旧很年轻。

他走进来的时候，我得承认我几乎挪不开眼。你知道事物的价值都是比较出来的，他简直比我以前相过的那些好太多了。介绍人跟我说他什么都好，脾气最好。我还不信，现在冲顾青的长相，我也要信了。

他穿着格子衬衣，其实一般男人到了28这个年纪还穿格子的衬衣我会觉得品味不够，但那天看到他向我走来，我觉得好像看到大学时的自己。

相亲过程很短。我没一会就明白了介绍人说的脾气最好是什么意思了，他根本就不说话，不发表意见。喝什么都行，要去哪都行。最后我说，那各自回家可以么？他也就说了个，行吧。

我拎起钱包就走了。

那个时候是没想过我们最后会结婚的。

2

相亲之后很长一段时间我们都没有联系。有个晚上，我做了个梦，梦见了我大学时候的男朋友。

我大学整整四年都跟同一个男生在一起，期间分分合合无数次。我的大学就是一部极其完整的国产青春片，流产、出国都有了，就差没死个人。他去英国的时候，我没送他，后来傍晚地时候看到天上有飞机飞过，我矫情地在地面上想着，我所有的青春都跟着飞走了。

毕业之后，我立马回了老家，丝毫不愿意再继续待在那个城市里。妈妈很开心，她说回家了就什么都会好起来的。

可事实上，不会好了。我每晚做梦，全部都是他。有时候梦见他在夏天穿着羽绒服，我问他，我穿短袖，你为什么穿羽绒服啊？他不回答，他就笑笑，然后他就不见了。有时候我就梦见他在饭店吃牛排，可那家明明是快餐店，我就说不可以吃牛排的，我在这里只可以吃炒饭。他就顾着吃他的，不回答我，吃完就不见了，可我的炒饭还有好多。我还会梦见我坐在公交车里，旁边突然开过来一辆轿车，他就坐在里面，我叫他快停车，我说我要跟你坐一起，可他不听，他飞快地开走了，公交怎么也赶不上。

每次梦醒，都觉得自己胸腔空荡荡地，好像里面没有心脏。我听不到任何声音，我也没有浑身冒冷汗，我就是一直掉眼泪。他告诉我要出国的时候我都没哭，现在才掉眼泪，大概是反射弧真的太长了吧。

我连续做了一个月的梦，梦到神经衰弱。我是真的怕自己老得太快，所以某一天我跟我妈说，我要相亲了，你帮我找吧。

我妈又是很开心，她一直害怕我走不出来，她太小看我了。走不走得出来，日子都要过的。

我跟我妈说，你帮我找跟我一样的人吧。

我妈不懂。

我接着说，就是跟我长得差不多，家里也差不多，工作也差不多，什么都差不多的人吧。差得多了我就嫁不了了，反正我也不差。

我妈听完眼眶一红，点着头答应了。

那一刻，我更是庆幸我做了对的决定。因为你哭的时候，其实有人比你更难过。

3

相亲真的很见效，从我开始约见不同的男人开始，我就不再做有关前男友的梦，每晚都睡得很好。

唯一不满意的是，明显我妈没真的懂我的意思，否则怎么会找了那么多明明比我差太多的人来跟我见面呢。我为了这事跟她闹过点脾气，一言不合的时候我妈说了句，你总不能还一直拿以前的男朋友做标准啊！

因为这句话，我搬了出去。

我妈很后悔，跟我打电话道歉，我在电话里说，你别想多了，我是怕带男人回家吵到你们二老。

从那以后，我就是一个独居的单身女人。毕业第二年，我开始自己找资源来相亲，还曾经一度想过要上非诚勿扰，最后被我爸拦下了，他说要是被以前男朋友看到岂不是很丢脸？我爸一辈子糊涂，就这句话最在理，我立马打消了这个念头。

我不知道为什么跟顾青相完亲之后我就又梦见了前男友。在梦里，他也穿了件格子衬衣，他还像从前一样对我笑，笑了好久，笑到最后哭了。他一哭，我就醒了，我一醒，就哭了。

他跟我在一起的时候，只哭过一次。

就在我流产的时候。我怀孕真的是个意外，不知道为什么避孕药没起作用。我谁都不敢讲，就告诉了他。他显然也是吓坏了，哆哆嗦嗦，半天讲不出话。最后他拉着我的手带我到宾馆开了房，他说我要跟我孩子待一个晚上。我也知道这个孩子必须打掉，当他那么说的时候我感觉特别难过。

到了宾馆，他比我更难过。他把头轻轻贴着我的肚子，一直喃喃自语，我是爸爸，我是你爸爸，你是我第一个孩子…你是第一个…我会永远记得…对不起对不起…对不起…对不起…我听他说着我眼泪噼里啪啦往下掉，他没有哭，但他整个晚上都在抖。那是我们在一起的第三年，我们打掉了我们第一个也是唯一一个孩子。

第二天，我们就去了医院，整件事情就我们两个参与。他有点闲钱，流产的费用直接搞定了。我被推出手术室，就看见他手里捧着杯红糖水在等我。我接过杯子，笑了笑说，挺有经验啊。他就在这个时候，突然哭了。

哭得很大声，整个走廊的人都在看他。他激烈地抖动着，嘴里说不完整一句话，他哭得我连红糖水都要端不稳了。那个时候我在心里想，我这辈子，真的好想嫁给他。

4

我坐在床上，下意识地摸了下自己的肚子，异常平坦。从我一个人住开始，我的体重就直线下降，肚子更是难有赘肉。所有事情已经过去很久了，我已经很久没哭过了。但这个晚上，我觉得格外地孤独。

我看了下时间，凌晨一点五十分。还不算太晚。

于是，我做了个决定。我打了个电话给顾青。

顾青接起的时候，嗓音很混沌，明显已经进入深度睡眠了。

但我还是说，我苏瑾，你睡了吗？

他声音很小地回答，睡了…

我犹豫了一下，然后说，我害怕，你过来陪我吧。

他好像听清了，又好像没听清。嘟嘟囔囔了一句什么，然后电话就挂了。我不知道他是有意还是无意挂的，我也不知道他会不会过来。但我还是把地址发给了他。

他果然，还是过来了。在两点三十分的时候。

我打开门，他风尘仆仆地样子，有点远…他说。

我就笑了。我觉得顾青是个善良的人。

那个晚上，我们躺在一个床上。他刚开始全身僵硬，后来我一直在他耳边讲话，他渐渐地就又困了。最后在他昏昏欲睡地时候我在他耳边说了句，不如我们试一下吧。然后我就挨着他的胳膊睡着了。

第二天我醒来的时候，他已经醒了。我一醒来，他就红着脸问我，所以，我们，在一起，了吗？

原来你听见了啊？

嗯…他又红着脸点了下头。

那我们睡都睡过了，那还是在一起吧。

没…没睡…几乎是毫不犹豫地，他就否认了。

我觉得好好笑。我觉得顾青可能也不是那么闷。然后，我们就在一起了。

我们谈恋爱没到半年就结婚了。我们结婚没到半年他就出轨了。

5

对，我想起来了，顾青已经出轨了。我不能再用这么温和平淡的口吻叙述他了，他明明已经背叛我了！

前男友就算最后弃我而去，但我们是和平分手，可顾青，这个平日里温吞沉默的好好先生，他居然出轨了。

出轨这事是我亲眼看见的，真是不得不感叹生活永远比电视剧更狗血。

顾青是个兽医，可能喜欢动物都超过喜欢我，对着猫啊狗啊眼神就特别温柔。他毕业之后家里给了点钱，他也自己贷了点款，就开了个动物诊所，后来这个城市里宠物越来越多，他也做得很不错，到我们结婚的时候已经算事业小成了。我很闲的时候就去他的诊所看看他，顺便给他带点午餐晚餐之类的。

某天我去他诊所，还站在门外，就看见他在跟个女的说话。那个女的很是温软的样子，手里抱着只狗，我不知道什么品种。顾青经常没事就教我认狗的品种，但我一点兴趣都没有，今天还认识，明天就忘了。我看他还有患者在，就没进去，结果却越看越不对劲。

那个女的跟浑身没长骨头一样，有意无意就往顾青身上靠，恼火地是顾青居然也不躲。他是太迟钝还是怎么着？

我仔细盯着那个女的的脸看了会，觉着长得还不错啊。我纳闷，顾青行情有这么好？

结果，这个女的越来越离谱，靠得进就算了，还把下巴往上抬，把嘴往顾青脸上靠，这是…这是要接吻啊！这是…这是要偷情啊！

我一个跨步过去，一把拉开门，一脚走到他们面前，再一伸手，直接推开了那个女的！

她显然是知道我是谁的，一副惊恐地表情。浑身开始抖，手里的狗摇摇欲坠。我看她对做小三这事也不太有经验地样子，于是我对她说，以后换个地方看狗病，只要别再出现了，我就不找你麻烦。

她松了口气，抱着狗跌跌撞撞地走了。

我转身看向顾青，他冷静地让我有点意外。我一瞬间竟然忘了要生气，只是突然觉得有点凉意。

我对他说了两个字，回家。

6

回家之后，顾青相当平静。他平静地让我觉得，其实我真的一点都不了解他。我一直以为他就是个很简单的人，对生活没有太大的追求，对婚姻能有基本的忠诚。我们或许不爱对方，但我从嫁给他那天起就是想着要跟他白头到老的。在今天以前，我以为他也是这么想的。直到我看见那个陌生女人想要亲他而他竟然也没有拒绝的意思时，我才知道我想错了。

我开口问他，顾青，你喜欢那个女人吗？

他看着我，眼睛里有明显的疑惑，他大概没想到我问的第一个问题竟然是这个。

毕竟，我连顾青是否喜欢我这个问题，都不曾开口问过。

顾青脸色不太好看，他说，你，在意，吗？

我回答不上来。

顾青又接着说，你不，在意，你反正，什么都不，在意。

我听着心里泛起一股难受，这是我的老公，我刚刚拥有的不到半年的老公。而他此刻在冰冷地控诉我这个妻子有多不在意他。当我还十分少女地时候我无数次幻想过我将来会嫁给一个什么样的人，过什么样的婚后生活。而此刻现实在告诉我，我的想象力还远不够丰富。

顾青脸色白到发青，整个人没有一点温度的样子，他冷冷地看着我，接着说，你甚至，从来没问过，我说话，为什么，这个样子…

这个真的冤枉我了，我立马开口，我不问也是为了你的自尊心啊，毕竟结巴…又不是什么好事…

我不是！结巴！顾青脸一瞬间红了回去，连青筋都隐隐暴起。

我，我不是，结巴。他又重复了一遍。

那你…为什么每次讲话都一顿一顿的，好像不能说很长的话？

我，我有，语言障碍…

我心里嘀咕了一句…那不就是结巴吗？

顾青看着我，眼睛里有很多内容。我感受到一种深沉的我无法反驳的来自他的责怪，可明明…出轨的是他啊…

语言障碍，跟结巴，不一样。他慢慢跟我解释，我只是不能，跟人，打交道…

你跟动物可以？

嗯。我跟，诊所里，每只动物，都可以，好好说话。不用，停顿。

我还是第一次听见这种事，我接着问他，为什么？

顾青没立即回答我，而是看着我笑了，他说，你终于，问了。

我看着他的笑，感觉跟被针扎了一样。我从来不知道他在等我关心他。我以为我履行了那些做饭打扫暖床的职责就好了，我们就能这样一直到老了。

于是，我暂时忘了他出轨这件事，先跟他道了歉，对不起。

顾青听到我说对不起，一时间有点愣怔，像是想起什么似的，也跟我说了一句，对不起。

你不来，我也不会，亲她的。他闷着头跟我解释。

我看未必啊，她往你身上靠你可一点没拒绝，我要没来，估计你们连床都能上吧。

不能够，我，我只是不想，失去，一个听我，讲话，的人。

他一说完，我又惭愧了。因为顾青讲话，像机器人一样，总要停顿，所以我总没耐心跟他聊天。我爸妈见顾青的时候对他什么都满意，就是觉得这孩子有点结巴可惜了。我说不打紧，话少才好，这样吵架永远都吵不过我。后来在一起到结婚，我们根本不吵架，顾青特别随和，什么都依我。我其实性格很爱碎碎念，每次问顾青个什么事，总是没等他全部说完我就自己拿了主意。我想，没关系的，反正他什么都依我。我从来没想过，他还没说出口的那些话，到底是什么。

有时候他下班回来，兴高采烈地样子，准备跟我分享些什么。可他讲话太慢，几个字几个字地讲，我还没听到重点，就会开口打断说我自己的事。他也有过失落的表情，可都被我忽略了。

她会，听我，把话说完。顾青又重复了一遍。

那…别的患者就不会听你把话说完吗？

不会，她们都跟你，一样，听到一半，就说，知道了。然后，就走了，就算，后来，有不懂的，她们，也会去，问诊所里，其它人。

她们，都不想，跟结巴，说话。

我一边听他说，一边觉得心像是被揪住了一样，动弹不得。我才知道，原来外边那么多人欺负他，更可恶地是，我才是欺负他最厉害的那一个。

我走到他身边，把头放在他肩膀上，用脸来回地蹭他。他跟我说过，猫就是这么跟人撒娇的。果然，他还是拿我没办法，伸出手，抱住了我。

7

那天晚上，我们两个躺在床上，说了一通宵的话。

真的是，一通宵的话。我拿出了这辈子所有的耐心，期间一次都没打断过他。就算旁人两分钟可能就说完的事他要说半个小时，我也没有犯困睡着。

原来，顾青的语言障碍是源于他母亲去世这件事。他妈妈在他十岁的时候去世的，是癌症。妈妈原本是家里的主心骨，爸爸爱妈妈多过爱顾青。妈妈走掉之后，爸爸就一蹶不振，沉默寡言，家里没有一丝生气。最长的时间里，爸爸可以一个星期不跟顾青讲一句话。顾青说，那个时候爸爸根本不想跟他说话，只要提到妈妈爸爸就会跟疯了一样，眼睛通红，像是要去杀人。可除了妈妈，爸爸对什么都不再感兴趣，他好像成了家里的一尊雕塑，可以十几年如一日地沉默。顾青慢慢地，也不爱说话，因为没人跟他说话。他没有一个能多说上几句话的朋友，等到他话越来越少的时候，想交朋友就更力不从心。到最后，他已经变得没法正常说话了。

我问他这样不说话的状态过了几年。

他说，十年。

从十岁到二十岁。我人生最快乐的十年，什么事都不用想，顺风顺水到了大学。这期间我说过无数多话，笑过无数多次。可我的丈夫，在他身体疯长的时候，他连好好说一句话都不能够。

后来上了大学，觉得世界变了好多。顾青也开始想要改变，因为到人越多的地方，越觉得孤单。他不想再这么孤单下去。于是他开始看医生，但是医生说，他这种情况跟病理没有关系，声带喉咙都没有问题，只是太长时间不说话，再加之心理因素，所以导致说话困难。没有药可以吃，只能想别的办法。于是顾青开始养宠物，跟宠物说话。从养第一只宠物到能跟动物流利地讲话，他用了五年。后来不止是动物，植物、墙壁、空气，只要不是人，他都能好好说话。一到面对人的时候，就又开始需要停顿，需要组织，需要克服。

原来我的老公是这么有故事的人，可我却直到婚后才知道。我问顾青为什么会跟我结婚。他说，是因为我没嫌弃过他。他从来没有谈过恋爱，到毕业之后才敢跟女孩子说话，根本追不到人。也有主动上门说要跟他在一起的，但是没过两天就受不了了。在我之前他也相过几次亲，都不了了之。那次我说各自回家然后拎起钱包就走了他也以为跟我一样没结果，后来凌晨接到我电话以为是自己做梦，看到短信发过来上面有真真切切的地址才觉得喜从中来，立马开车赶到我家。那次跟我躺在一起，是他十岁以后第一次跟人挨那么近，居然还是异性。他说以为自己会紧张地睡不着，没想到后来却睡得很好。早上醒来看到我躺在他身边，他觉得一切美好地不像话。后来我同意嫁给他，他简直觉得人生从此都要圆满了。

后来，我才知道，你不是，不嫌弃，你是，不在意。天快亮的时候，顾青搂着我说出了这句话。你，只是觉得，我还不错，可以，拿来结婚，你就跟我，结婚了。

我心里一暗，想起了前男友。心里多少也没底气，但口头还是反驳了一句，那我们结婚的时候，我朋友还说你不爱我呢。

他缓缓开口，我只是，不会说话，不是，不会爱人。

我一瞬间觉得心被塞满了。

其实我知道的。顾青对我很温柔，这种温柔跟他很温柔地对待每一个顾客患者是不一样的。我们结婚那天晚上，他喝了很多酒，醉晕晕地话更说不清楚了，但他还是坚持给我倒水泡脚。

谈恋爱的时候我说过我最讨厌穿高跟鞋了，他问我那要是穿了之后很不舒服要怎么办。我随口说，就用热水泡泡吧。

那天晚上，我穿着礼服坐在床边，他满脸醉态给我捏着脚丫。他说，你嫁给我了，真好，我要，对你好，就对你，一个人，好。

我当他喝醉之后随便说的，但其实婚后每一天他都在履行那个承诺。

我小心翼翼问他，那你现在，是不是后悔跟我结婚了？

他没有回答，而是问我，你可以，跟我讲讲，你心里的人吗？

8

原来顾青不是什么都不知道的。我叹了口气，蔫蔫地开口，也没什么好说的，就是大学一直在一起，后来他要出国，我们就分手了。

你很，爱他。

听着自己的丈夫对自己说你爱别的男人，这种感受没体会过的人是永远不会懂。我紧紧地抱着他，头贴着他的胸膛，我说，我现在不爱了。

那你，跟我，谈恋爱吧。好久之后，顾青这么跟我说。

我有点没转过弯来，可是，我们都结婚了。

结婚了，也可以，谈恋爱啊。他声音里有些，欢快。

怎么谈？

就是，要约会，还要，互相生气，然后，又要哄好，然后又要，接着吵。

哈哈哈哈。我窝在被子里笑。原来你理解的谈恋爱就是这么谈啊？

嗯，不会，生气的，就是，不爱。

我想起我之前说过的，跟他在一起从没吵过架，心里有点讪。

他憋了憋，没忍住，又补了句，你就，从来，不生气。

我觉得他这副委屈指控的样子有点萌态，于是我特意夸大了情绪说，我生气我生气啊，我昨天不是还很生气地推开那个靠在你身上的女人吗？！

他就笑了。有点不好意思地那种笑。

那我们别睡觉了，出去谈恋爱吧。我兴致大好地喊道。

可是，我们，一夜，都没，睡觉…

我打断他，谈恋爱就是这样的！就是要这样头脑发热，不管不顾，想到什么就去做什么！快起来快起来快起来，我们换好衣服出门！

顾青受我感染，也激动起来，一个翻身掀开被子就换起了衣服。我看他在衣柜前挑挑拣拣的样子，真的一瞬间恍惚觉得回到了从前青春正盛的时候。

9

换好衣服出门，我们先找了个店吃早餐，顺便商量一会去哪谈恋爱。最后决定去电影院看场电影。

上午电影院没什么人，偌大一个厅就零星几个人。顾青按着买的票找到座位准备坐，我阻止了他，我说谈恋爱的人们就不爱循规蹈矩，我们可以随便乱坐啊。他像受到启发一样，童心大发，牵着我手在电影院里摸黑乱转，换了好多次位置，还认真分析到底哪个视角是最棒的。最后一场电影下来，我们也没认真看几分钟，后来换位置换到累了，居然就在电影院里睡着了。灯光亮起的时候我们都还没醒，工作人员过来喊我们，看我们睡得口水都往外流一副看我们是神经病的表情。

我跟顾青没一点不好意思，就欢脱地离开了电影院。

下午顾青说想去游乐园，已经二十年没进去过了。小时候想着谈恋爱的话一定要来游乐园，没想到长大之后直接结了婚省去了谈恋爱…

游乐园里人山人海，每个项目都要排起码半小时以上的队，我们两个因为严重缺乏睡眠，感觉已经到了站着都能睡着的地步。别的小情侣排着队有说不完的话，就我们两个看起来格格不入。顾青略有一丝郁闷，他说，我们，是不是，也要，说点话？我说我累了。他说，谈恋爱，应该要，不知疲倦。

我直接被笑醒了。

后来实在是顶不住排长队，我们决定乘船游湖。这样租个船，两个人，能在湖里荡一下午，甚好甚好。

结果却是，我们的船还没荡出去多远，我们就双双睡着了。睡得那叫一个昏天黑地，到时间的时候工作人员用扩音器喊我们吧船开回去我们压根听不到。最后他们派人开了船过来把我们叫醒，又是一副我们是神经病的表情…

晚上，顾青说还想坐摩天轮。我说，到摩天轮上继续睡吗？顾青不理，依旧把我拉上了摩天轮。不过我们倒是因为下午睡了比较久，晚上终于清醒了。

他一直牵着我的手，我把头放在他肩膀上。整个城市华灯初上，一片光亮。坐在摩天轮里让我有种整个世界只剩下我们两个的错觉，我忽然感到特别庆幸。我想，要是真的世界上就剩我跟他了，那我也会过得很好。

顾青问我，跟我，谈恋爱，怎么样？

我说，你是在问我，跟你在不同地方睡觉怎么样吗？

顾青笑了笑。

我又接着说，跟你谈恋爱，特别开心。你特别可爱。

他脸有点红，哪里，可爱？

哪里都可爱。以前觉得木讷的地方现在觉得通通都是可爱。别人都不能像你这样讲话，别人都没你可爱。

他牵着我的手紧了紧，说，你，是不是，在说，其实，你，喜欢我？

哈哈。我看着他，别人都说谈恋爱的人智商为零，你怎么没变傻啊？

他没说什么，探身过来亲了亲我。

然后，开始一直傻笑。

果然，还是变傻了。

摩天轮慢慢悠悠晃到最高点的时候，顾青突然特别郑重其事地对着我单膝跪地，然后说，我，顾青，愿意，娶苏瑾，为妻。一辈子，不管，贫穷富贵，健康疾病，都不离不弃。

我听完就泪奔了。

他还特别要求仪式感地要我把手上婚戒拿下来，他再给我戴一次。我深陷剧情，也就照做了，还忍不住跟着说了个I do。然后我们抱在一块，感觉自己把自己给感动坏了。

当初结婚的时候，他有提过要办西式婚礼，想在教堂里跟我宣誓。但我爸妈不同意，我也就没太把他的要求当一回事。没想到，他心里还一直惦记着。

从来不搞浪漫的人突然给我整这么一出，效果简直是惊人的。我现在看他比吴彦祖都帅。一想到我拥有了个比吴彦祖还帅的男人我就高兴得合不拢腿。

10

我曾经以为，人一辈子只拥有一次深爱一个人的能力。前男友离开的时候，我总想着我这一辈子都无法再全身投入地对别人了。顾青出现的时候，我的确就像是他自己说的那样，觉得他还挺不错的，跟他结婚吧就，反正一辈子跟谁过不是过呢。

但我现在觉得，没有爱情，婚姻还是走不下去的。

一开始或许可以因为各取所需这种理由，但谁都不会想过貌合神离的日子。要相濡以沫，必须互相吸引，彼此欣赏，再默默付出。

顾青没有放弃我，我也终于重新找回爱一个人的能力。

没有谁能把谁毁灭，但却有谁能把谁拯救。

爱能治愈一切。

谁也没说这世上的事情就该按大家规定的顺序来，我觉得像我跟顾青这样，先结婚，再恋爱，也很好。

不过这样有风险，毕竟不是谁都像顾青一般，是个良人。

谢谢顾青，谢谢爱。" #("<img src=\"https://pic4.zhimg.com/26d4265765710b3c15bc45d8b119536f_b.jpg\" data-rawwidth=\"500\" data-rawheight=\"332\" class=\"origin_image zh-lightbox-thumb\" width=\"500\" data-original=\"https://pic4.zhimg.com/26d4265765710b3c15bc45d8b119536f_r.jpg\"><img src=\"https://pic1.zhimg.com/d1307dcbec3e0430d4de758dbbde46f4_b.jpg\" data-rawwidth=\"500\" data-rawheight=\"360\" class=\"origin_image zh-lightbox-thumb\" width=\"500\" data-original=\"https://pic1.zhimg.com/d1307dcbec3e0430d4de758dbbde46f4_r.jpg\">(穿将校呢的大院子弟和不穿将校呢的新时代大院子弟)(穿将校呢的大院子弟和不穿将校呢的新时代大院子弟)过去" 0 4 (fontified t) 4 5 (fontified t) 5 8 (fontified t) 8 10 (fontified t) 10 15 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) face org-link mouse-face highlight org-no-flyspell t fontified t htmlize-link (:uri "https://pic4.zhimg.com/26d4265765710b3c15bc45d8b119536f_b.jpg")) 15 22 (htmlize-link (:uri "https://pic4.zhimg.com/26d4265765710b3c15bc45d8b119536f_b.jpg") fontified t) 22 28 (fontified t htmlize-link (:uri "https://pic4.zhimg.com/26d4265765710b3c15bc45d8b119536f_b.jpg")) 28 32 (htmlize-link (:uri "https://pic4.zhimg.com/26d4265765710b3c15bc45d8b119536f_b.jpg") fontified t) 32 67 (fontified t htmlize-link (:uri "https://pic4.zhimg.com/26d4265765710b3c15bc45d8b119536f_b.jpg")) 67 70 (htmlize-link (:uri "https://pic4.zhimg.com/26d4265765710b3c15bc45d8b119536f_b.jpg") fontified t) 70 71 (htmlize-link (:uri "https://pic4.zhimg.com/26d4265765710b3c15bc45d8b119536f_b.jpg") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 77 (fontified t) 77 86 (fontified t) 86 91 (fontified t) 91 97 (fontified t) 97 107 (fontified t) 107 112 (fontified t) 112 119 (fontified t) 119 133 (fontified t) 133 136 (fontified t) 136 145 (fontified t) 145 151 (fontified t) 151 152 (fontified t) 152 153 (fontified t) 153 158 (fontified t) 158 163 (fontified t) 163 164 (fontified t) 164 165 (fontified t) 165 169 (fontified t) 169 178 (fontified t) 178 180 (fontified t) 180 185 (htmlize-link (:uri "https://pic4.zhimg.com/26d4265765710b3c15bc45d8b119536f_r.jpg") fontified t org-no-flyspell t mouse-face highlight face org-link keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 185 192 (fontified t htmlize-link (:uri "https://pic4.zhimg.com/26d4265765710b3c15bc45d8b119536f_r.jpg")) 192 198 (htmlize-link (:uri "https://pic4.zhimg.com/26d4265765710b3c15bc45d8b119536f_r.jpg") fontified t) 198 202 (fontified t htmlize-link (:uri "https://pic4.zhimg.com/26d4265765710b3c15bc45d8b119536f_r.jpg")) 202 237 (htmlize-link (:uri "https://pic4.zhimg.com/26d4265765710b3c15bc45d8b119536f_r.jpg") fontified t) 237 240 (fontified t htmlize-link (:uri "https://pic4.zhimg.com/26d4265765710b3c15bc45d8b119536f_r.jpg")) 240 241 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://pic4.zhimg.com/26d4265765710b3c15bc45d8b119536f_r.jpg")) 241 247 (fontified t) 247 248 (fontified t) 248 251 (fontified t) 251 253 (fontified t) 253 258 (htmlize-link (:uri "https://pic1.zhimg.com/d1307dcbec3e0430d4de758dbbde46f4_b.jpg") fontified t org-no-flyspell t mouse-face highlight face org-link keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 258 265 (fontified t htmlize-link (:uri "https://pic1.zhimg.com/d1307dcbec3e0430d4de758dbbde46f4_b.jpg")) 265 271 (htmlize-link (:uri "https://pic1.zhimg.com/d1307dcbec3e0430d4de758dbbde46f4_b.jpg") fontified t) 271 275 (fontified t htmlize-link (:uri "https://pic1.zhimg.com/d1307dcbec3e0430d4de758dbbde46f4_b.jpg")) 275 310 (htmlize-link (:uri "https://pic1.zhimg.com/d1307dcbec3e0430d4de758dbbde46f4_b.jpg") fontified t) 310 313 (fontified t htmlize-link (:uri "https://pic1.zhimg.com/d1307dcbec3e0430d4de758dbbde46f4_b.jpg")) 313 314 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://pic1.zhimg.com/d1307dcbec3e0430d4de758dbbde46f4_b.jpg")) 314 315 (fontified t) 315 316 (fontified t) 316 320 (fontified t) 320 329 (fontified t) 329 334 (fontified t) 334 340 (fontified t) 340 350 (fontified t) 350 355 (fontified t) 355 362 (fontified t) 362 376 (fontified t) 376 379 (fontified t) 379 388 (fontified t) 388 394 (fontified t) 394 395 (fontified t) 395 396 (fontified t) 396 401 (fontified t) 401 406 (fontified t) 406 407 (fontified t) 407 408 (fontified t) 408 412 (fontified t) 412 421 (fontified t) 421 423 (fontified t) 423 428 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) face org-link mouse-face highlight org-no-flyspell t fontified t htmlize-link (:uri "https://pic1.zhimg.com/d1307dcbec3e0430d4de758dbbde46f4_r.jpg")) 428 435 (htmlize-link (:uri "https://pic1.zhimg.com/d1307dcbec3e0430d4de758dbbde46f4_r.jpg") fontified t) 435 441 (fontified t htmlize-link (:uri "https://pic1.zhimg.com/d1307dcbec3e0430d4de758dbbde46f4_r.jpg")) 441 445 (htmlize-link (:uri "https://pic1.zhimg.com/d1307dcbec3e0430d4de758dbbde46f4_r.jpg") fontified t) 445 480 (fontified t htmlize-link (:uri "https://pic1.zhimg.com/d1307dcbec3e0430d4de758dbbde46f4_r.jpg")) 480 483 (htmlize-link (:uri "https://pic1.zhimg.com/d1307dcbec3e0430d4de758dbbde46f4_r.jpg") fontified t) 483 484 (htmlize-link (:uri "https://pic1.zhimg.com/d1307dcbec3e0430d4de758dbbde46f4_r.jpg") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 484 486 (fontified t) 486 487 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face") 487 510 (fontified t) 510 511 (font-lock-face "rainbow-delimiters-unmatched-face" rear-nonsticky t fontified t) 511 512 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t) 512 528 (fontified t) 528 535 (fontified t) 535 536 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-unmatched-face") 536 538 (fontified t)) #(" <img src=\"https://pic2.zhimg.com/7364b8684f27d0d6745822a1d314b201_b.jpg\" data-rawwidth=\"306\" data-rawheight=\"220\" class=\"content_image\" width=\"306" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t) 6 9 (fontified t) 9 11 (fontified t) 11 16 (htmlize-link (:uri "https://pic2.zhimg.com/7364b8684f27d0d6745822a1d314b201_b.jpg") fontified t org-no-flyspell t mouse-face highlight face org-link keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 16 23 (fontified t htmlize-link (:uri "https://pic2.zhimg.com/7364b8684f27d0d6745822a1d314b201_b.jpg")) 23 29 (htmlize-link (:uri "https://pic2.zhimg.com/7364b8684f27d0d6745822a1d314b201_b.jpg") fontified t) 29 33 (fontified t htmlize-link (:uri "https://pic2.zhimg.com/7364b8684f27d0d6745822a1d314b201_b.jpg")) 33 68 (htmlize-link (:uri "https://pic2.zhimg.com/7364b8684f27d0d6745822a1d314b201_b.jpg") fontified t) 68 71 (fontified t htmlize-link (:uri "https://pic2.zhimg.com/7364b8684f27d0d6745822a1d314b201_b.jpg")) 71 72 (fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://pic2.zhimg.com/7364b8684f27d0d6745822a1d314b201_b.jpg")) 72 73 (fontified t) 73 74 (fontified t) 74 78 (fontified t) 78 87 (fontified t) 87 92 (fontified t) 92 98 (fontified t) 98 108 (fontified t) 108 113 (fontified t) 113 120 (fontified t) 120 135 (fontified t) 135 142 (fontified t) 142 147 (fontified t)) #("著作权归作者所有. 
商业转载请联系作者获得授权, 非商业转载请注明出处. 
作者:霍真布鲁兹老爷
链接:https://www.zhihu.com/question/38710529/answer/79034614
来源:知乎

" 0 8 (fontified t) 8 10 (fontified t) 10 11 (fontified t) 11 24 (fontified t) 24 26 (fontified t) 26 36 (fontified t) 36 38 (fontified t) 38 39 (fontified t) 39 41 (fontified t) 41 42 (fontified t) 42 49 (fontified t) 49 50 (fontified nil) 50 52 (fontified t) 52 53 (fontified t) 53 107 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) face org-link mouse-face highlight org-no-flyspell t fontified t htmlize-link (:uri "https://www.zhihu.com/question/38710529/answer/79034614")) 107 108 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) face org-link mouse-face highlight org-no-flyspell t fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.zhihu.com/question/38710529/answer/79034614")) 108 109 (fontified t) 109 111 (fontified t) 111 112 (fontified t) 112 114 (fontified t) 114 115 (fontified t) 115 116 (fontified t)) #("著作权归作者所有. 
商业转载请联系作者获得授权, 非商业转载请注明出处. 
作者:霍真布鲁兹老爷
链接:https://www.zhihu.com/question/38710529/answer/79034614
来源:知乎

原来这个回答里简单提到过顽主这个群体. <img
src=\"https://pic2.zhimg.com/7364b8684f27d0d6745822a1d314b201_b.jpg\"
data-rawwidth=\"306\" data-rawheight=\"220\" class=\"content_image\" width=\"306\">一.
" 0 8 (fontified t) 8 10 (fontified t) 10 11 (fontified t) 11 24 (fontified t) 24 26 (fontified t) 26 36 (fontified t) 36 38 (fontified t) 38 39 (fontified t) 39 41 (fontified t) 41 42 (fontified t) 42 49 (fontified t) 49 50 (fontified t) 50 52 (fontified t) 52 53 (fontified t) 53 107 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) face org-link mouse-face highlight org-no-flyspell t htmlize-link (:uri "https://www.zhihu.com/question/38710529/answer/79034614") fontified t) 107 108 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) face org-link mouse-face highlight org-no-flyspell t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://www.zhihu.com/question/38710529/answer/79034614") fontified t) 108 109 (fontified t) 109 111 (fontified t) 111 112 (fontified t) 112 114 (fontified t) 114 115 (fontified t) 115 116 (fontified t) 116 134 (fontified t) 134 136 (fontified t) 136 140 (fontified t) 140 141 (fontified t) 141 146 (fontified t) 146 206 (fontified t htmlize-link (:uri "https://pic2.zhimg.com/7364b8684f27d0d6745822a1d314b201_b.jpg") org-no-flyspell t mouse-face highlight face org-link keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 206 207 (fontified t htmlize-link (:uri "https://pic2.zhimg.com/7364b8684f27d0d6745822a1d314b201_b.jpg") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-no-flyspell t mouse-face highlight face org-link keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 207 208 (fontified t) 208 209 (fontified t) 209 285 (fontified t) 285 286 (fontified t) 286 287 (fontified t)) "著作权归作者所有。
商业转载请联系作者获得授权，非商业转载请注明出处。
作者：霍真布鲁兹老爷
链接：https://www.zhihu.com/question/38710529/answer/79034614
来源：知乎

原来这个回答里简单提到过顽主这个群体。<img src=\"https://pic2.zhimg.com/7364b8684f27d0d6745822a1d314b201_b.jpg\" data-rawwidth=\"306\" data-rawheight=\"220\" class=\"content_image\" width=\"306\">一、老炮儿和顽主们作为一个边缘群体，却被北京人念念不忘，把老炮儿写进书里的有王朔，把顽主们搬上银幕这件事，米家山干过，姜文干过，管虎又开始干了。老炮儿或者说顽主到底是什么？他们是旧社会青皮混混光棍的沉渣泛起，但又不完全是。六十年代那场史无前例的运动中，才诞生了老炮儿。有人说他们是红卫兵，是坏人变老了。那真是抬举他们了，他们是不配做红卫兵的一拨人。老红卫兵们是干部子弟，根正苗红，老子英雄儿好汉，他们自称是“老兵”，而老炮儿和顽主们，他们是没有一个好出身的父亲。在”红八月“里，不少人的父母还要被拉出来斗。当他们积极投身所谓革命时，得到的回复是，你也配。所以老炮儿根本没有部队大院儿和胡同串子两拨儿，只有一拨。这拨人，看着老兵们骑着自行车，穿着将校呢，带着漂亮的姑娘们呼啸而过，只有眼馋的份儿。《老炮儿》里冯小刚的演的六爷看不上儿子只认姑娘和钱，可老炮儿们最羡慕这些”老兵“们的就是姑娘和钱，这个钱当然有时候是自行车，将校呢。他们正处于初中生的年纪，荷尔蒙和肾上腺最不缺乏的年龄遇上没有课上的生活，于是就有了顽主。这些胡同里的孩子跟老兵们抢地盘，抢他们的自行车，抢他们的将校呢，他们抢这些，因为他们不服，为什么他们能霸占冰场，想拍婆子就拍婆子，想欺负谁就欺负谁，而他们只能窝在胡同里啃窝窝头。这样的争斗没有了局，最后以最有名的顽主小混蛋被几十个老兵合围捅死结束。顽主们最大的渴望不是当青皮，而是挤进老兵们的圈子，跟他们混，但是不能够，老兵们不带他们玩。用冯小刚在《私人订制》里的话讲，他们缺血，缺一腔红色贵族的血。小混蛋儿一直想跟高干的孩子们做朋友，但最终被他们合围入了局，本来他有机会跑掉，结果碰到他一个部队大院的朋友，一见他，就问他你管不管这事儿，意思是按规矩你们不讲究，你得管。那人说管不了，小混蛋儿说，那我今儿把命交给你了，就把手里的刀子递给他，那人接过来刀子就给了小混蛋儿一下。二、有人说的对，《老炮儿》不是电影，老炮儿是丰碑。一件特别有意思的事儿是，王朔是大院子弟，姜文是大院子弟，张涵予是大院子弟，连冯小刚也算一个大院的人。也就是说，为老炮儿们树碑立传的是一群大院子弟。或者说，他们根本不是为老炮儿们树碑立传，而是缅怀自己逝去的青春，那个他们在四九城呼啸而过，漫卷红旗的青春，是他们残酷的血色浪漫。那时候，他们是马小军，是钟跃民，是张海洋，是袁军，这是他们的青春。他们能怀念这样的青春，一是他们有话语权，二是他们在青春荷尔蒙褪去之后，该拍电影拍电影，该开公司开公司，什么都不耽搁。但老炮儿们为这样的青春付出了什么？老炮儿们的青春在炮局里度过，在西北的农场中度过，他们经历过文革，在随后的83年严打和96年严打中也饱尝过国家机器的威力，当他们拖着疲惫和伤痛回到北京城里时，大概不会有六爷的云淡风轻，不会在活的狗都不如的年纪去插着手帮人铲事，这种情怀，是只有大院里的红色老年们才有的。所以，六爷张学军其实是一个老炮儿的躯壳，装了一个大院子弟的灵魂。三、六爷喜欢规矩，六爷是讲究人，六爷喜欢说一码归一码。可六爷的江湖真的那么守规矩吗？六爷一出场教训的是佛爷（小偷儿），六爷是讲究人，老炮儿们看不起佛爷是真，但佛爷也是要给老炮儿上供的，老炮儿们是能打，可能打变不出来钱，家里吃窝窝头的老炮儿们不事产业，难道喝西北风去，又不像大院子弟有祖荫。所以老炮儿们讲的规矩，其实是一直在变化的，“一码归一码”是个很好的词，好在它可以随意解释。六爷会去拍着城管的脸教训他，但六爷绝不会在“警察办案”的时候拍警察的脸，一码归一码。六爷的江湖一定要有规矩，这就是大院子弟和老炮儿的根本区别。《阳光灿烂的日子》里马小军说：“我镇东单、镇西单，我还镇你们炮局呢”。马小军绝对有这个资格讲，万一他镇不了他可以回家叫一声“爸爸”，炮局必须被镇。进了炮局，就是家里警卫员一个电话的事。六爷不能，大院子弟从江湖一个转身就跨进江山，老炮儿们闪转腾挪，还是在这个江湖里，所以还得守规矩。江湖再大，毕竟只是江山一隅。话匣子回忆六爷的光辉战绩，一个人在冰面上单挑几十个人，虽千万人吾往矣，令人悠然神往。可惜话匣子没有说的是，六爷跟人单挑完了怎么样了？被人像小混蛋儿一样捅了？还是进了炮局了？还是弄到西北挖沙子了？一码归一码的意思就是江湖事江湖了。所以开始儿子晓波被绑架，他不报警，这是江湖事，江湖事江湖了。而一拿到那封信，数着那七百多万欧，他立刻要报警，话匣子劝他别报，六爷说：“你不懂。”话匣子确实不懂，这不是江湖事，这是江山事，江山事江湖了不了。江湖事也就是要钱，顶大天了一横一竖，捅死拉倒，江山事只要伸出一根手指头就把江湖人按死了。这样的事话匣子没经历过，她只看见她的六哥英雄了，没看见挨打。四、六爷以为他的悲剧是时代变了，孩子们都不懂规矩了。所以六爷不能打他们，得教他们，这让闷三儿很憋屈。夕阳无限好，只是不能搞，不能搞许晴也不能搞事。本来硬的好好的，一分神儿它怎么就软了呢？其实时代没变，六爷不应该不明白，这些人他曾经见过的。过去与他茬架的王子王孙，穿着将校呢，拿着军刺和三棱刮刀，骑着自行车，现在他们结了婚，生了儿子而已，他们的儿子们开着法拉利，恩佐，抽着寿百年。<img src=\"https://pic4.zhimg.com/26d4265765710b3c15bc45d8b119536f_b.jpg\" data-rawwidth=\"500\" data-rawheight=\"332\" class=\"origin_image zh-lightbox-thumb\" width=\"500\" data-original=\"https://pic4.zhimg.com/26d4265765710b3c15bc45d8b119536f_r.jpg\"><img src=\"https://pic1.zhimg.com/d1307dcbec3e0430d4de758dbbde46f4_b.jpg\" data-rawwidth=\"500\" data-rawheight=\"360\" class=\"origin_image zh-lightbox-thumb\" width=\"500\" data-original=\"https://pic1.zhimg.com/d1307dcbec3e0430d4de758dbbde46f4_r.jpg\">（穿将校呢的大院子弟和不穿将校呢的新时代大院子弟）（穿将校呢的大院子弟和不穿将校呢的新时代大院子弟）过去，他们能把老炮儿踩在脚下，今天，他们照样能把老炮儿们踩在脚下。军刀再硬，硬不过丹书铁券。《古惑仔》里有句话说得好，“把黑社会说的那么厉害,有能耐你去汇丰银行收保护费”。这个江湖，从来都不是六爷来主宰。在这个江湖里，张亚军从来都不能搞，搞不了话匣子的屁股，也搞不了事。这个江湖，曾经是权力主宰，现在或许是资本，或许是权力，或许是两者一起，但从来不是六爷可以随便搞的。六爷的冰湖秀只是老男人的自我高潮，五十多岁的男人还要跟小年轻约架，这是不忍直视的羞耻play，这提醒我们，男的一定不能落魄成那样，不然就太羞耻了。而事实上除了感动自己没卵用，电影里小飞会敬重这样的人，还会跟他约架，但实际不会，江山人对付江湖人只有一个字，碾。六爷最后出门茬架的那个雾沉沉的清晨，有一个摄像头的特写。一个满是摄像头的世界未免让老炮儿们沮丧，但六爷应该感谢这个世界，感谢现代文明，现代工业文明为大院子弟们创造了法拉利，哦，恩佐，创造了海天盛宴，这些孩子们玩的东西跟老炮儿们玩的东西完全不同，他们至少不会去抢占什刹海的冰面，不会去抢话匣子，不会去霸占电影院，六爷好歹可以安心滑滑冰，需要的话看场电影，吃顿老莫还是可以的，在这些地方能跟这些孩子掐起来比火星撞地球还难。总不至于看场电影就让人捅了吧。六哥大可不必怀念那本不存在的美好时代和本不存在的仗义江湖，现在的时代就是他最好的时代，现在的江湖就是他最得意的江湖，尽管软绵绵的不能搞，毕竟还可以在几个外地新北京人面前摆摆谱，指道儿的时候训他们几句，还可以端着茶杯训训佛爷，还可以合理合法地拍拍城管们的脸蛋子，毕竟头顶有摄像头。六哥也不必教训孩子们，孩子们虽然怂颠颠的，可该上大学上大学，该努力工作努力工作，再说孩子们不怂，哪显出来六爷仗义。赞美这个时代吧，这毕竟是最好的时代，一个银枪小霸王伏法的时代。也赞美科技吧，科技是最好的革命，一不小心王子王孙们的王冠自己就掉了。" #("git whatchanged --since=\"2 weeks ago\"" 0 16 (fontified t front-sticky t font-lock-face comint-highlight-input mouse-face highlight help-echo "mouse-2: insert after prompt as new input") 16 26 (fontified t front-sticky t font-lock-face comint-highlight-input mouse-face highlight help-echo "mouse-2: insert after prompt as new input") 26 37 (fontified t front-sticky t font-lock-face comint-highlight-input mouse-face highlight help-echo "mouse-2: insert after prompt as new input")) #("princebia10," 0 12 (fontified t)) #("princebia10," 0 12 (fontified t)) #("6099377886," 0 11 (fontified t)) "$ printf \"blob 6\\000sweet\\n\" | sha1sum" "jekyll " #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) "一天我路过一座桥，碰巧看见一个人想跳河自杀。我跑过去对他大喊道：“别跳，别死啊。”

“为什么不让我跳？”他说。

“因为还有很多东西值得我们活下去啊。”

“有吗？比如说？”

“呃……你做什么工作？”

“程序员。”

我说：“我也是！瞧，有共同点了吧。你是软件还是硬件？”

“软件。”

“我也是！PC 还是 Web？”

“PC。”

“我也是！Windows 还是 Linux 平台？”

“Linux。”

“我也是！那你使用 C 还是 C++？”

“C++。”

“我也是。1998 年的 C++ 98 还是 2011 年的 C++ 11？”

“2011 年的 C++ 11。”

“我也是。大括号写在后面还是写在下一行？”

“下一行。”

“去死吧！你这个异教徒人渣！”我一把将他推下桥去。" "去死吧！你这个异教徒！ " "老炮儿之后海小混蛋" "百撕不得骑姐" "百思不得其解" "思聪前女友" "https://github.com/justjavac/Programming-Alpha-To-Omega.git" "https://github.com/sindresorhus/awesome.git" #("

" 0 1 (fontified t) 1 2 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("
" 0 1 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("
" 0 1 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("
" 0 1 (fontified t)) #("


" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("
" 0 1 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("
" 0 1 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("
" 0 1 (fontified t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("
" 0 1 (fontified t)) #("2016-01-02 毛豆妈 金融八卦女
八妹说

" 0 20 (fontified t) 20 21 (fontified t) 21 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t)) #("

加八妹个人微信号:baguanv2015  可私聊哦~
" 0 1 (fontified t) 1 2 (fontified t) 2 10 (fontified t) 10 11 (fontified t) 11 29 (fontified t) 29 30 (fontified t)) " 富人孩子和穷人孩子，差的真不仅仅是钱
2016-01-02 毛豆妈 金融八卦女
八妹说

如果你觉得，富二代和穷二代的不同仅仅是因为人民币，那还是太天真。


加八妹个人微信号：baguanv2015  可私聊哦~

文：毛豆妈


前两天，一篇《您没钱，就不要搀和减负这事了》文章大热朋友圈，作为一线小学教师，作者一针捅破了义务教育的玻璃纸：富人可以购买优质的私教弥补不足，低收入家庭只想到依赖免费义务教育，如果再不想办法开小灶，那娃娃长大真的没出路了！


不过，如果你觉得，富二代和穷二代的不同仅仅是因为人民币，那还是太天真。


非常巧，我自己从小家境不富裕，同学中有富二代，因为工作的关系也接触到一些富人，对这个话题很有感触。


我也来说说，富人的孩子和穷人的孩子到底有什么差别。


家庭是富还是穷，影响孩子的长远眼光


毛豆妈自己是穷人的孩子，大学毕业的时候，不敢把自己真正的兴趣放在首位，哪个行业挣钱多就挤破头去哪里。我曾经把工资看得很重，多个三五百块都会感激涕零，因为工资深刻的影响着我的生活质量。


而那些富人家的孩子，从来不考虑房子、车子这些小钱。他们进入一个行业完全可以遵从自己的内心，有充分的自由去选择。他们着眼长远，根本不会让眼前的小利益捆绑住自己的手脚。他们考虑更多的也是行业的经验、积累到有效人脉、学习行业规则，时机成熟就可以创业了。


我高中时有一个女同学，老爸开厂，家里数套商铺，家境非常优越。喜欢画水墨画，学的也是哲学这种找不到工作的专业，大学毕业时根本不像我们挤独木桥头一样去外企、公务员，而是接单画画，每天收入只有两三百。我们一直以为她会永远这样下去，直到几年时机成熟，她成立了自己的工作室，由于长久的积淀，一年利润很快过百万。即使我知道这样可能会成功，我也没有像这位富家女的魄力去等待，因为穷家孩子输不起。


拥有越多的人，才越不怕失去。


穷人家的孩子没有机会可以耐心等待，生活的压力让他们对眼前利益考虑的更多。


家庭是富还是穷，影响孩子的抗风险能力


前一阵的创业潮，让很多90后成了创业明星。不知道大家有没有仔细考察过这些90后的父母，反正毛豆妈是仔细研究过：他们的父辈，无一例外是文化层次高、在改革开放初期奋斗出一定财富的60后。


这些60后如今已是当下中国社会的顶梁柱。他们有足够的能力给自己的孩子提供良好的物质生活环境和教育条件。正是父辈打下的良好经济基础，让这些90后初生牛犊不怕虎，有底气放手一搏：反正创业输了还有家里的理财收益，不至于饿死。


相比而言，那个二十年前就出来打工，子女留守老家的农民工群体，作为父母没有时间精力管孩子，也没有足够的资源可提升孩子，他们只是艰难地活着而已。


而他们的80、90后孩子依然随便上点学到了中学就辍学，然后步入父母的老路到城市来打工，然后依然在繁华城市的边缘被压挤，这群人中除非立志能够改变自己人生的还是有，但是很小的一部分。


农村出来的孩子，即使面临着机遇，也很难背水一战。寒门再难出贵子，这是多么赤裸裸的现实。


富人孩子眼界更广，穷人孩子相对欠缺


你以为富人真的是只有“钱”么？财富只是一个表象，更重要的是社会资源与优质人脉的占有。


通过父辈的耳濡目染，富人孩子的视野、人脉和资源都比穷人家的孩子开阔的多，穷家孩子要得到这些资源就很难。


知乎上有个人说的很现实，站在巨人的肩膀上，和站在柴火垛上，能一样么？ 为什么柳传志的女儿柳青哈佛毕业，成了滴滴总裁，侄女柳甄也是Uber中国区高管？很简单：创二代的资源传递。


就拿我和毛豆爸的区别来说。我家境一般，父母持着“赚死工资”的刻板脑筋，我就从不敢冒风险，也不知道怎样调动资源。


而毛豆爸家里做过生意，他从小就知晓做生意的流程，看事物更加接近商业的本质。同样一个问题，毛豆爸的思维就比我灵活太多，动用资源的能力也远远高于我，我需要很努力才能弥补上这些差距，这都是家庭眼界影响的结果。


富人和穷人也有着心态上的差别。


有的时候，穷人在自身混得不好的情况下，更愿意抱怨社会，恨自己没有人脉，为自己的失败找借口。


而富人则较少怨天尤人，更多从自身找原因，抓住下一个机会默默努力。


我小时候住的小区很破烂，住着很多穷人，二十年过去再看，发现很多孩子继承着父辈对社会的抱怨和戾气，也继承了父辈的贫穷。


而我也见过很多富人顷刻间财富化为乌有，但不哭不怨，二十年后卷土重来，这些优点，也潜移默化给了他们的孩子。


所以说，与其说很多富二代继承的是钱，不如说他们继承了这种心态。




富人养得起全职妈妈，能陪伴孩子更多


一个很现实的因素是，穷人家庭的父母经常需要忙于赚钱养家，每天疲于奔命，没有很多时间来和孩子互动。


而富有人家一般会有一个全职妈妈，全力陪伴来让孩子赢在起跑线上。在穷人家的孩子还等待妈妈回家的时候，富人家的小孩已经在上昂贵的早教班。


当然，我觉得这其实是贫富家庭差距最小的一点，因为陪伴更注重质量而不是绝对时间。不过，当你因为生计原因而不能早早回家陪孩子时，你一定会觉得富有是件好事。


我小时候居住的贫穷环境里，就有很多妈妈整天在外奔波，迫不得已几个月就断奶。而接触过的富人里，很多妈妈都跑遍全城，寻找最高水准的钢琴教师。


贫富差距反映在教育上，是一目了然。


看到这里，请别说毛豆妈势利，也别说毛豆妈嫌贫爱富，我自己就是穷人家出身，太懂得寒门学子有多不易。我又接触过太多富人家的孩子，深知穷富两类人群，差的不仅仅是钱，更多的是眼界、思维方式和教育理念。


我也想写一些“只要妈妈全身心的爱你陪伴你就好、孩子你要自强不息”的鸡汤文，可是在赤裸裸的现实面前，这些话苍白无力到我自己都无法相信，更不愿意写出来教授他人。


在我们这个阶层固化严重的国家，教育从来就不是“小孩自己努力”就可以达到的事情，你看得见或者看不见的地方，都是贫富的比拼。


你觉得富人的教育是靠真金白银上点补习班，出几趟国出来旅游就可以的？


错，优质人脉、思维方式、教育理念和陪伴时间都远比人民币更深刻地影响着你的孩子，并悄悄的完成财富的代际传递。


如果你家境一般，那么与其把希望寄托在这个不靠谱的教育体制上，例如“老师不计报酬的爱心”“超高的教学水平”“社会的支持”。


还不如努力提高你自身实力，开拓眼界，站到更高的位置，为孩子打拼出更多资源——这个社会太残酷。" "程序员分三种：Google驱动型，StackOverflow驱动型，Github驱动型" "https://github.com/loochao/a-single-div.git" "https://github.com/justjavac/12-javascript-quirks.git" "https://github.com/justjavac/git-reference.git" "https://github.com/loochao/magicmethods-zh_CN.git" "https://github.com/loochao/zh-django-best-practices.git" "https://github.com/justjavac/AngularJS-Learning-zh_CN" "                                                                 (0.104.8)" #("./build.py --clang-completer --omnisharp-completer --gocode-completer`." 0 70 (face markdown-inline-code-face fontified t) 70 71 (fontified t)) #("git submodule update --init --recursive" 0 38 (face markdown-inline-code-face font-lock-multiline t fontified t) 38 39 (face markdown-inline-code-face font-lock-multiline t rear-nonsticky t fontified t)) #("ls" 0 1 (fontified t) 1 2 (rear-nonsticky t fontified t)) #("ls" 0 2 (fontified t)) #("git submodule update --init --recursive" 0 39 (face markdown-inline-code-face font-lock-multiline t fontified t)) #("rm -rf Tic" 0 3 (fontified t) 3 6 (face font-lock-comment-face fontified t) 6 10 (fontified t)) "https://github.com/Valloric/ycmd.git" "git clone git://github.com/VitaliyRodnenko/geeknote.git" #(")" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" face org-block font-lock-multiline t font-lock-fontified t fontified t)) #("evernote)" 0 8 (face org-block font-lock-multiline t font-lock-fontified t fontified t) 8 9 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" face org-block font-lock-multiline t font-lock-fontified t fontified t)) #("ahs-inhibit-face-list " 0 22 (fontified t)) #("     (ansi-color-faces-vector
      [default bold shadow italic underline bold bold-italic bold])
     (ansi-term-color-vector
      [unspecified \"#151718\" \"#CE4045\" \"#9FCA56\" \"#DCCD69\" \"#55B5DB\" \"#A074C4\" \"#55B5DB\" \"#D4D7D6\"])
" 0 5 (fontified t) 5 6 (rear-nonsticky t fontified t font-lock-face "rainbow-delimiters-depth-4-face") 6 29 (fontified t) 29 30 (fontified t) 30 36 (fontified t) 36 37 (font-lock-face "rainbow-delimiters-depth-4-face" fontified t rear-nonsticky t) 37 38 (fontified t) 38 95 (fontified t) 95 96 (font-lock-face "rainbow-delimiters-depth-4-face" fontified t rear-nonsticky t) 96 97 (font-lock-face "rainbow-delimiters-depth-3-face" fontified t rear-nonsticky t) 97 98 (fontified t) 98 103 (fontified t) 103 104 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 104 126 (fontified t) 126 127 (fontified t) 127 133 (fontified t) 133 134 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 134 146 (fontified t) 146 147 (face font-lock-string-face fontified t) 147 154 (face font-lock-string-face fontified t) 154 155 (face font-lock-string-face fontified t) 155 156 (fontified t) 156 157 (face font-lock-string-face fontified t) 157 164 (face font-lock-string-face fontified t) 164 165 (face font-lock-string-face fontified t) 165 166 (fontified t) 166 167 (face font-lock-string-face fontified t) 167 174 (face font-lock-string-face fontified t) 174 175 (face font-lock-string-face fontified t) 175 176 (fontified t) 176 177 (face font-lock-string-face fontified t) 177 184 (face font-lock-string-face fontified t) 184 185 (face font-lock-string-face fontified t) 185 186 (fontified t) 186 187 (face font-lock-string-face fontified t) 187 194 (face font-lock-string-face fontified t) 194 195 (face font-lock-string-face fontified t) 195 196 (fontified t) 196 197 (face font-lock-string-face fontified t) 197 204 (face font-lock-string-face fontified t) 204 205 (face font-lock-string-face fontified t) 205 206 (fontified t) 206 207 (face font-lock-string-face fontified t) 207 214 (face font-lock-string-face fontified t) 214 215 (face font-lock-string-face fontified t) 215 216 (fontified t) 216 217 (face font-lock-string-face fontified t) 217 224 (face font-lock-string-face fontified t) 224 225 (face font-lock-string-face fontified t) 225 226 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 226 227 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 227 228 (fontified t)) #("
" 0 1 (fontified t)) #(" '(ansi-term-color-vector
   [unspecified \"#151718\" \"#CE4045\" \"#9FCA56\" \"#DCCD69\" \"#55B5DB\" \"#A074C4\" \"#55B5DB\" \"#D4D7D6\"])
" 0 2 (fontified t) 2 3 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-4-face" fontified t) 3 25 (fontified t) 25 26 (fontified t) 26 29 (fontified t) 29 30 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 30 42 (fontified t) 42 43 (face font-lock-string-face fontified t) 43 50 (face font-lock-string-face fontified t) 50 51 (face font-lock-string-face fontified t) 51 52 (fontified t) 52 53 (face font-lock-string-face fontified t) 53 60 (face font-lock-string-face fontified t) 60 61 (face font-lock-string-face fontified t) 61 62 (fontified t) 62 63 (face font-lock-string-face fontified t) 63 70 (face font-lock-string-face fontified t) 70 71 (face font-lock-string-face fontified t) 71 72 (fontified t) 72 73 (face font-lock-string-face fontified t) 73 80 (face font-lock-string-face fontified t) 80 81 (face font-lock-string-face fontified t) 81 82 (fontified t) 82 83 (face font-lock-string-face fontified t) 83 90 (face font-lock-string-face fontified t) 90 91 (face font-lock-string-face fontified t) 91 92 (fontified t) 92 93 (face font-lock-string-face fontified t) 93 100 (face font-lock-string-face fontified t) 100 101 (face font-lock-string-face fontified t) 101 102 (fontified t) 102 103 (face font-lock-string-face fontified t) 103 110 (face font-lock-string-face fontified t) 110 111 (face font-lock-string-face fontified t) 111 112 (fontified t) 112 113 (face font-lock-string-face fontified t) 113 120 (face font-lock-string-face fontified t) 120 121 (face font-lock-string-face fontified t) 121 122 (fontified t font-lock-face "rainbow-delimiters-depth-4-face" rear-nonsticky t) 122 123 (fontified t font-lock-face "rainbow-delimiters-depth-3-face" rear-nonsticky t) 123 124 (rear-nonsticky t fontified t)) #(" '(ansi-color-faces-vector
   [default bold shadow italic underline bold bold-italic bold])
 '(ansi-term-color-vector
   [unspecified \"#151718\" \"#CE4045\" \"#9FCA56\" \"#DCCD69\" \"#55B5DB\" \"#A074C4\" \"#55B5DB\" \"#D4D7D6\"])
" 0 2 (fontified t) 2 3 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 3 26 (fontified t) 26 27 (fontified t) 27 30 (fontified t) 30 31 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 31 89 (fontified t) 89 90 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 90 91 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 91 92 (fontified t) 92 94 (fontified t) 94 95 (font-lock-face "rainbow-delimiters-depth-2-face" fontified t rear-nonsticky t) 95 117 (fontified t) 117 118 (fontified t) 118 121 (fontified t) 121 122 (font-lock-face "rainbow-delimiters-depth-2-face" fontified t rear-nonsticky t) 122 134 (fontified t) 134 135 (face font-lock-string-face fontified t) 135 142 (face ((:foreground "white") (:background "#151718")) fontified t) 142 143 (face font-lock-string-face fontified t) 143 144 (fontified t) 144 145 (face font-lock-string-face fontified t) 145 152 (face ((:foreground "white") (:background "#CE4045")) fontified t) 152 153 (face font-lock-string-face fontified t) 153 154 (fontified t) 154 155 (face font-lock-string-face fontified t) 155 162 (face ((:foreground "black") (:background "#9FCA56")) fontified t) 162 163 (face font-lock-string-face fontified t) 163 164 (fontified t) 164 165 (face font-lock-string-face fontified t) 165 172 (face ((:foreground "black") (:background "#DCCD69")) fontified t) 172 173 (face font-lock-string-face fontified t) 173 174 (fontified t) 174 175 (face font-lock-string-face fontified t) 175 182 (face ((:foreground "black") (:background "#55B5DB")) fontified t) 182 183 (face font-lock-string-face fontified t) 183 184 (fontified t) 184 185 (face font-lock-string-face fontified t) 185 192 (face ((:foreground "black") (:background "#A074C4")) fontified t) 192 193 (face font-lock-string-face fontified t) 193 194 (fontified t) 194 195 (face font-lock-string-face fontified t) 195 202 (face ((:foreground "black") (:background "#55B5DB")) fontified t) 202 203 (face font-lock-string-face fontified t) 203 204 (fontified t) 204 205 (face font-lock-string-face fontified t) 205 212 (face ((:foreground "black") (:background "#D4D7D6")) fontified t) 212 213 (face font-lock-string-face fontified t) 213 214 (font-lock-face "rainbow-delimiters-depth-2-face" fontified t rear-nonsticky t) 214 215 (font-lock-face "rainbow-delimiters-depth-1-face" fontified t rear-nonsticky t) 215 216 (fontified t)) #("(ansi-term-color-vector
   [unspecified \"#151718\" \"#CE4045\" \"#9FCA56\" \"#DCCD69\" \"#55B5DB\" \"#A074C4\" \"#55B5DB\" \"#D4D7D6\"])" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 1 23 (fontified t) 23 24 (fontified t) 24 27 (fontified t) 27 28 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 28 40 (fontified t) 40 41 (fontified t face font-lock-string-face) 41 48 (fontified t face ((:foreground "white") (:background "#151718"))) 48 49 (fontified t face font-lock-string-face) 49 50 (fontified t) 50 51 (fontified t face font-lock-string-face) 51 58 (fontified t face ((:foreground "white") (:background "#CE4045"))) 58 59 (fontified t face font-lock-string-face) 59 60 (fontified t) 60 61 (fontified t face font-lock-string-face) 61 68 (fontified t face ((:foreground "black") (:background "#9FCA56"))) 68 69 (fontified t face font-lock-string-face) 69 70 (fontified t) 70 71 (fontified t face font-lock-string-face) 71 78 (fontified t face ((:foreground "black") (:background "#DCCD69"))) 78 79 (fontified t face font-lock-string-face) 79 80 (fontified t) 80 81 (fontified t face font-lock-string-face) 81 88 (fontified t face ((:foreground "black") (:background "#55B5DB"))) 88 89 (fontified t face font-lock-string-face) 89 90 (fontified t) 90 91 (fontified t face font-lock-string-face) 91 98 (fontified t face ((:foreground "black") (:background "#A074C4"))) 98 99 (fontified t face font-lock-string-face) 99 100 (fontified t) 100 101 (fontified t face font-lock-string-face) 101 108 (fontified t face ((:foreground "black") (:background "#55B5DB"))) 108 109 (fontified t face font-lock-string-face) 109 110 (fontified t) 110 111 (fontified t face font-lock-string-face) 111 118 (fontified t face ((:foreground "black") (:background "#D4D7D6"))) 118 119 (fontified t face font-lock-string-face) 119 120 (fontified t font-lock-face "rainbow-delimiters-depth-2-face" rear-nonsticky t) 120 121 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t)) #("(Linum-format \"%7i \")
" 0 1 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 1 14 (fontified t) 14 20 (face font-lock-string-face fontified t) 20 21 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 21 22 (fontified t)) #(";; Control file of which one to load" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 36 (face font-lock-comment-face fontified t)) #("AQUAMACS" 0 8 (face font-lock-comment-face fontified t)) #(";;-*- coding:utf-8; mode:emacs-lisp; -*-

;;; AQUAMACS
;;
;; Copyright (c) 2006 2007 2008 2009 2010 2011 Chao LU
;;
;; Author:  Chao LU <loochao@gmail.com>
;; URL:     http://www.princeton.edu/~chaol
;; Licence: GNU
;;
;; This file is not part of GNU Emacs.
;;
;; Commentary:
;; Control file of which one to load

" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 41 (face font-lock-comment-face fontified t) 41 42 (fontified t) 42 46 (face font-lock-comment-delimiter-face fontified t) 46 55 (face font-lock-comment-face fontified t) 55 57 (face font-lock-comment-delimiter-face fontified t) 57 58 (face font-lock-comment-face fontified t) 58 61 (face font-lock-comment-delimiter-face fontified t) 61 113 (face font-lock-comment-face fontified t) 113 115 (face font-lock-comment-delimiter-face fontified t) 115 116 (face font-lock-comment-face fontified t) 116 119 (face font-lock-comment-delimiter-face fontified t) 119 156 (face font-lock-comment-face fontified t) 156 159 (face font-lock-comment-delimiter-face fontified t) 159 200 (face font-lock-comment-face fontified t) 200 203 (face font-lock-comment-delimiter-face fontified t) 203 216 (face font-lock-comment-face fontified t) 216 218 (face font-lock-comment-delimiter-face fontified t) 218 219 (face font-lock-comment-face fontified t) 219 222 (face font-lock-comment-delimiter-face fontified t) 222 258 (face font-lock-comment-face fontified t) 258 260 (face font-lock-comment-delimiter-face fontified t) 260 261 (face font-lock-comment-face fontified t) 261 264 (face font-lock-comment-delimiter-face fontified t) 264 276 (face font-lock-comment-face fontified t) 276 279 (face font-lock-comment-delimiter-face fontified t) 279 313 (face font-lock-comment-face fontified t) 313 314 (fontified t)) "      (setq-default dotspacemacs-configuration-layers '(gnus))" "The best editor is neither Emacs nor Vim, it's Emacs *and* Vim! " #("s" 0 1 (fontified t)) #("(setq powerline-arrow-shape 'bar)
" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 32 (fontified t) 32 33 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 33 34 (fontified t)) #("(setq powerline-arrow-shape 'bar)" 0 1 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 1 32 (fontified t) 32 33 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t)) #("
" 0 1 (fontified t)) #("(load-file \"~/Dropbox/.emacs.dz/lch-dz-common.el\")" 0 1 (font-lock-face "rainbow-delimiters-depth-1-face" fontified t rear-nonsticky t) 1 11 (fontified t) 11 49 (face font-lock-string-face fontified t) 49 50 (font-lock-face "rainbow-delimiters-depth-1-face" fontified t rear-nonsticky t)) #("(setq spacemacs-directory \"~/Dropbox/.emacs.dz/spacemacs/\")

(setq user-emacs-directory spacemacs-directory)
(setq default-directory spacemacs-directory)
(load-file \"~/Dropbox/.emacs.dz/lch-dz-common.el\")
(setq package-user-dir (concat spacemacs-directory \"/elpa\"))

(setq powerline-arrow-shape 'bar)
(load-file \"~/Dropbox/.emacs.dz/spacemacs/init.el\")

(package-initialize)

" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 26 (fontified t) 26 58 (face font-lock-string-face fontified t) 58 59 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 59 61 (fontified t) 61 62 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 62 107 (fontified t) 107 108 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 108 109 (fontified t) 109 110 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 110 152 (fontified t) 152 153 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 153 154 (fontified t) 154 155 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 155 165 (fontified t) 165 203 (face font-lock-string-face fontified t) 203 204 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 204 205 (fontified t) 205 206 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 206 228 (fontified t) 228 229 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 229 256 (fontified t) 256 263 (face font-lock-string-face fontified t) 263 264 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 264 265 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 265 267 (fontified t) 267 268 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 268 299 (fontified t) 299 300 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 300 301 (fontified t) 301 302 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 302 312 (fontified t) 312 351 (face font-lock-string-face fontified t) 351 352 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 352 354 (fontified t) 354 355 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 355 373 (fontified t) 373 374 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 374 376 (fontified t)) #("(setq spacemacs-directory \"~/Dropbox/.emacs.dz/spacemacs/\")

(setq user-emacs-directory spacemacs-directory)
(setq default-directory spacemacs-directory)
(load-file \"~/Dropbox/.emacs.dz/lch-dz-common.el\")
(setq package-user-dir (concat spacemacs-directory \"/elpa\"))

(setq powerline-arrow-shape 'bar)
(load-file \"~/Dropbox/.emacs.dz/spacemacs/init.el\")

(package-initialize)

" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 26 (fontified t) 26 58 (face font-lock-string-face fontified t) 58 59 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 59 61 (fontified t) 61 62 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 62 107 (fontified t) 107 108 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 108 109 (fontified t) 109 110 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 110 152 (fontified t) 152 153 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 153 154 (fontified t) 154 155 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 155 165 (fontified t) 165 203 (face font-lock-string-face fontified t) 203 204 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 204 205 (fontified t) 205 206 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 206 228 (fontified t) 228 229 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 229 256 (fontified t) 256 263 (face font-lock-string-face fontified t) 263 264 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 264 265 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 265 267 (fontified t) 267 268 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 268 299 (fontified t) 299 300 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 300 301 (fontified t) 301 302 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 302 312 (fontified t) 312 351 (face font-lock-string-face fontified t) 351 352 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 352 354 (fontified t) 354 355 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 355 373 (fontified t) 373 374 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 374 376 (fontified t)) #("(load-file \"~/Dropbox/.emacs.dz/lch-dz-common.el\")
(setq package-user-dir (concat spacemacs-directory \"/elpa\"))

(setq powerline-arrow-shape 'bar)" 0 1 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 1 11 (fontified t) 11 49 (fontified t face font-lock-string-face) 49 50 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 50 51 (fontified t) 51 52 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 52 74 (fontified t) 74 75 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 75 102 (fontified t) 102 109 (face font-lock-string-face fontified t) 109 110 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face" fontified t) 110 111 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t) 114 145 (fontified t) 145 146 (fontified t font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t)) #("(load-file)" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 10 (fontified t) 10 11 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t)) #("(load-fi)" 0 1 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t) 1 8 (fontified t) 8 9 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t)) #("#+TITLE:       Main Google calendar entries" 0 8 (face org-document-info-keyword font-lock-fontified t org-category "google" fontified t) 8 15 (org-category "google" fontified t) 15 43 (face org-document-title font-lock-fontified t org-category "google" fontified t)) #("princebia10" 0 11 (org-category "iPrv" fontified t)) #("6099377886" 0 10 (org-category "iPrv" fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) #("! External Pressure = 20
" 0 24 (yank-handler (evil-yank-line-handler)) 24 25 (yank-handler (evil-yank-line-handler) fontified t)) #("H" 0 1 (fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) "    Header
      CHECK KEYWORDS Warn
      Mesh DB \".\" \".\"
      Include Path \"\"
      Results Directory \"\"
    End

    Simulation
      Max Output Level = 4
      Coordinate System = Cartesian
      Coordinate Mapping(3) = 1 2 3
      !Coordinate Scaling(3) = Real 2.5 2.5 2.5
      Simulation Type = Transient
      Output Intervals(2) = 1 1
      Timestep intervals(2) = 20 20
      Timestep Sizes(2) = 0.05 0.05
      Steady State Max Iterations = 20
      Solver Input File = case.sif
      Post File = case.ep
    End

    Constants
      Gravity(4) = 0 -1 0 9.82
      Stefan Boltzmann = 5.67e-08
      Permittivity of Vacuum = 8.8542e-12
      Boltzmann Constant = 1.3807e-23
      Unit Charge = 1.602e-19
    End

    Body 1
      Name = \"Body 1\"
      Equation = 1
      Material = 1
      Initial condition = 1
    End

    Solver 1
      Equation = Navier-Stokes
      Variable = Flow Solution[Velocity:3 Pressure:1]
      Bubbles = False
      !
      Stabilize = True
      Steady State Convergence Tolerance = 1.0e-5
      Nonlinear System Convergence Tolerance = 1.0e-4
      Nonlinear System Max Iterations = 15
      Nonlinear System Newton After Iterations = 10
      Nonlinear System Newton After Tolerance = 1.0e-3
      Nonlinear System Relaxation Factor = 1
      Linear System Solver = Iterative
      Linear System Iterative Method = BiCGStab
      Linear System Max Iterations = 500
      Linear System Convergence Tolerance = 1.0e-4
      Linear System Preconditioning = ILU2
      Linear System Residual Output = 1
    End

    Solver 2
      Exec Solver = after timestep
      Procedure = File \"SaveData\" \"SaveMaterials\"
      Parameter 1 = String Dichte
    End

    Equation 1
      Name = \"NS\"
      Navier-Stokes = Logical true
      Convection = String \"None\"
      !NS Convect = False
      Active Solvers(2) = 1 2
    End

    Initial Condition 1
      Name = \"Anfangsdruck\"
      Velocity 2 = 0
      Velocity 1 = 0
      Pressure = 100000
    End

    Material 1
      Name = \"Lubricant oil (coarse values)\"
      Heat Conductivity = 0.128
      Reference Temperature = 293
      Heat Capacity = 2093
      !Density = Variable Pressure
      !  Real
      !  -500000  0.01
      !  0        0.01
      !  500      0.77
      !  100000   0.86
      !  1000000  0.86
      !  End
      Dichte = Variable Pressure
        Real MATC \"max(0.0001 866/(1+0.09*(1/tx)))\"
      Density = Variable Pressure
        Real MATC \"max(0.0001 866/(1+0.09*(1/tx)))\"
      Compressibility Model = User Defined
      Save Materials = Logical true
      Viscosity = 20.0e-3
      !Viscosity = 20.0e-6
    End

    Boundary Condition 1
      Target Boundaries(1) = 2
      Name = \"Einlass\"
      !External Pressure = Variable Time;  MATC \"-100000 - 900000*tx\"
      External Pressure = Variable Time
        Real
        -1 .100000
        0  -100000
        10 -200000
        40 -500000
        End
      Velocity 1 = 0
      Velocity 2 = 0
    End

    Boundary Condition 2
      Target Boundaries(5) = 3 4 5 7 8
      Name = \"ruhende Waende\"
      !Noslip wall BC = on
      Velocity 1 = 0
      Velocity 2 = 0
      Velocity 3 = 0
    End

    Boundary Condition 3
      Target Boundaries(1) = 9
      Name = \"Auslass\"
      !External Pressure = Variable Time;  MATC \"-1000  - 1000*tx\"
      External Pressure = -100000
      Velocity 1 = 0
      Velocity 2 = 0
    End
" "13789" "External Pressure = 13789.5" #("External Pressure = 13789.5" 0 27 (fontified t)) "" "" #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) #("! End
" 0 6 (yank-handler (evil-yank-line-handler) fontified t)) #("  
" 0 3 (yank-handler (evil-yank-line-handler) fontified t)) #("! Velocity 1 = 0.0
" 0 19 (yank-handler (evil-yank-line-handler) fontified t)) #("! Target Boundaries = 4  
" 0 26 (yank-handler (evil-yank-line-handler) fontified t)) #("  
" 0 3 (yank-handler (evil-yank-line-handler) fontified t)) #("! Boundary Condition 3
" 0 23 (yank-handler (evil-yank-line-handler) fontified t)) #("! ! symmetriy
" 0 14 (yank-handler (evil-yank-line-handler) fontified t)) #("Velocity 3 = Real -0.00
" 0 23 (fontified t) 23 24 (fontified t)) #("Velocity 3 = Real 0.000001
" 0 26 (fontified t) 26 27 (fontified t)) "! Coordinate System = Axi Symmetric
" "13789.5" "Density = 1000.0
! Viscosity = 1    
Viscosity = 0.004
" "Name = \"Water (room temperature)\"
Viscosity = Real 1.002e-3
Density = Real 998.3 " #(" Steady State Convergence Tolerance = 1.0e-5
" 0 44 (fontified t) 44 45 (fontified t)) "  Nonlinear System Convergence Tolerance = 1.0e-4
  Nonlinear System Max Iterations = 15
  Nonlinear System Newton After Iterations = 10
  Nonlinear System Newton After Tolerance = 1.0e-3
  Nonlinear System Relaxation Factor = 1
  Linear System Solver = Iterative
  Linear System Iterative Method = BiCGStab
  Linear System Max Iterations = 500
  Linear System Convergence Tolerance = 1.0e-4
  Linear System Preconditioning = ILU2
  Linear System Residual Output = 1
" " Steady State Convergence Tolerance = 1.0e-5
" " Steady State Convergence Tolerance = 1.0e-5
  Nonlinear System Convergence Tolerance = 1.0e-4
  Nonlinear System Max Iterations = 15
  Nonlinear System Newton After Iterations = 10
  Nonlinear System Newton After Tolerance = 1.0e-3
  Nonlinear System Relaxation Factor = 1
  Linear System Solver = Iterative
  Linear System Iterative Method = BiCGStab
  Linear System Max Iterations = 500
  Linear System Convergence Tolerance = 1.0e-4
  Linear System Preconditioning = ILU2
  Linear System Residual Output = 1" #("4" 0 1 (fontified t)) #("Steady State Convergence Tolerance = 3.0e-3" 0 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t)) #("0" 0 1 (fontified t)) #("Iterative" 0 8 (fontified t) 8 9 (rear-nonsticky t fontified t)) #("Linear System Solver = Iterative" 0 13 (fontified t) 13 14 (fontified t) 14 32 (fontified t)) #(" " 0 1 (fontified t)) #("!" 0 1 (fontified t)) "" #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) #("
" 0 1 (fontified t)) ";; -*- mode: emacs-lisp -*-
;; This file is loaded by Spacemacs at startup.
;; It must be stored in your home directory.

(defun dotspacemacs/layers ()
  \"Configuration Layers declaration.\"
  (setq-default
   ;; List of additional paths where to look for configuration layers.
   ;; Paths must have a trailing slash (i.e. `~/.mycontribs/')
   dotspacemacs-configuration-layer-path '()
   ;; List of configuration layers to load. If it is the symbol `all' instead
   ;; of a list then all discovered layers will be installed.
   dotspacemacs-configuration-layers
   '(
     ;; ----------------------------------------------------------------
     ;; Example of useful layers you may want to use right away.
     ;; Uncomment some layer names and press <SPC f e R> (Vim style) or
     ;; <M-m f e R> (Emacs style) to install them.
     ;; ----------------------------------------------------------------
     (auto-completion :variables
                      auto-completion-enable-help-tooltip t
                      auto-completion-enable-snippets-in-popup t)
     better-defaults
     cb-org-reveal
     clojure
     colors
     eyebrowse
     emacs-lisp
     ;; emms
     (git :variables
          git-magit-status-fullscreen t
          git-enable-github-support t
          git-gutter-use-fringe t)
     github
     html
     javascript
     markdown
     (org :variables
          org-enable-github-support t)
     (shell :variables
            shell-default-height 30
            shell-default-position 'bottom
            shell-defult-shell 'eshell)     ;; SPC ' opens eshell in popup
     syntax-checking
     themes-megapack
     version-control
     )
   ;; List of additional packages that will be installed without being
   ;; wrapped in a layer. If you need some configuration for these
   ;; packages then consider to create a layer, you can also put the
   ;; configuration in `dotspacemacs/config'.
   dotspacemacs-additional-packages '()
   ;; A list of packages and/or extensions that will not be install and loaded.
   dotspacemacs-excluded-packages '()
   ;; If non-nil spacemacs will delete any orphan packages, i.e. packages that
   ;; are declared in a layer which is not a member of
   ;; the list `dotspacemacs-configuration-layers'
   dotspacemacs-delete-orphan-packages t))

(defun dotspacemacs/init ()
  \"Initialization function.
This function is called at the very startup of Spacemacs initialization
before layers configuration.\"
  ;; This setq-default sexp is an exhaustive list of all the supported
  ;; spacemacs settings.
  (setq-default
   ;; Either `vim' or `emacs'. Evil is always enabled but if the variable
   ;; is `emacs' then the `holy-mode' is enabled at startup.
   dotspacemacs-editing-style 'emacs
   ;; If non nil output loading progress in `*Messages*' buffer.
   dotspacemacs-verbose-loading nil
   ;; Specify the startup banner. Default value is `official', it displays
   ;; the official spacemacs logo. An integer value is the index of text
   ;; banner, `random' chooses a random text banner in `core/banners'
   ;; directory. A string value must be a path to an image format supported
   ;; by your Emacs build.
   ;; If the value is nil then no banner is displayed.
   dotspacemacs-startup-banner 'official
   ;; List of items to show in the startup buffer. If nil it is disabled.
   ;; Possible values are: `recents' `bookmarks' `projects'.\"
   dotspacemacs-startup-lists '(recents bookmarks projects)
   ;; List of themes, the first of the list is loaded when spacemacs starts.
   ;; Press <SPC> T n to cycle to the next theme in the list (works great
   ;; with 2 themes variants, one dark and one light)
   dotspacemacs-themes '(cyberpunk
                         solarized-light
                         solarized-dark
                         leuven
                         monokai
                         zenburn
                         phoenix-dark-mono)
   ;; If non nil the cursor color matches the state color.
   dotspacemacs-colorize-cursor-according-to-state t
   ;; Default font. `powerline-scale' allows to quickly tweak the mode-line
   ;; size to make separators look not too crappy.
   dotspacemacs-default-font '(\"Ubuntu Mono\"
                               :size 20
                               :weight normal
                               :width normal
                               :powerline-scale 1.1)
   ;; The leader key
   dotspacemacs-leader-key \"SPC\"
   ;; The leader key accessible in `emacs state' and `insert state'
   dotspacemacs-emacs-leader-key \"M-m\"
   ;; Major mode leader key is a shortcut key which is the equivalent of
   ;; pressing `<leader> m`. Set it to `nil` to disable it.
   dotspacemacs-major-mode-leader-key \",\"
   ;; Major mode leader key accessible in `emacs state' and `insert state'
   dotspacemacs-major-mode-emacs-leader-key \"C-M-m\"
   ;; The command key used for Evil commands (ex-commands) and
   ;; Emacs commands (M-x).
   ;; By default the command key is `:' so ex-commands are executed like in Vim
   ;; with `:' and Emacs commands are executed with `<leader> :'.
   dotspacemacs-command-key \":\"
   ;; Location where to auto-save files. Possible values are `original' to
   ;; auto-save the file in-place, `cache' to auto-save the file to another
   ;; file stored in the cache directory and `nil' to disable auto-saving.
   ;; Default value is `cache'.
   dotspacemacs-auto-save-file-location 'cache
   ;; If non nil then `ido' replaces `helm' for some commands. For now only
   ;; `find-files' (SPC f f) is replaced.
   dotspacemacs-use-ido nil
   ;; If non nil the paste micro-state is enabled. When enabled pressing `p`
   ;; several times cycle between the kill ring content.
   dotspacemacs-enable-paste-micro-state nil
   ;; Guide-key delay in seconds. The Guide-key is the popup buffer listing
   ;; the commands bound to the current keystrokes.
   dotspacemacs-guide-key-delay 0.4
   ;; If non nil a progress bar is displayed when spacemacs is loading. This
   ;; may increase the boot time on some systems and emacs builds, set it to
   ;; nil ;; to boost the loading time.
   dotspacemacs-loading-progress-bar t
   ;; If non nil the frame is fullscreen when Emacs starts up.
   ;; (Emacs 24.4+ only)
   dotspacemacs-fullscreen-at-startup t
   ;; If non nil `spacemacs/toggle-fullscreen' will not use native fullscreen.
   ;; Use to disable fullscreen animations in OSX.\"
   dotspacemacs-fullscreen-use-non-native nil
   ;; If non nil the frame is maximized when Emacs starts up.
   ;; Takes effect only if `dotspacemacs-fullscreen-at-startup' is nil.
   ;; (Emacs 24.4+ only)
   dotspacemacs-maximized-at-startup nil
   ;; A value from the range (0..100), in increasing opacity, which describes
   ;; the transparency level of a frame when it's active or selected.
   ;; Transparency can be toggled through `toggle-transparency'.
   dotspacemacs-active-transparency 90
   ;; A value from the range (0..100), in increasing opacity, which describes
   ;; the transparency level of a frame when it's inactive or deselected.
   ;; Transparency can be toggled through `toggle-transparency'.
   dotspacemacs-inactive-transparency 90
   ;; If non nil unicode symbols are displayed in the mode line.
   dotspacemacs-mode-line-unicode-symbols t
   ;; If non nil smooth scrolling (native-scrolling) is enabled. Smooth
   ;; scrolling overrides the default behavior of Emacs which recenters the
   ;; point when it reaches the top or bottom of the screen.
   dotspacemacs-smooth-scrolling t
   ;; If non-nil smartparens-strict-mode will be enabled in programming modes.
   dotspacemacs-smartparens-strict-mode t
   ;; Select a scope to highlight delimiters. Possible values are `any',
   ;; `current', `all' or `nil'. Default is `all' (highlight any scope and
   ;; emphasis the current one).
   dotspacemacs-highlight-delimiters 'all
   ;; If non nil advises quit functions to keep server open when quitting.
   dotspacemacs-persistent-server t
   ;; List of search tool executable names. Spacemacs uses the first installed
   ;; tool of the list. Supported tools are `ag', `pt', `ack' and `grep'.
   dotspacemacs-search-tools '(\"ag\" \"pt\" \"ack\" \"grep\")
   ;; The default package repository used if no explicit repository has been
   ;; specified with an installed package.
   ;; Not used for now.
   dotspacemacs-default-package-repository nil
   )
  ;; User initialization goes here
  )

(defun dotspacemacs/config ()
  \"Configuration function.
 This function is called at the very end of Spacemacs initialization after
layers configuration.\"

  ;; Clojure
  ;; Pretty symbols for anonymous functions, set literals and partial functions
  (setq clojure-enable-fancify-symbols t)

  ;; SmartParens
  ;; (define-key smartparens-mode-map (kbd \"your-key\") 'function)
  ;; jr0cket: kill sexp the smartparens way, overrides kill-sexp when smartparens mode is on
  ;;  (define-key smartparens-mode-map (kbd \"C-M k\") 'sp-kill-sexp) - just enable strict mode


  ;; jr0cket: text scaling keybindings
  (define-key global-map (kbd \"C-+\") 'text-scale-increase)
  (define-key global-map (kbd \"C--\") 'text-scale-decrease)
  (define-key global-map (kbd \"C-)\") 'sp-forward-slurp-sexp)
  (define-key global-map (kbd \"C-(\") 'sp-backward-slurp-sexp)
  (define-key global-map (kbd \"M-)\") 'sp-forward-barf-sexp)
  (define-key global-map (kbd \"M-(\") 'sp-backward-barf-sexp)

  ;; jr0cket: keybindings for cycling buffers
  (global-set-key [C-prior] 'previous-buffer)
  (global-set-key [C-next] 'next-buffer)

  ;; jr0cket: Remap multiple cursors to a pattern that is easier to remember
  (define-key global-map (kbd \"C-c m c\") 'mc/edit-lines)

  ;; Remap undo to overwrite the Emacs GUI window hide key
  ;; as the backslash character is used to escape in Emacs, we need to escape it with another backslash
  (define-key global-map (kbd \"C-\\\\\") 'undo-tree-undo)
  (define-key global-map (kbd \"M-\\\\\") 'undo-tree-redo)

  ;; jr0cket: Org-mode

  ;;; Should write a toggle function to show descriptive or literate links in Org-mode
  ;;(setq org-descriptive-links nil)

  ;; Define the location of the file to hold tasks
  (setq org-default-notes-file \"~/Dropbox/todo-list.org\")

  ;; Define a kanban style set of stages for todo tasks
  (setq org-todo-keywords
        '((sequence \"TODO\" \"DOING\" \"BLOCKED\" \"REVIEW\" \"|\" \"DONE\" \"ARCHIVED\")))

  ;; Setting Colours (faces) for todo states to give clearer view of work
  (setq org-todo-keyword-faces
        '((\"TODO\" . org-warning)
          (\"DOING\" . \"yellow\")
          (\"BLOCKED\" . \"red\")
          (\"REVIEW\" . \"orange\")
          (\"DONE\" . \"green\")
          (\"ARCHIVED\" .  \"blue\")))

  ;; Progress Logging
  ;; When a TODO item enters DONE, add a CLOSED: property with current date-time stamp
  (setq org-log-done 'time)
)

;; Do not write anything past this comment. This is where Emacs will
;; auto-generate custom variable definitions.
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(Linum-format \"%7i \")
 '(ahs-case-fold-search nil)
 '(ahs-default-range (quote ahs-range-whole-buffer))
 '(ahs-idle-interval 0.25)
 '(ahs-idle-timer 0 t)
 '(ahs-inhibit-face-list nil)
 '(ansi-color-faces-vector
   [default bold shadow italic underline bold bold-italic bold])
 '(ansi-term-color-vector
   [unspecified \"#151718\" \"#CE4045\" \"#9FCA56\" \"#DCCD69\" \"#55B5DB\" \"#A074C4\" \"#55B5DB\" \"#D4D7D6\"])
 '(background-color \"#202020\")
 '(background-mode dark)
 '(compilation-message-face (quote default))
 '(cua-global-mark-cursor-color \"#2aa198\")
 '(cua-normal-cursor-color \"#839496\")
 '(cua-overwrite-cursor-color \"#b58900\")
 '(cua-read-only-cursor-color \"#859900\")
 '(cursor-color \"#cccccc\")
 '(cursor-type (quote bar))
 '(fci-rule-character-color \"#202020\")
 '(foreground-color \"#cccccc\")
 '(frame-brackground-mode (quote dark))
 '(fringe-mode 6 nil (fringe))
 '(highlight-changes-colors (quote (\"#d33682\" \"#6c71c4\")))
 '(highlight-symbol-colors
   (--map
    (solarized-color-blend it \"#002b36\" 0.25)
    (quote
     (\"#b58900\" \"#2aa198\" \"#dc322f\" \"#6c71c4\" \"#859900\" \"#cb4b16\" \"#268bd2\"))))
 '(highlight-symbol-foreground-color \"#93a1a1\")
 '(highlight-tail-colors
   (quote
    ((\"#073642\" . 0)
     (\"#546E00\" . 20)
     (\"#00736F\" . 30)
     (\"#00629D\" . 50)
     (\"#7B6000\" . 60)
     (\"#8B2C02\" . 70)
     (\"#93115C\" . 85)
     (\"#073642\" . 100))))
 '(hl-bg-colors
   (quote
    (\"#7B6000\" \"#8B2C02\" \"#990A1B\" \"#93115C\" \"#3F4D91\" \"#00629D\" \"#00736F\" \"#546E00\")))
 '(hl-fg-colors
   (quote
    (\"#002b36\" \"#002b36\" \"#002b36\" \"#002b36\" \"#002b36\" \"#002b36\" \"#002b36\" \"#002b36\")))
 '(hl-paren-background-colors (quote (\"#2492db\" \"#95a5a6\" nil)))
 '(hl-paren-colors (quote (\"#ecf0f1\" \"#ecf0f1\" \"#c0392b\")))
 '(linum-format \" %7d \" t)
 '(magit-diff-use-overlays nil)
 '(main-line-color1 \"#1E1E1E\")
 '(main-line-color2 \"#111111\")
 '(main-line-separator-style (quote chamfer))
 '(pos-tip-background-color \"#36473A\")
 '(pos-tip-foreground-color \"#FFFFC8\")
 '(powerline-color1 \"#1E1E1E\")
 '(powerline-color2 \"#111111\")
 '(rainbow-identifiers-cie-l*a*b*-lightness 70)
 '(rainbow-identifiers-cie-l*a*b*-saturation 20)
 '(ring-bell-function (quote ignore) t)
 '(safe-local-variable-values
   (quote
    ((eval when
           (fboundp
            (quote rainbow-mode))
           (rainbow-mode 1)))))
 '(smartrep-mode-line-active-bg (solarized-color-blend \"#859900\" \"#073642\" 0.2))
 '(sml/active-background-color \"#34495e\")
 '(sml/active-foreground-color \"#ecf0f1\")
 '(sml/inactive-background-color \"#dfe4ea\")
 '(sml/inactive-foreground-color \"#34495e\")
 '(term-default-bg-color \"#002b36\")
 '(term-default-fg-color \"#839496\")
 '(vc-annotate-background nil)
 '(vc-annotate-color-map
   (quote
    ((20 . \"#dc322f\")
     (40 . \"#cb4b16\")
     (60 . \"#b58900\")
     (80 . \"#859900\")
     (100 . \"#2aa198\")
     (120 . \"#268bd2\")
     (140 . \"#d33682\")
     (160 . \"#6c71c4\")
     (180 . \"#dc322f\")
     (200 . \"#cb4b16\")
     (220 . \"#b58900\")
     (240 . \"#859900\")
     (260 . \"#2aa198\")
     (280 . \"#268bd2\")
     (300 . \"#d33682\")
     (320 . \"#6c71c4\")
     (340 . \"#dc322f\")
     (360 . \"#cb4b16\"))))
 '(vc-annotate-very-old-color nil)
 '(weechat-color-list
   (quote
    (unspecified \"#002b36\" \"#073642\" \"#990A1B\" \"#dc322f\" \"#546E00\" \"#859900\" \"#7B6000\" \"#b58900\" \"#00629D\" \"#268bd2\" \"#93115C\" \"#d33682\" \"#00736F\" \"#2aa198\" \"#839496\" \"#657b83\"))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(company-tooltip-common ((t (:inherit company-tooltip :weight bold :underline nil))))
 '(company-tooltip-common-selection ((t (:inherit company-tooltip-selection :weight bold :underline nil))))
 '(font-lock-doc-face ((t (:inherit font-lock-string-face)))))
" #("(defun dotspacemacs/config ()
  \"Configuration function.
 This function is called at the very end of Spacemacs initialization after
layers configuration.\"
)" 0 1 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face") 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 26 (face font-lock-function-name-face fontified t) 26 27 (fontified t) 27 28 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 28 29 (fontified t rear-nonsticky t font-lock-face "rainbow-delimiters-depth-2-face") 29 30 (fontified t) 30 32 (fontified t) 32 56 (fontified t face font-lock-string-face) 56 57 (fontified t) 57 131 (fontified t) 131 132 (fontified t) 132 153 (fontified t) 153 154 (fontified t face font-lock-string-face) 154 155 (fontified t) 155 156 (font-lock-face "rainbow-delimiters-unmatched-face" rear-nonsticky t fontified t)) "(defun dotspacemacs/user-config ()
  \"This is were you can ultimately override default Spacemacs configuration.
This function is called at the very end of Spacemacs initialization.\"
  (global-hl-line-mode -1)
  (setq powerline-default-separator 'bar)
  ;; (setq dotspacemacs-configuration-layers '(extra-langs auctex
  ;;                                                       company-mode git c-c++ haskell html javascript ruby ycmd
  ;;                                                       smex dash colors markdown finance))
  )

" #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) "  Coordinate System = Cartesian 3D" #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) ";; (evil-leader/set-key
;;   \"ci\" 'evilnc-comment-or-uncomment-lines
;;   \"cl\" 'evilnc-quick-comment-or-uncomment-to-the-line
;;   \"ll\" 'evilnc-quick-comment-or-uncomment-to-the-line
;;   \"cc\" 'evilnc-copy-and-comment-lines
;;   \"cp\" 'evilnc-comment-or-uncomment-paragraphs
;;   \"cr\" 'comment-or-uncomment-region
;;   \"cv\" 'evilnc-toggle-invert-comment-line-by-line
;;   \"\\\\\" 'evilnc-comment-operator
;;   )" "                                                                 (0.104.8)" #(" " 0 1 (fontified t face font-lock-comment-face)) "(defun spacemacs/toggle-fullscreen ()
  \"Toggle full screen on X11 and Carbon\"
  (interactive)
  (cond
   ((eq window-system 'x)
    (set-frame-parameter nil 'fullscreen
                         (when (not (frame-parameter nil 'fullscreen))
                           'fullboth)))
   ((eq window-system 'mac)
    (set-frame-parameter
     nil 'fullscreen
     (when (not (frame-parameter nil 'fullscreen)) 'fullscreen)))))" #("*** ACTIVE Track BB shirts                                                            :#B:
[2015-11-26 Thu 17:10]
" 0 2 (org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t face org-hide) 2 4 (org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t face org-level-3) 4 10 (org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t face (:foreground "Cyan" :weight bold)) 10 86 (org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t face org-level-3) 86 87 (org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t face (org-tag org-level-3) org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 87 89 (font-lock-fontified t org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t face (:foreground "Pink" :weight bold) org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 89 90 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t face (org-tag org-level-3) org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 90 91 (org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t) 91 92 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) face org-date) 92 112 (org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) face org-date) 112 113 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) face org-date) 113 114 (org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t)) #("*** ACTIVE Track BB shirts                                                            :#B:
[2015-11-26 Thu 17:10]
" 0 2 (org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t face org-hide) 2 4 (org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t face org-level-3) 4 10 (org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t face (:foreground "Cyan" :weight bold)) 10 86 (org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t face org-level-3) 86 87 (org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t face (org-tag org-level-3) org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 87 89 (font-lock-fontified t org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t face (:foreground "Pink" :weight bold) org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 89 90 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t face (org-tag org-level-3) org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 90 91 (org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t) 91 92 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) face org-date) 92 112 (org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) face org-date) 112 113 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) face org-date) 113 114 (org-category #("TODO-#B" 0 7 (fontified t face org-property-value org-category "iPrv" org-category-position 2288)) org-category-position 2288 fontified t)) #("*** ACTIVE Ch
[2015-12-31 Thu 01:58]
" 0 2 (fontified t face org-hide) 2 4 (fontified t face org-level-3) 4 10 (fontified t face (:foreground "Cyan" :weight bold)) 10 13 (fontified t face org-level-3) 13 14 (fontified t) 14 15 (font-lock-face "rainbow-delimiters-depth-1-face" rear-nonsticky t fontified t org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) face org-date) 15 35 (fontified t org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) face org-date) 35 36 (rear-nonsticky t font-lock-face "rainbow-delimiters-depth-1-face" fontified t org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) face org-date) 36 37 (fontified t)) #("                                                                         :#B:" 0 73 (fontified t face org-level-3) 73 74 (fontified t face (org-tag org-level-3) org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 74 76 (font-lock-fontified t fontified t face (:foreground "Pink" :weight bold) org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 76 77 (rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t face (org-tag org-level-3) org-no-flyspell t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)))) "bed side table" "C罗：这辈子梅西了" "随着微电子和光电技术的发展，微型激光陀螺得到普遍应用，伊朗可以轻易在国际市场采购。高精度导航系统使其精度得到大幅提高，作战效能相比飞毛腿导弹提高了十几倍，少量发射即可取得较大战果" #("
" 0 1 (fontified t)) "1) The smaller the viscosity the more nonlinear the system is and the more problematic is it to find a solution. The test case is for \"syrap\" just so that it would be quick to solve. For smaller viscosity you need denser mesh, smaller timesteps etc. Go gradually to smaller viscosities so you see the effect.

2) In principle the free surface could also be an internal one. Sometimes you may get in problems with N-S if you have just Dirichlet conditions for the normal velocity. As the fluid is incompressible it can only have a solution if the discrete sum of the incoming stuff is exactly zero." #("ERROR:: ElementMetric: Degenerate 3D element: 191" 0 49 (front-sticky (field inhibit-line-move-field-capture) rear-nonsticky t field output inhibit-line-move-field-capture t fontified t face font-lock-string-face)) #("0" 0 1 (fontified t)) #("0" 0 1 (fontified t)) #("2" 0 1 (fontified t)) #("! NoSlip Wall BC = on
" 0 2 (fontified t yank-handler (evil-yank-line-handler)) 2 20 (fontified t yank-handler (evil-yank-line-handler)) 20 21 (fontified t rear-nonsticky t yank-handler (evil-yank-line-handler)) 21 22 (fontified t rear-nonsticky t yank-handler (evil-yank-line-handler))) "  Viscosity = 1" #("NoSlip Wall BC = on
" 0 18 (fontified t) 18 19 (rear-nonsticky t fontified t) 19 20 (fontified t)) "NoSlip Wall BC = on" #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("


" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("Downloads/" 0 10 (fontified t)) #("  
" 0 3 (fontified t yank-handler (evil-yank-line-handler))) #("  
" 0 3 (fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("Slip Coefficient 2 = 2e-4" 0 1 (fontified t) 1 25 (fontified t)) #("  Velocity 3 = 1.0
  Calculate Fluidic Force = True" 0 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 50 (fontified t) 50 51 (fontified t rear-nonsticky t)) #("  Name = \"bc_moving\" 
  Target Boundaries = 4
" 0 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 45 (fontified t) 45 46 (fontified t)) #("!" 0 1 (fontified t)) #("bak" 0 3 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) "  Name = \"bc_moving\" 
  Target Boundaries = 4

  Slip Coefficient 1 = 2e-4
  Slip Coefficient 2 = 2e-4
  Velocity 3 = 1.0
  Calculate Fluidic Force = True" "  Slip Coefficient 1 = 2e-4
  Slip Coefficient 2 = 2e-4" #("v2" 0 2 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) "  Coordinate System = Cartesian 3D" #("bak" 0 3 (mouse-face highlight help-echo diredp-mouseover-help dired-filename t fontified t face diredp-file-name)) #("Copy of " 0 5 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight) 5 8 (face diredp-file-name fontified t dired-filename t help-echo diredp-mouseover-help mouse-face highlight)) #("




" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) #("  
" 0 3 (fontified t)) #("
" 0 1 (fontified t)) #("the \"Normal-Tangential velocity = True\" flag, which ensures that the flow
doesn't pass through the wall." 0 104 (fontified t)) #("Normal-Tangential Velocity = True
" 0 33 (fontified t) 33 34 (fontified t))))
(setq search-ring '("win32" "dot" "cou" "org" "dump" "emm" "tex" "rese" "p" "pap" "t" "font" "dimni" "win" "core" "theme"))
(setq regexp-search-ring '("\\<
\\>" "pro" ".*copy" ".*copy.*" ".*" ".\\(el\\)$" ".\\(uvz\\)$" "*.*" "\\<=\"/\\>" "to" "itsel" "method" "Crea*" "*" "\\_<{Tanaka\\_>" "tanaka:1998ww"))
